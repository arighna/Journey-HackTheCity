/*******************************************************************************
!                             INTEL CONFIDENTIAL
!   Copyright(C) 1999-2004 Intel Corporation. All Rights Reserved.
!   The source code contained  or  described herein and all documents related to
!   the source code ("Material") are owned by Intel Corporation or its suppliers
!   or licensors.  Title to the  Material remains with  Intel Corporation or its
!   suppliers and licensors. The Material contains trade secrets and proprietary
!   and  confidential  information of  Intel or its suppliers and licensors. The
!   Material  is  protected  by  worldwide  copyright  and trade secret laws and
!   treaty  provisions. No part of the Material may be used, copied, reproduced,
!   modified, published, uploaded, posted, transmitted, distributed or disclosed
!   in any way without Intel's prior express written permission.
!   No license  under any  patent, copyright, trade secret or other intellectual
!   property right is granted to or conferred upon you by disclosure or delivery
!   of the Materials,  either expressly, by implication, inducement, estoppel or
!   otherwise.  Any  license  under  such  intellectual property  rights must be
!   express and approved by Intel in writing.
!
!*******************************************************************************
!  Content:
!      Intel(R) Math Kernel Library (MKL) interface for LAPACK routines and
!      functions for single precision data
!******************************************************************************/

#ifndef _MKL_LAPACK_S_H_
#define _MKL_LAPACK_S_H_

#include "mkl_types.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

void    CBDSQR(char *uplo,int *n,int *ncvt,int *nru,int *ncc,float *d,float *e, MKL_Complex8 *vt,int *ldvt, MKL_Complex8 *u,int *ldu, MKL_Complex8 *c,int *ldc,float *rwork,int *info);
void    cbdsqr(char *uplo,int *n,int *ncvt,int *nru,int *ncc,float *d,float *e, MKL_Complex8 *vt,int *ldvt, MKL_Complex8 *u,int *ldu, MKL_Complex8 *c,int *ldc,float *rwork,int *info);
void    CGBBRD(char *vect,int *m,int *n,int *ncc,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,float *d,float *e, MKL_Complex8 *q,int *ldq, MKL_Complex8 *pt,int *ldpt, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,float *rwork,int *info);
void    cgbbrd(char *vect,int *m,int *n,int *ncc,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,float *d,float *e, MKL_Complex8 *q,int *ldq, MKL_Complex8 *pt,int *ldpt, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,float *rwork,int *info);
void    CGBCON(char *norm,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    cgbcon(char *norm,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    CGBEQU(int *m,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,float *r,float *c,float *rowcnd,float *colcnd,float *amax,int *info);
void    cgbequ(int *m,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,float *r,float *c,float *rowcnd,float *colcnd,float *amax,int *info);
void    CGBRFS(char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *afb,int *ldafb,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cgbrfs(char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *afb,int *ldafb,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CGBSV(int *n,int *kl,int *ku,int *nrhs, MKL_Complex8 *ab,int *ldab,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    cgbsv(int *n,int *kl,int *ku,int *nrhs, MKL_Complex8 *ab,int *ldab,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CGBSVX(char *fact,char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *afb,int *ldafb,int *ipiv,char *equed,float *r,float *c, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cgbsvx(char *fact,char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *afb,int *ldafb,int *ipiv,char *equed,float *r,float *c, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CGBTF2(int *m,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,int *ipiv,int *info);
void    cgbtf2(int *m,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,int *ipiv,int *info);
void    CGBTRF(int *m,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,int *ipiv,int *info);
void    cgbtrf(int *m,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,int *ipiv,int *info);
void    CGBTRS(char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex8 *ab,int *ldab,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    cgbtrs(char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex8 *ab,int *ldab,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CGEBAK(char *job,char *side,int *n,int *ilo,int *ihi,float *scale,int *m, MKL_Complex8 *v,int *ldv,int *info);
void    cgebak(char *job,char *side,int *n,int *ilo,int *ihi,float *scale,int *m, MKL_Complex8 *v,int *ldv,int *info);
void    CGEBAL(char *job,int *n, MKL_Complex8 *a,int *lda,int *ilo,int *ihi,float *scale,int *info);
void    cgebal(char *job,int *n, MKL_Complex8 *a,int *lda,int *ilo,int *ihi,float *scale,int *info);
void    CGEBD2(int *m,int *n, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tauq, MKL_Complex8 *taup, MKL_Complex8 *work,int *info);
void    cgebd2(int *m,int *n, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tauq, MKL_Complex8 *taup, MKL_Complex8 *work,int *info);
void    CGEBRD(int *m,int *n, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tauq, MKL_Complex8 *taup, MKL_Complex8 *work,int *lwork,int *info);
void    cgebrd(int *m,int *n, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tauq, MKL_Complex8 *taup, MKL_Complex8 *work,int *lwork,int *info);
void    CGECON(char *norm,int *n, MKL_Complex8 *a,int *lda,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    cgecon(char *norm,int *n, MKL_Complex8 *a,int *lda,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    CGEEQU(int *m,int *n, MKL_Complex8 *a,int *lda,float *r,float *c,float *rowcnd,float *colcnd,float *amax,int *info);
void    cgeequ(int *m,int *n, MKL_Complex8 *a,int *lda,float *r,float *c,float *rowcnd,float *colcnd,float *amax,int *info);
void    CGEES(char *jobvs,char *sort,void *select,int *n, MKL_Complex8 *a,int *lda,int *sdim, MKL_Complex8 *w, MKL_Complex8 *vs,int *ldvs, MKL_Complex8 *work,int *lwork,float *rwork,void *bwork,int *info);
void    cgees(char *jobvs,char *sort,void *select,int *n, MKL_Complex8 *a,int *lda,int *sdim, MKL_Complex8 *w, MKL_Complex8 *vs,int *ldvs, MKL_Complex8 *work,int *lwork,float *rwork,void *bwork,int *info);
void    CGEESX(char *jobvs,char *sort,void *select,char *sense,int *n, MKL_Complex8 *a,int *lda,int *sdim, MKL_Complex8 *w, MKL_Complex8 *vs,int *ldvs,float *rconde,float *rcondv, MKL_Complex8 *work,int *lwork,float *rwork,void *bwork,int *info);
void    cgeesx(char *jobvs,char *sort,void *select,char *sense,int *n, MKL_Complex8 *a,int *lda,int *sdim, MKL_Complex8 *w, MKL_Complex8 *vs,int *ldvs,float *rconde,float *rcondv, MKL_Complex8 *work,int *lwork,float *rwork,void *bwork,int *info);
void    CGEEV(char *jobvl,char *jobvr,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *w, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cgeev(char *jobvl,char *jobvr,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *w, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CGEEVX(char *balanc,char *jobvl,char *jobvr,char *sense,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *w, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *ilo,int *ihi,float *scale,float *abnrm,float *rconde,float *rcondv, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cgeevx(char *balanc,char *jobvl,char *jobvr,char *sense,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *w, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *ilo,int *ihi,float *scale,float *abnrm,float *rconde,float *rcondv, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CGEGS(char *jobvsl,char *jobvsr,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vsl,int *ldvsl, MKL_Complex8 *vsr,int *ldvsr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cgegs(char *jobvsl,char *jobvsr,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vsl,int *ldvsl, MKL_Complex8 *vsr,int *ldvsr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CGEGV(char *jobvl,char *jobvr,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cgegv(char *jobvl,char *jobvr,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CGEHD2(int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cgehd2(int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CGEHRD(int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cgehrd(int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CGELQ2(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cgelq2(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CGELQF(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cgelqf(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CGELS(char *trans,int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *work,int *lwork,int *info);
void    cgels(char *trans,int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *work,int *lwork,int *info);
void    CGELSD(int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *s,float *rcond,int *rank, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *info);
void    cgelsd(int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *s,float *rcond,int *rank, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *info);
void    CGELSS(int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *s,float *rcond,int *rank, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cgelss(int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *s,float *rcond,int *rank, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CGELSX(int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *jpvt,float *rcond,int *rank, MKL_Complex8 *work,float *rwork,int *info);
void    cgelsx(int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *jpvt,float *rcond,int *rank, MKL_Complex8 *work,float *rwork,int *info);
void    CGELSY(int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *jpvt,float *rcond,int *rank, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cgelsy(int *m,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *jpvt,float *rcond,int *rank, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CGEQL2(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cgeql2(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CGEQLF(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cgeqlf(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CGEQP3(int *m,int *n, MKL_Complex8 *a,int *lda,int *jpvt, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cgeqp3(int *m,int *n, MKL_Complex8 *a,int *lda,int *jpvt, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CGEQPF(int *m,int *n, MKL_Complex8 *a,int *lda,int *jpvt, MKL_Complex8 *tau, MKL_Complex8 *work,float *rwork,int *info);
void    cgeqpf(int *m,int *n, MKL_Complex8 *a,int *lda,int *jpvt, MKL_Complex8 *tau, MKL_Complex8 *work,float *rwork,int *info);
void    CGEQR2(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cgeqr2(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CGEQRF(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cgeqrf(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CGERFS(char *trans,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cgerfs(char *trans,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CGERQ2(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cgerq2(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CGERQF(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cgerqf(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CGESC2(int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *rhs,int *ipiv,int *jpiv,float *scale);
void    cgesc2(int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *rhs,int *ipiv,int *jpiv,float *scale);
void    CGESDD(char *jobz,int *m,int *n, MKL_Complex8 *a,int *lda,float *s, MKL_Complex8 *u,int *ldu, MKL_Complex8 *vt,int *ldvt, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *info);
void    cgesdd(char *jobz,int *m,int *n, MKL_Complex8 *a,int *lda,float *s, MKL_Complex8 *u,int *ldu, MKL_Complex8 *vt,int *ldvt, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *info);
void    CGESV(int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    cgesv(int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CGESVD(char *jobu,char *jobvt,int *m,int *n, MKL_Complex8 *a,int *lda,float *s, MKL_Complex8 *u,int *ldu, MKL_Complex8 *vt,int *ldvt, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cgesvd(char *jobu,char *jobvt,int *m,int *n, MKL_Complex8 *a,int *lda,float *s, MKL_Complex8 *u,int *ldu, MKL_Complex8 *vt,int *ldvt, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CGESVX(char *fact,char *trans,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv,char *equed,float *r,float *c, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cgesvx(char *fact,char *trans,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv,char *equed,float *r,float *c, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CGETC2(int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *jpiv,int *info);
void    cgetc2(int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *jpiv,int *info);
void    CGETF2(int *m,int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *info);
void    cgetf2(int *m,int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *info);
void    CGETRF(int *m,int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *info);
void    cgetrf(int *m,int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *info);
void    CGETRI(int *n, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *work,int *lwork,int *info);
void    cgetri(int *n, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *work,int *lwork,int *info);
void    CGETRS(char *trans,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    cgetrs(char *trans,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CGGBAK(char *job,char *side,int *n,int *ilo,int *ihi,float *lscale,float *rscale,int *m, MKL_Complex8 *v,int *ldv,int *info);
void    cggbak(char *job,char *side,int *n,int *ilo,int *ihi,float *lscale,float *rscale,int *m, MKL_Complex8 *v,int *ldv,int *info);
void    CGGBAL(char *job,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *ilo,int *ihi,float *lscale,float *rscale,float *work,int *info);
void    cggbal(char *job,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *ilo,int *ihi,float *lscale,float *rscale,float *work,int *info);
void    CGGES(char *jobvsl,char *jobvsr,char *sort,void *selctg,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *sdim, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vsl,int *ldvsl, MKL_Complex8 *vsr,int *ldvsr, MKL_Complex8 *work,int *lwork,float *rwork,void *bwork,int *info);
void    cgges(char *jobvsl,char *jobvsr,char *sort,void *selctg,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *sdim, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vsl,int *ldvsl, MKL_Complex8 *vsr,int *ldvsr, MKL_Complex8 *work,int *lwork,float *rwork,void *bwork,int *info);
void    CGGESX(char *jobvsl,char *jobvsr,char *sort,void *selctg,char *sense,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *sdim, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vsl,int *ldvsl, MKL_Complex8 *vsr,int *ldvsr,float *rconde,float *rcondv, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *liwork,void *bwork,int *info);
void    cggesx(char *jobvsl,char *jobvsr,char *sort,void *selctg,char *sense,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *sdim, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vsl,int *ldvsl, MKL_Complex8 *vsr,int *ldvsr,float *rconde,float *rcondv, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *liwork,void *bwork,int *info);
void    CGGEV(char *jobvl,char *jobvr,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cggev(char *jobvl,char *jobvr,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CGGEVX(char *balanc,char *jobvl,char *jobvr,char *sense,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *ilo,int *ihi,float *lscale,float *rscale,float *abnrm,float *bbnrm,float *rconde,float *rcondv, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,void *bwork,int *info);
void    cggevx(char *balanc,char *jobvl,char *jobvr,char *sense,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *ilo,int *ihi,float *lscale,float *rscale,float *abnrm,float *bbnrm,float *rconde,float *rcondv, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,void *bwork,int *info);
void    CGGGLM(int *n,int *m,int *p, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *d, MKL_Complex8 *x, MKL_Complex8 *y, MKL_Complex8 *work,int *lwork,int *info);
void    cggglm(int *n,int *m,int *p, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *d, MKL_Complex8 *x, MKL_Complex8 *y, MKL_Complex8 *work,int *lwork,int *info);
void    CGGHRD(char *compq,char *compz,int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz,int *info);
void    cgghrd(char *compq,char *compz,int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz,int *info);
void    CGGLSE(int *m,int *n,int *p, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c, MKL_Complex8 *d, MKL_Complex8 *x, MKL_Complex8 *work,int *lwork,int *info);
void    cgglse(int *m,int *n,int *p, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c, MKL_Complex8 *d, MKL_Complex8 *x, MKL_Complex8 *work,int *lwork,int *info);
void    CGGQRF(int *n,int *m,int *p, MKL_Complex8 *a,int *lda, MKL_Complex8 *taua, MKL_Complex8 *b,int *ldb, MKL_Complex8 *taub, MKL_Complex8 *work,int *lwork,int *info);
void    cggqrf(int *n,int *m,int *p, MKL_Complex8 *a,int *lda, MKL_Complex8 *taua, MKL_Complex8 *b,int *ldb, MKL_Complex8 *taub, MKL_Complex8 *work,int *lwork,int *info);
void    CGGRQF(int *m,int *p,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *taua, MKL_Complex8 *b,int *ldb, MKL_Complex8 *taub, MKL_Complex8 *work,int *lwork,int *info);
void    cggrqf(int *m,int *p,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *taua, MKL_Complex8 *b,int *ldb, MKL_Complex8 *taub, MKL_Complex8 *work,int *lwork,int *info);
void    CGGSVD(char *jobu,char *jobv,char *jobq,int *m,int *n,int *p,int *k,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *alpha,float *beta, MKL_Complex8 *u,int *ldu, MKL_Complex8 *v,int *ldv, MKL_Complex8 *q,int *ldq, MKL_Complex8 *work,float *rwork,int *iwork,int *info);
void    cggsvd(char *jobu,char *jobv,char *jobq,int *m,int *n,int *p,int *k,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *alpha,float *beta, MKL_Complex8 *u,int *ldu, MKL_Complex8 *v,int *ldv, MKL_Complex8 *q,int *ldq, MKL_Complex8 *work,float *rwork,int *iwork,int *info);
void    CGGSVP(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *tola,float *tolb,int *k,int *l, MKL_Complex8 *u,int *ldu, MKL_Complex8 *v,int *ldv, MKL_Complex8 *q,int *ldq,int *iwork,float *rwork, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cggsvp(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *tola,float *tolb,int *k,int *l, MKL_Complex8 *u,int *ldu, MKL_Complex8 *v,int *ldv, MKL_Complex8 *q,int *ldq,int *iwork,float *rwork, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CGTCON(char *norm,int *n, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *du2,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    cgtcon(char *norm,int *n, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *du2,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    CGTRFS(char *trans,int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *dlf, MKL_Complex8 *df, MKL_Complex8 *duf, MKL_Complex8 *du2,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cgtrfs(char *trans,int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *dlf, MKL_Complex8 *df, MKL_Complex8 *duf, MKL_Complex8 *du2,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CGTSV(int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *b,int *ldb,int *info);
void    cgtsv(int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *b,int *ldb,int *info);
void    CGTSVX(char *fact,char *trans,int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *dlf, MKL_Complex8 *df, MKL_Complex8 *duf, MKL_Complex8 *du2,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cgtsvx(char *fact,char *trans,int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *dlf, MKL_Complex8 *df, MKL_Complex8 *duf, MKL_Complex8 *du2,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CGTTRF(int *n, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *du2,int *ipiv,int *info);
void    cgttrf(int *n, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *du2,int *ipiv,int *info);
void    CGTTRS(char *trans,int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *du2,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    cgttrs(char *trans,int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *du2,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CGTTS2(int *itrans,int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *du2,int *ipiv, MKL_Complex8 *b,int *ldb);
void    cgtts2(int *itrans,int *n,int *nrhs, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *du2,int *ipiv, MKL_Complex8 *b,int *ldb);
void    CHBEV(char *jobz,char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *info);
void    chbev(char *jobz,char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *info);
void    CHBEVD(char *jobz,char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    chbevd(char *jobz,char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    CHBEVX(char *jobz,char *range,char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *q,int *ldq,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *iwork,int *ifail,int *info);
void    chbevx(char *jobz,char *range,char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *q,int *ldq,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *iwork,int *ifail,int *info);
void    CHBGST(char *vect,char *uplo,int *n,int *ka,int *kb, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *bb,int *ldbb, MKL_Complex8 *x,int *ldx, MKL_Complex8 *work,float *rwork,int *info);
void    chbgst(char *vect,char *uplo,int *n,int *ka,int *kb, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *bb,int *ldbb, MKL_Complex8 *x,int *ldx, MKL_Complex8 *work,float *rwork,int *info);
void    CHBGV(char *jobz,char *uplo,int *n,int *ka,int *kb, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *bb,int *ldbb,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *info);
void    chbgv(char *jobz,char *uplo,int *n,int *ka,int *kb, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *bb,int *ldbb,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *info);
void    CHBGVD(char *jobz,char *uplo,int *n,int *ka,int *kb, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *bb,int *ldbb,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    chbgvd(char *jobz,char *uplo,int *n,int *ka,int *kb, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *bb,int *ldbb,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    CHBGVX(char *jobz,char *range,char *uplo,int *n,int *ka,int *kb, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *bb,int *ldbb, MKL_Complex8 *q,int *ldq,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *iwork,int *ifail,int *info);
void    chbgvx(char *jobz,char *range,char *uplo,int *n,int *ka,int *kb, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *bb,int *ldbb, MKL_Complex8 *q,int *ldq,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *iwork,int *ifail,int *info);
void    CHBTRD(char *vect,char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *d,float *e, MKL_Complex8 *q,int *ldq, MKL_Complex8 *work,int *info);
void    chbtrd(char *vect,char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *d,float *e, MKL_Complex8 *q,int *ldq, MKL_Complex8 *work,int *info);
void    CHECON(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    checon(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    CHEEV(char *jobz,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *w, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    cheev(char *jobz,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *w, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CHEEVD(char *jobz,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *w, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    cheevd(char *jobz,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *w, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    CHEEVR(char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz,int *isuppz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    cheevr(char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz,int *isuppz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    CHEEVX(char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *ifail,int *info);
void    cheevx(char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *ifail,int *info);
void    CHEGS2(int *itype,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    chegs2(int *itype,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    CHEGST(int *itype,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    chegst(int *itype,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    CHEGV(int *itype,char *jobz,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *w, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    chegv(int *itype,char *jobz,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *w, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CHEGVD(int *itype,char *jobz,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *w, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    chegvd(int *itype,char *jobz,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *w, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    CHEGVX(int *itype,char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *ifail,int *info);
void    chegvx(int *itype,char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *iwork,int *ifail,int *info);
void    CHERFS(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cherfs(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CHESV(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *work,int *lwork,int *info);
void    chesv(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *work,int *lwork,int *info);
void    CHESVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    chesvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CHETD2(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tau,int *info);
void    chetd2(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tau,int *info);
void    CHETF2(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *info);
void    chetf2(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *info);
void    CHETRD(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    chetrd(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CHETRF(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *work,int *lwork,int *info);
void    chetrf(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *work,int *lwork,int *info);
void    CHETRI(char *uplo,int *n,float *a,int *lda,int *ipiv,float *work,int *info);
void    chetri(char *uplo,int *n,float *a,int *lda,int *ipiv,float *work,int *info);
void    CHETRS(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    chetrs(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CHGEQZ(char *job,char *compq,char *compz,int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    chgeqz(char *job,char *compq,char *compz,int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CHPCON(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    chpcon(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    CHPEV(char *jobz,char *uplo,int *n, MKL_Complex8 *ap,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *info);
void    chpev(char *jobz,char *uplo,int *n, MKL_Complex8 *ap,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *info);
void    CHPEVD(char *jobz,char *uplo,int *n, MKL_Complex8 *ap,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    chpevd(char *jobz,char *uplo,int *n, MKL_Complex8 *ap,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    CHPEVX(char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *ap,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *iwork,int *ifail,int *info);
void    chpevx(char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *ap,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *iwork,int *ifail,int *info);
void    CHPGST(int *itype,char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *bp,int *info);
void    chpgst(int *itype,char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *bp,int *info);
void    CHPGV(int *itype,char *jobz,char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *bp,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *info);
void    chpgv(int *itype,char *jobz,char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *bp,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *info);
void    CHPGVD(int *itype,char *jobz,char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *bp,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    chpgvd(int *itype,char *jobz,char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *bp,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    CHPGVX(int *itype,char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *bp,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *iwork,int *ifail,int *info);
void    chpgvx(int *itype,char *jobz,char *range,char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *bp,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,float *rwork,int *iwork,int *ifail,int *info);
void    CHPRFS(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    chprfs(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CHPSV(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    chpsv(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CHPSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    chpsvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CHPTRD(char *uplo,int *n, MKL_Complex8 *ap,float *d,float *e, MKL_Complex8 *tau,int *info);
void    chptrd(char *uplo,int *n, MKL_Complex8 *ap,float *d,float *e, MKL_Complex8 *tau,int *info);
void    CHPTRF(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv,int *info);
void    chptrf(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv,int *info);
void    CHPTRI(char *uplo,int *n,float *ap,int *ipiv,float *work,int *info);
void    chptri(char *uplo,int *n,float *ap,int *ipiv,float *work,int *info);
void    CHPTRS(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    chptrs(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CHSEIN(char *side,char *eigsrc,char *initv,void *select,int *n, MKL_Complex8 *h,int *ldh, MKL_Complex8 *w, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *mm,int *m, MKL_Complex8 *work,float *rwork,int *ifaill,int *ifailr,int *info);
void    chsein(char *side,char *eigsrc,char *initv,void *select,int *n, MKL_Complex8 *h,int *ldh, MKL_Complex8 *w, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *mm,int *m, MKL_Complex8 *work,float *rwork,int *ifaill,int *ifailr,int *info);
void    CHSEQR(char *job,char *compz,int *n,int *ilo,int *ihi, MKL_Complex8 *h,int *ldh, MKL_Complex8 *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,int *info);
void    chseqr(char *job,char *compz,int *n,int *ilo,int *ihi, MKL_Complex8 *h,int *ldh, MKL_Complex8 *w, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,int *info);
void    CLABRD(int *m,int *n,int *nb, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tauq, MKL_Complex8 *taup, MKL_Complex8 *x,int *ldx, MKL_Complex8 *y,int *ldy);
void    clabrd(int *m,int *n,int *nb, MKL_Complex8 *a,int *lda,float *d,float *e, MKL_Complex8 *tauq, MKL_Complex8 *taup, MKL_Complex8 *x,int *ldx, MKL_Complex8 *y,int *ldy);
void    CLACGV(int *n, MKL_Complex8 *x,int *incx);
void    clacgv(int *n, MKL_Complex8 *x,int *incx);
void    CLACON(int *n, MKL_Complex8 *v,float *x,float *est,int *kase);
void    clacon(int *n, MKL_Complex8 *v,float *x,float *est,int *kase);
void    CLACP2(char *uplo,int *m,int *n,float *a,int *lda, MKL_Complex8 *b,int *ldb);
void    clacp2(char *uplo,int *m,int *n,float *a,int *lda, MKL_Complex8 *b,int *ldb);
void    CLACPY(char *uplo,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb);
void    clacpy(char *uplo,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb);
void    CLACRM(int *m,int *n, MKL_Complex8 *a,int *lda,float *b,int *ldb, MKL_Complex8 *c,int *ldc,float *rwork);
void    clacrm(int *m,int *n, MKL_Complex8 *a,int *lda,float *b,int *ldb, MKL_Complex8 *c,int *ldc,float *rwork);
void    CLACRT(int *n, MKL_Complex8 *cx,int *incx, MKL_Complex8 *cy,int *incy, MKL_Complex8 *c, MKL_Complex8 *s);
void    clacrt(int *n, MKL_Complex8 *cx,int *incx, MKL_Complex8 *cy,int *incy, MKL_Complex8 *c, MKL_Complex8 *s);
void    CLADIV( MKL_Complex8 *pres, MKL_Complex8 *x, MKL_Complex8 *y);
void    cladiv( MKL_Complex8 *pres, MKL_Complex8 *x, MKL_Complex8 *y);
void    CLAED0(int *qsiz,int *n,float *d,float *e, MKL_Complex8 *q,int *ldq, MKL_Complex8 *qstore,int *ldqs,float *rwork,int *iwork,int *info);
void    claed0(int *qsiz,int *n,float *d,float *e, MKL_Complex8 *q,int *ldq, MKL_Complex8 *qstore,int *ldqs,float *rwork,int *iwork,int *info);
void    CLAED7(int *n,int *cutpnt,int *qsiz,int *tlvls,int *curlvl,int *curpbm,float *d, MKL_Complex8 *q,int *ldq,float *rho,int *indxq,float *qstore,int *qptr,int *prmptr,int *perm,int *givptr,int *givcol,float *givnum, MKL_Complex8 *work,float *rwork,int *iwork,int *info);
void    claed7(int *n,int *cutpnt,int *qsiz,int *tlvls,int *curlvl,int *curpbm,float *d, MKL_Complex8 *q,int *ldq,float *rho,int *indxq,float *qstore,int *qptr,int *prmptr,int *perm,int *givptr,int *givcol,float *givnum, MKL_Complex8 *work,float *rwork,int *iwork,int *info);
void    CLAED8(int *k,int *n,int *qsiz, MKL_Complex8 *q,int *ldq,float *d,float *rho,int *cutpnt,float *z,float *dlamda, MKL_Complex8 *q2,int *ldq2,float *w,int *indxp,int *indx,int *indxq,int *perm,int *givptr,int *givcol,float *givnum,int *info);
void    claed8(int *k,int *n,int *qsiz, MKL_Complex8 *q,int *ldq,float *d,float *rho,int *cutpnt,float *z,float *dlamda, MKL_Complex8 *q2,int *ldq2,float *w,int *indxp,int *indx,int *indxq,int *perm,int *givptr,int *givcol,float *givnum,int *info);
void    CLAEIN(void *rightv,void *noinit,int *n, MKL_Complex8 *h,int *ldh, MKL_Complex8 *w, MKL_Complex8 *v, MKL_Complex8 *b,int *ldb,float *rwork,float *eps3,float *smlnum,int *info);
void    claein(void *rightv,void *noinit,int *n, MKL_Complex8 *h,int *ldh, MKL_Complex8 *w, MKL_Complex8 *v, MKL_Complex8 *b,int *ldb,float *rwork,float *eps3,float *smlnum,int *info);
void    CLAESY( MKL_Complex8 *a, MKL_Complex8 *b, MKL_Complex8 *c, MKL_Complex8 *rt1, MKL_Complex8 *rt2, MKL_Complex8 *evscal, MKL_Complex8 *cs1, MKL_Complex8 *sn1);
void    claesy( MKL_Complex8 *a, MKL_Complex8 *b, MKL_Complex8 *c, MKL_Complex8 *rt1, MKL_Complex8 *rt2, MKL_Complex8 *evscal, MKL_Complex8 *cs1, MKL_Complex8 *sn1);
void    CLAEV2( MKL_Complex8 *a, MKL_Complex8 *b, MKL_Complex8 *c,float *rt1,float *rt2,float *cs1, MKL_Complex8 *sn1);
void    claev2( MKL_Complex8 *a, MKL_Complex8 *b, MKL_Complex8 *c,float *rt1,float *rt2,float *cs1, MKL_Complex8 *sn1);
void    CLAGS2(void *upper,float *a1, MKL_Complex8 *a2,float *a3,float *b1, MKL_Complex8 *b2,float *b3,float *csu, MKL_Complex8 *snu,float *csv, MKL_Complex8 *snv,float *csq, MKL_Complex8 *snq);
void    clags2(void *upper,float *a1, MKL_Complex8 *a2,float *a3,float *b1, MKL_Complex8 *b2,float *b3,float *csu, MKL_Complex8 *snu,float *csv, MKL_Complex8 *snv,float *csq, MKL_Complex8 *snq);
void    CLAGTM(char *trans,int *n,int *nrhs,float *alpha, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *x,int *ldx,float *beta, MKL_Complex8 *b,int *ldb);
void    clagtm(char *trans,int *n,int *nrhs,float *alpha, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du, MKL_Complex8 *x,int *ldx,float *beta, MKL_Complex8 *b,int *ldb);
void    CLAHEF(char *uplo,int *n,int *nb,int *kb, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *w,int *ldw,int *info);
void    clahef(char *uplo,int *n,int *nb,int *kb, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *w,int *ldw,int *info);
void    CLAHQR(void *wantt,void *wantz,int *n,int *ilo,int *ihi,float *h,int *ldh, MKL_Complex8 *w,int *iloz,int *ihiz, MKL_Complex8 *z,int *ldz,int *info);
void    clahqr(void *wantt,void *wantz,int *n,int *ilo,int *ihi,float *h,int *ldh, MKL_Complex8 *w,int *iloz,int *ihiz, MKL_Complex8 *z,int *ldz,int *info);
void    CLAHRD(int *n,int *k,int *nb, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *t,int *ldt, MKL_Complex8 *y,int *ldy);
void    clahrd(int *n,int *k,int *nb, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *t,int *ldt, MKL_Complex8 *y,int *ldy);
void    CLAIC1(int *job,int *j, MKL_Complex8 *x,float *sest, MKL_Complex8 *w, MKL_Complex8 *gamma,float *sestpr, MKL_Complex8 *s, MKL_Complex8 *c);
void    claic1(int *job,int *j, MKL_Complex8 *x,float *sest, MKL_Complex8 *w, MKL_Complex8 *gamma,float *sestpr, MKL_Complex8 *s, MKL_Complex8 *c);
void    CLALS0(int *icompq,int *nl,int *nr,int *sqre,int *nrhs, MKL_Complex8 *b,int *ldb, MKL_Complex8 *bx,int *ldbx,int *perm,int *givptr,int *givcol,int *ldgcol,float *givnum,int *ldgnum,float *poles,float *difl,float *difr,float *z,float *k,float *c,float *s,float *rwork,int *info);
void    clals0(int *icompq,int *nl,int *nr,int *sqre,int *nrhs, MKL_Complex8 *b,int *ldb, MKL_Complex8 *bx,int *ldbx,int *perm,int *givptr,int *givcol,int *ldgcol,float *givnum,int *ldgnum,float *poles,float *difl,float *difr,float *z,float *k,float *c,float *s,float *rwork,int *info);
void    CLALSA(int *icompq,int *smlsiz,int *n,int *nrhs, MKL_Complex8 *b,int *ldb, MKL_Complex8 *bx,int *ldbx,float *u,int *ldu,float *vt,float *k,float *difl,float *difr,float *z,float *poles,int *givptr,int *givcol,int *ldgcol,int *perm,float *givnum,float *c,float *s,float *rwork,int *iwork,int *info);
void    clalsa(int *icompq,int *smlsiz,int *n,int *nrhs, MKL_Complex8 *b,int *ldb, MKL_Complex8 *bx,int *ldbx,float *u,int *ldu,float *vt,float *k,float *difl,float *difr,float *z,float *poles,int *givptr,int *givcol,int *ldgcol,int *perm,float *givnum,float *c,float *s,float *rwork,int *iwork,int *info);
void    CLALSD(char *uplo,int *smlsiz,int *n,int *nrhs,float *d,float *e, MKL_Complex8 *b,int *ldb,float *rcond,int *rank, MKL_Complex8 *work,float *rwork,int *iwork,int *info);
void    clalsd(char *uplo,int *smlsiz,int *n,int *nrhs,float *d,float *e, MKL_Complex8 *b,int *ldb,float *rcond,int *rank, MKL_Complex8 *work,float *rwork,int *iwork,int *info);
float   CLANGB(char *norm,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,float *work);
float   clangb(char *norm,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,float *work);
float   CLANGE(char *norm,int *m,int *n, MKL_Complex8 *a,int *lda,float *work);
float   clange(char *norm,int *m,int *n, MKL_Complex8 *a,int *lda,float *work);
float   CLANGT(char *norm,int *n, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du);
float   clangt(char *norm,int *n, MKL_Complex8 *dl, MKL_Complex8 *d, MKL_Complex8 *du);
float   CLANHB(char *norm,char *uplo,int *n,int *k, MKL_Complex8 *ab,int *ldab,float *work);
float   clanhb(char *norm,char *uplo,int *n,int *k, MKL_Complex8 *ab,int *ldab,float *work);
float   CLANHE(char *norm,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *work);
float   clanhe(char *norm,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *work);
float   CLANHP(char *norm,char *uplo,int *n, MKL_Complex8 *ap,float *work);
float   clanhp(char *norm,char *uplo,int *n, MKL_Complex8 *ap,float *work);
float   CLANHS(char *norm,int *n, MKL_Complex8 *a,int *lda,float *work);
float   clanhs(char *norm,int *n, MKL_Complex8 *a,int *lda,float *work);
float   CLANHT(char *norm,int *n,float *d, MKL_Complex8 *e);
float   clanht(char *norm,int *n,float *d, MKL_Complex8 *e);
float   CLANSB(char *norm,char *uplo,int *n,int *k, MKL_Complex8 *ab,int *ldab,float *work);
float   clansb(char *norm,char *uplo,int *n,int *k, MKL_Complex8 *ab,int *ldab,float *work);
float   CLANSP(char *norm,char *uplo,int *n, MKL_Complex8 *ap,float *work);
float   clansp(char *norm,char *uplo,int *n, MKL_Complex8 *ap,float *work);
float   CLANSY(char *norm,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *work);
float   clansy(char *norm,char *uplo,int *n, MKL_Complex8 *a,int *lda,float *work);
float   CLANTB(char *norm,char *uplo,char *diag,int *n,int *k, MKL_Complex8 *ab,int *ldab,float *work);
float   clantb(char *norm,char *uplo,char *diag,int *n,int *k, MKL_Complex8 *ab,int *ldab,float *work);
float   CLANTP(char *norm,char *uplo,char *diag,int *n, MKL_Complex8 *ap,float *work);
float   clantp(char *norm,char *uplo,char *diag,int *n, MKL_Complex8 *ap,float *work);
float   CLANTR(char *norm,char *uplo,char *diag,int *m,int *n, MKL_Complex8 *a,int *lda,float *work);
float   clantr(char *norm,char *uplo,char *diag,int *m,int *n, MKL_Complex8 *a,int *lda,float *work);
void    CLAPLL(int *n, MKL_Complex8 *x,int *incx, MKL_Complex8 *y,int *incy,float *ssmin);
void    clapll(int *n, MKL_Complex8 *x,int *incx, MKL_Complex8 *y,int *incy,float *ssmin);
void    CLAPMT(void *forwrd,int *m,int *n, MKL_Complex8 *x,int *ldx,int *k);
void    clapmt(void *forwrd,int *m,int *n, MKL_Complex8 *x,int *ldx,int *k);
void    CLAQGB(int *m,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,float *r,float *c,float *rowcnd,float *colcnd,float *amax,char *equed);
void    claqgb(int *m,int *n,int *kl,int *ku, MKL_Complex8 *ab,int *ldab,float *r,float *c,float *rowcnd,float *colcnd,float *amax,char *equed);
void    CLAQGE(int *m,int *n, MKL_Complex8 *a,int *lda,float *r,float *c,float *rowcnd,float *colcnd,float *amax,char *equed);
void    claqge(int *m,int *n, MKL_Complex8 *a,int *lda,float *r,float *c,float *rowcnd,float *colcnd,float *amax,char *equed);
void    CLAQHB(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *s,float *scond,float *amax,char *equed);
void    claqhb(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *s,float *scond,float *amax,char *equed);
void    CLAQHE(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *s,float *scond,float *amax,char *equed);
void    claqhe(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *s,float *scond,float *amax,char *equed);
void    CLAQHP(char *uplo,int *n, MKL_Complex8 *ap,float *s,float *scond,float *amax,char *equed);
void    claqhp(char *uplo,int *n, MKL_Complex8 *ap,float *s,float *scond,float *amax,char *equed);
void    CLAQP2(int *m,int *n,int *offset, MKL_Complex8 *a,int *lda,int *jpvt, MKL_Complex8 *tau,float *vn1,float *vn2, MKL_Complex8 *work);
void    claqp2(int *m,int *n,int *offset, MKL_Complex8 *a,int *lda,int *jpvt, MKL_Complex8 *tau,float *vn1,float *vn2, MKL_Complex8 *work);
void    CLAQPS(int *m,int *n,int *offset,int *nb,int *kb, MKL_Complex8 *a,int *lda,int *jpvt, MKL_Complex8 *tau,float *vn1,float *vn2, MKL_Complex8 *auxv, MKL_Complex8 *f,int *ldf);
void    claqps(int *m,int *n,int *offset,int *nb,int *kb, MKL_Complex8 *a,int *lda,int *jpvt, MKL_Complex8 *tau,float *vn1,float *vn2, MKL_Complex8 *auxv, MKL_Complex8 *f,int *ldf);
void    CLAQSB(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *s,float *scond,float *amax,char *equed);
void    claqsb(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *s,float *scond,float *amax,char *equed);
void    CLAQSP(char *uplo,int *n, MKL_Complex8 *ap,float *s,float *scond,float *amax,char *equed);
void    claqsp(char *uplo,int *n, MKL_Complex8 *ap,float *s,float *scond,float *amax,char *equed);
void    CLAQSY(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *s,float *scond,float *amax,char *equed);
void    claqsy(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *s,float *scond,float *amax,char *equed);
void    CLAR1V(int *n,int *b1,int *bn,float *sigma,float *d,float *l,float *ld,float *lld,float *gersch, MKL_Complex8 *z,float *ztz,float *mingma,int *r,int *isuppz,float *work);
void    clar1v(int *n,int *b1,int *bn,float *sigma,float *d,float *l,float *ld,float *lld,float *gersch, MKL_Complex8 *z,float *ztz,float *mingma,int *r,int *isuppz,float *work);
void    CLAR2V(int *n, MKL_Complex8 *x, MKL_Complex8 *y, MKL_Complex8 *z,int *incx,float *c, MKL_Complex8 *s,int *incc);
void    clar2v(int *n, MKL_Complex8 *x, MKL_Complex8 *y, MKL_Complex8 *z,int *incx,float *c, MKL_Complex8 *s,int *incc);
void    CLARCM(int *m,int *n,float *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c,int *ldc,float *rwork);
void    clarcm(int *m,int *n,float *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c,int *ldc,float *rwork);
void    CLARF(char *side,int *m,int *n, MKL_Complex8 *v,int *incv, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work);
void    clarf(char *side,int *m,int *n, MKL_Complex8 *v,int *incv, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work);
void    CLARFB(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k, MKL_Complex8 *v,int *ldv, MKL_Complex8 *t,int *ldt, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *ldwork);
void    clarfb(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k, MKL_Complex8 *v,int *ldv, MKL_Complex8 *t,int *ldt, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *ldwork);
void    CLARFG(int *n, MKL_Complex8 *alpha, MKL_Complex8 *x,int *incx, MKL_Complex8 *tau);
void    clarfg(int *n, MKL_Complex8 *alpha, MKL_Complex8 *x,int *incx, MKL_Complex8 *tau);
void    CLARFT(char *direct,char *storev,int *n,int *k, MKL_Complex8 *v,int *ldv, MKL_Complex8 *tau, MKL_Complex8 *t,int *ldt);
void    clarft(char *direct,char *storev,int *n,int *k, MKL_Complex8 *v,int *ldv, MKL_Complex8 *tau, MKL_Complex8 *t,int *ldt);
void    CLARFX(char *side,int *m,int *n, MKL_Complex8 *v, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work);
void    clarfx(char *side,int *m,int *n, MKL_Complex8 *v, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work);
void    CLARGV(int *n, MKL_Complex8 *x,int *incx, MKL_Complex8 *y,int *incy,float *c,int *incc);
void    clargv(int *n, MKL_Complex8 *x,int *incx, MKL_Complex8 *y,int *incy,float *c,int *incc);
void    CLARNV(int *idist,int *iseed,int *n, MKL_Complex8 *x);
void    clarnv(int *idist,int *iseed,int *n, MKL_Complex8 *x);
void    CLARRV(int *n,float *d,float *l,int *isplit,int *m,float *w,int *iblock,float *gersch,float *tol, MKL_Complex8 *z,int *ldz,int *isuppz,float *work,int *iwork,int *info);
void    clarrv(int *n,float *d,float *l,int *isplit,int *m,float *w,int *iblock,float *gersch,float *tol, MKL_Complex8 *z,int *ldz,int *isuppz,float *work,int *iwork,int *info);
void    CLARTG( MKL_Complex8 *f, MKL_Complex8 *g,float *cs, MKL_Complex8 *sn, MKL_Complex8 *r);
void    clartg( MKL_Complex8 *f, MKL_Complex8 *g,float *cs, MKL_Complex8 *sn, MKL_Complex8 *r);
void    CLARTV(int *n, MKL_Complex8 *x,int *incx, MKL_Complex8 *y,int *incy,float *c, MKL_Complex8 *s,int *incc);
void    clartv(int *n, MKL_Complex8 *x,int *incx, MKL_Complex8 *y,int *incy,float *c, MKL_Complex8 *s,int *incc);
void    CLARZ(char *side,int *m,int *n,int *l, MKL_Complex8 *v,int *incv, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work);
void    clarz(char *side,int *m,int *n,int *l, MKL_Complex8 *v,int *incv, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work);
void    CLARZB(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,int *l, MKL_Complex8 *v,int *ldv, MKL_Complex8 *t,int *ldt, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *ldwork);
void    clarzb(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,int *l, MKL_Complex8 *v,int *ldv, MKL_Complex8 *t,int *ldt, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *ldwork);
void    CLARZT(char *direct,char *storev,int *n,int *k, MKL_Complex8 *v,int *ldv, MKL_Complex8 *tau, MKL_Complex8 *t,int *ldt);
void    clarzt(char *direct,char *storev,int *n,int *k, MKL_Complex8 *v,int *ldv, MKL_Complex8 *tau, MKL_Complex8 *t,int *ldt);
void    CLASCL(char *type,int *kl,int *ku,float *cfrom,float *cto,int *m,int *n, MKL_Complex8 *a,int *lda,int *info);
void    clascl(char *type,int *kl,int *ku,float *cfrom,float *cto,int *m,int *n, MKL_Complex8 *a,int *lda,int *info);
void    CLASET(char *uplo,int *m,int *n, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *a,int *lda);
void    claset(char *uplo,int *m,int *n, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *a,int *lda);
void    CLASR(char *side,char *pivot,char *direct,int *m,int *n,float *c,float *s, MKL_Complex8 *a,int *lda);
void    clasr(char *side,char *pivot,char *direct,int *m,int *n,float *c,float *s, MKL_Complex8 *a,int *lda);
void    CLASSQ(int *n, MKL_Complex8 *x,int *incx,float *scale,float *sumsq);
void    classq(int *n, MKL_Complex8 *x,int *incx,float *scale,float *sumsq);
void    CLASWP(int *n, MKL_Complex8 *a,int *lda,int *k1,int *k2,int *ipiv,int *incx);
void    claswp(int *n, MKL_Complex8 *a,int *lda,int *k1,int *k2,int *ipiv,int *incx);
void    CLASYF(char *uplo,int *n,int *nb,int *kb, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *w,int *ldw,int *info);
void    clasyf(char *uplo,int *n,int *nb,int *kb, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *w,int *ldw,int *info);
void    CLATBS(char *uplo,char *trans,char *diag,char *normin,int *n,int *kd, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *x,float *scale,float *cnorm,int *info);
void    clatbs(char *uplo,char *trans,char *diag,char *normin,int *n,int *kd, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *x,float *scale,float *cnorm,int *info);
void    CLATDF(int *ijob,int *n,float *z,int *ldz,float *rhs,float *rdsum,float *rdscal,int *ipiv,int *jpiv);
void    clatdf(int *ijob,int *n,float *z,int *ldz,float *rhs,float *rdsum,float *rdscal,int *ipiv,int *jpiv);
void    CLATPS(char *uplo,char *trans,char *diag,char *normin,int *n, MKL_Complex8 *ap, MKL_Complex8 *x,float *scale,float *cnorm,int *info);
void    clatps(char *uplo,char *trans,char *diag,char *normin,int *n, MKL_Complex8 *ap, MKL_Complex8 *x,float *scale,float *cnorm,int *info);
void    CLATRD(char *uplo,int *n,int *nb, MKL_Complex8 *a,int *lda,float *e, MKL_Complex8 *tau, MKL_Complex8 *w,int *ldw);
void    clatrd(char *uplo,int *n,int *nb, MKL_Complex8 *a,int *lda,float *e, MKL_Complex8 *tau, MKL_Complex8 *w,int *ldw);
void    CLATRS(char *uplo,char *trans,char *diag,char *normin,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *x,float *scale,float *cnorm,int *info);
void    clatrs(char *uplo,char *trans,char *diag,char *normin,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *x,float *scale,float *cnorm,int *info);
void    CLATRZ(int *m,int *n,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work);
void    clatrz(int *m,int *n,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work);
void    CLATZM(char *side,int *m,int *n, MKL_Complex8 *v,int *incv, MKL_Complex8 *tau, MKL_Complex8 *c1, MKL_Complex8 *c2,int *ldc, MKL_Complex8 *work);
void    clatzm(char *side,int *m,int *n, MKL_Complex8 *v,int *incv, MKL_Complex8 *tau, MKL_Complex8 *c1, MKL_Complex8 *c2,int *ldc, MKL_Complex8 *work);
void    CLAUU2(char *uplo,int *n,float *a,float *lda,int *info);
void    clauu2(char *uplo,int *n,float *a,float *lda,int *info);
void    CLAUUM(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *info);
void    clauum(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *info);
void    CPBCON(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    cpbcon(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    CPBEQU(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *s,float *scond,float *amax,int *info);
void    cpbequ(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *s,float *scond,float *amax,int *info);
void    CPBRFS(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *afb,int *ldafb, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cpbrfs(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *afb,int *ldafb, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CPBSTF(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,int *info);
void    cpbstf(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,int *info);
void    CPBSV(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *b,int *ldb,int *info);
void    cpbsv(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *b,int *ldb,int *info);
void    CPBSVX(char *fact,char *uplo,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *afb,int *ldafb,char *equed,float *s, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cpbsvx(char *fact,char *uplo,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *afb,int *ldafb,char *equed,float *s, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CPBTF2(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,int *info);
void    cpbtf2(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,int *info);
void    CPBTRF(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,int *info);
void    cpbtrf(char *uplo,int *n,int *kd, MKL_Complex8 *ab,int *ldab,int *info);
void    CPBTRS(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *b,int *ldb,int *info);
void    cpbtrs(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *b,int *ldb,int *info);
void    CPOCON(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    cpocon(char *uplo,int *n, MKL_Complex8 *a,int *lda,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    CPOEQU(int *n, MKL_Complex8 *a,int *lda,float *s,float *scond,float *amax,int *info);
void    cpoequ(int *n, MKL_Complex8 *a,int *lda,float *s,float *scond,float *amax,int *info);
void    CPORFS(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cporfs(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CPOSV(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    cposv(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    CPOSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,char *equed,float *s, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cposvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,char *equed,float *s, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CPOTF2(char *uplo,int *n,float *a,float *lda,int *info);
void    cpotf2(char *uplo,int *n,float *a,float *lda,int *info);
void    CPOTRF(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *info);
void    cpotrf(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *info);
void    CPOTRI(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *info);
void    cpotri(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *info);
void    CPOTRS(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    cpotrs(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    CPPCON(char *uplo,int *n, MKL_Complex8 *ap,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    cppcon(char *uplo,int *n, MKL_Complex8 *ap,float *anorm,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    CPPEQU(char *uplo,int *n, MKL_Complex8 *ap,float *s,float *scond,float *amax,int *info);
void    cppequ(char *uplo,int *n, MKL_Complex8 *ap,float *s,float *scond,float *amax,int *info);
void    CPPRFS(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cpprfs(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CPPSV(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *b,int *ldb,int *info);
void    cppsv(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *b,int *ldb,int *info);
void    CPPSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,char *equed,float *s, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cppsvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,char *equed,float *s, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CPPTRF(char *uplo,int *n,float *ap,int *info);
void    cpptrf(char *uplo,int *n,float *ap,int *info);
void    CPPTRI(char *uplo,int *n,float *ap,int *info);
void    cpptri(char *uplo,int *n,float *ap,int *info);
void    CPPTRS(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *b,int *ldb,int *info);
void    cpptrs(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *b,int *ldb,int *info);
void    CPTCON(int *n,float *d, MKL_Complex8 *e,float *anorm,float *rcond,float *rwork,int *info);
void    cptcon(int *n,float *d, MKL_Complex8 *e,float *anorm,float *rcond,float *rwork,int *info);
void    CPTEQR(char *compz,int *n,float *d,float *e, MKL_Complex8 *z,int *ldz,float *work,int *info);
void    cpteqr(char *compz,int *n,float *d,float *e, MKL_Complex8 *z,int *ldz,float *work,int *info);
void    CPTRFS(char *uplo,int *n,int *nrhs,float *d, MKL_Complex8 *e,float *df, MKL_Complex8 *ef, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cptrfs(char *uplo,int *n,int *nrhs,float *d, MKL_Complex8 *e,float *df, MKL_Complex8 *ef, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CPTSV(int *n,int *nrhs,float *d, MKL_Complex8 *e, MKL_Complex8 *b,int *ldb,int *info);
void    cptsv(int *n,int *nrhs,float *d, MKL_Complex8 *e, MKL_Complex8 *b,int *ldb,int *info);
void    CPTSVX(char *fact,int *n,int *nrhs,float *d, MKL_Complex8 *e,float *df, MKL_Complex8 *ef, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cptsvx(char *fact,int *n,int *nrhs,float *d, MKL_Complex8 *e,float *df, MKL_Complex8 *ef, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CPTTRF(int *n,float *d, MKL_Complex8 *e,int *info);
void    cpttrf(int *n,float *d, MKL_Complex8 *e,int *info);
void    CPTTRS(char *uplo,int *n,int *nrhs,float *d, MKL_Complex8 *e, MKL_Complex8 *b,int *ldb,int *info);
void    cpttrs(char *uplo,int *n,int *nrhs,float *d, MKL_Complex8 *e, MKL_Complex8 *b,int *ldb,int *info);
void    CPTTS2(int *iuplo,int *n,int *nrhs,float *d, MKL_Complex8 *e, MKL_Complex8 *b,int *ldb);
void    cptts2(int *iuplo,int *n,int *nrhs,float *d, MKL_Complex8 *e, MKL_Complex8 *b,int *ldb);
void    CROT(int *n, MKL_Complex8 *cx,int *incx, MKL_Complex8 *cy,int *incy,float *c, MKL_Complex8 *s);
void    crot(int *n, MKL_Complex8 *cx,int *incx, MKL_Complex8 *cy,int *incy,float *c, MKL_Complex8 *s);
void    CSPCON(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    cspcon(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    CSPMV(char *uplo,int *n, MKL_Complex8 *alpha, MKL_Complex8 *ap, MKL_Complex8 *x,int *incx, MKL_Complex8 *beta, MKL_Complex8 *y,int *incy);
void    cspmv(char *uplo,int *n, MKL_Complex8 *alpha, MKL_Complex8 *ap, MKL_Complex8 *x,int *incx, MKL_Complex8 *beta, MKL_Complex8 *y,int *incy);
void    CSPR(char *uplo,int *n, MKL_Complex8 *alpha, MKL_Complex8 *x,int *incx, MKL_Complex8 *ap);
void    cspr(char *uplo,int *n, MKL_Complex8 *alpha, MKL_Complex8 *x,int *incx, MKL_Complex8 *ap);
void    CSPRFS(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    csprfs(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CSPSV(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    cspsv(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CSPSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    cspsvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *afp,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CSPTRF(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv,int *info);
void    csptrf(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv,int *info);
void    CSPTRI(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *work,int *info);
void    csptri(char *uplo,int *n, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *work,int *info);
void    CSPTRS(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    csptrs(char *uplo,int *n,int *nrhs, MKL_Complex8 *ap,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CSRSCL(int *n,float *sa, MKL_Complex8 *sx,int *incx);
void    csrscl(int *n,float *sa, MKL_Complex8 *sx,int *incx);
void    CSTEDC(char *compz,int *n,float *d,float *e, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    cstedc(char *compz,int *n,float *d,float *e, MKL_Complex8 *z,int *ldz, MKL_Complex8 *work,int *lwork,float *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    CSTEGR(char *jobz,char *range,int *n,float *d,float *e,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz,int *isuppz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    cstegr(char *jobz,char *range,int *n,float *d,float *e,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w, MKL_Complex8 *z,int *ldz,int *isuppz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    CSTEIN(int *n,float *d,float *e,int *m,float *w,int *iblock,int *isplit, MKL_Complex8 *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    cstein(int *n,float *d,float *e,int *m,float *w,int *iblock,int *isplit, MKL_Complex8 *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    CSTEQR(char *compz,int *n,float *d,float *e, MKL_Complex8 *z,int *ldz,float *work,int *info);
void    csteqr(char *compz,int *n,float *d,float *e, MKL_Complex8 *z,int *ldz,float *work,int *info);
void    CSYCON(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    csycon(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv,float *anorm,float *rcond, MKL_Complex8 *work,int *info);
void    CSYMV(char *uplo,int *n, MKL_Complex8 *alpha, MKL_Complex8 *a,int *lda, MKL_Complex8 *x,int *incx, MKL_Complex8 *beta, MKL_Complex8 *y,int *incy);
void    csymv(char *uplo,int *n, MKL_Complex8 *alpha, MKL_Complex8 *a,int *lda, MKL_Complex8 *x,int *incx, MKL_Complex8 *beta, MKL_Complex8 *y,int *incy);
void    CSYR(char *uplo,int *n, MKL_Complex8 *alpha, MKL_Complex8 *x,int *incx, MKL_Complex8 *a,int *lda);
void    csyr(char *uplo,int *n, MKL_Complex8 *alpha, MKL_Complex8 *x,int *incx, MKL_Complex8 *a,int *lda);
void    CSYRFS(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    csyrfs(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CSYSV(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *work,int *lwork,int *info);
void    csysv(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *work,int *lwork,int *info);
void    CSYSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    csysvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *af,int *ldaf,int *ipiv, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *rcond,float *ferr,float *berr, MKL_Complex8 *work,int *lwork,float *rwork,int *info);
void    CSYTF2(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *info);
void    csytf2(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv,int *info);
void    CSYTRF(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *work,int *lwork,int *info);
void    csytrf(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *work,int *lwork,int *info);
void    CSYTRI(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *work,int *info);
void    csytri(char *uplo,int *n, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *work,int *info);
void    CSYTRS(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    csytrs(char *uplo,int *n,int *nrhs, MKL_Complex8 *a,int *lda,int *ipiv, MKL_Complex8 *b,int *ldb,int *info);
void    CTBCON(char *norm,char *uplo,char *diag,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    ctbcon(char *norm,char *uplo,char *diag,int *n,int *kd, MKL_Complex8 *ab,int *ldab,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    CTBRFS(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    ctbrfs(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CTBTRS(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *b,int *ldb,int *info);
void    ctbtrs(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs, MKL_Complex8 *ab,int *ldab, MKL_Complex8 *b,int *ldb,int *info);
void    CTGEVC(char *side,char *howmny,void *select,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *mm,int *m, MKL_Complex8 *work,float *rwork,int *info);
void    ctgevc(char *side,char *howmny,void *select,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *mm,int *m, MKL_Complex8 *work,float *rwork,int *info);
void    CTGEX2(void *wantq,void *wantz,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz,int *j1,int *info);
void    ctgex2(void *wantq,void *wantz,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz,int *j1,int *info);
void    CTGEXC(void *wantq,void *wantz,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz,int *ifst,int *ilst,int *info);
void    ctgexc(void *wantq,void *wantz,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz,int *ifst,int *ilst,int *info);
void    CTGSEN(int *ijob,void *wantq,void *wantz,void *select,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz,int *m,float *pl,float *pr,float *dif, MKL_Complex8 *work,int *lwork,int *iwork,int *liwork,int *info);
void    ctgsen(int *ijob,void *wantq,void *wantz,void *select,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *alpha, MKL_Complex8 *beta, MKL_Complex8 *q,int *ldq, MKL_Complex8 *z,int *ldz,int *m,float *pl,float *pr,float *dif, MKL_Complex8 *work,int *lwork,int *iwork,int *liwork,int *info);
void    CTGSJA(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,int *k,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *tola,float *tolb,float *alpha,float *beta, MKL_Complex8 *u,int *ldu, MKL_Complex8 *v,int *ldv, MKL_Complex8 *q,int *ldq, MKL_Complex8 *work,int *ncycle,int *info);
void    ctgsja(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,int *k,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,float *tola,float *tolb,float *alpha,float *beta, MKL_Complex8 *u,int *ldu, MKL_Complex8 *v,int *ldv, MKL_Complex8 *q,int *ldq, MKL_Complex8 *work,int *ncycle,int *info);
void    CTGSNA(char *job,char *howmny,void *select,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,float *s,float *dif,int *mm,int *m, MKL_Complex8 *work,int *lwork,int *iwork,int *info);
void    ctgsna(char *job,char *howmny,void *select,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,float *s,float *dif,int *mm,int *m, MKL_Complex8 *work,int *lwork,int *iwork,int *info);
void    CTGSY2(char *trans,int *ijob,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c,int *ldc, MKL_Complex8 *d,int *ldd, MKL_Complex8 *e,int *lde, MKL_Complex8 *f,int *ldf,float *scale,float *rdsum,float *rdscal,int *info);
void    ctgsy2(char *trans,int *ijob,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c,int *ldc, MKL_Complex8 *d,int *ldd, MKL_Complex8 *e,int *lde, MKL_Complex8 *f,int *ldf,float *scale,float *rdsum,float *rdscal,int *info);
void    CTGSYL(char *trans,int *ijob,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c,int *ldc, MKL_Complex8 *d,int *ldd, MKL_Complex8 *e,int *lde, MKL_Complex8 *f,int *ldf,float *scale,float *dif, MKL_Complex8 *work,int *lwork,int *iwork,int *info);
void    ctgsyl(char *trans,int *ijob,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c,int *ldc, MKL_Complex8 *d,int *ldd, MKL_Complex8 *e,int *lde, MKL_Complex8 *f,int *ldf,float *scale,float *dif, MKL_Complex8 *work,int *lwork,int *iwork,int *info);
void    CTPCON(char *norm,char *uplo,char *diag,int *n, MKL_Complex8 *ap,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    ctpcon(char *norm,char *uplo,char *diag,int *n, MKL_Complex8 *ap,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    CTPRFS(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    ctprfs(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CTPTRI(char *uplo,char *diag,int *n, MKL_Complex8 *ap,int *info);
void    ctptri(char *uplo,char *diag,int *n, MKL_Complex8 *ap,int *info);
void    CTPTRS(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *b,int *ldb,int *info);
void    ctptrs(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex8 *ap, MKL_Complex8 *b,int *ldb,int *info);
void    CTRCON(char *norm,char *uplo,char *diag,int *n, MKL_Complex8 *a,int *lda,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    ctrcon(char *norm,char *uplo,char *diag,int *n, MKL_Complex8 *a,int *lda,float *rcond, MKL_Complex8 *work,float *rwork,int *info);
void    CTREVC(char *side,char *howmny,void *select,int *n, MKL_Complex8 *t,int *ldt, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *mm,int *m, MKL_Complex8 *work,float *rwork,int *info);
void    ctrevc(char *side,char *howmny,void *select,int *n, MKL_Complex8 *t,int *ldt, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,int *mm,int *m, MKL_Complex8 *work,float *rwork,int *info);
void    CTREXC(char *compq,int *n, MKL_Complex8 *t,int *ldt, MKL_Complex8 *q,int *ldq,int *ifst,int *ilst,int *info);
void    ctrexc(char *compq,int *n, MKL_Complex8 *t,int *ldt, MKL_Complex8 *q,int *ldq,int *ifst,int *ilst,int *info);
void    CTRRFS(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    ctrrfs(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *x,int *ldx,float *ferr,float *berr, MKL_Complex8 *work,float *rwork,int *info);
void    CTRSEN(char *job,char *compq,void *select,int *n, MKL_Complex8 *t,int *ldt, MKL_Complex8 *q,int *ldq, MKL_Complex8 *w,int *m,float *s,float *sep, MKL_Complex8 *work,int *lwork,int *info);
void    ctrsen(char *job,char *compq,void *select,int *n, MKL_Complex8 *t,int *ldt, MKL_Complex8 *q,int *ldq, MKL_Complex8 *w,int *m,float *s,float *sep, MKL_Complex8 *work,int *lwork,int *info);
void    CTRSNA(char *job,char *howmny,void *select,int *n, MKL_Complex8 *t,int *ldt, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,float *s,float *sep,int *mm,int *m, MKL_Complex8 *work,int *ldwork,float *rwork,int *info);
void    ctrsna(char *job,char *howmny,void *select,int *n, MKL_Complex8 *t,int *ldt, MKL_Complex8 *vl,int *ldvl, MKL_Complex8 *vr,int *ldvr,float *s,float *sep,int *mm,int *m, MKL_Complex8 *work,int *ldwork,float *rwork,int *info);
void    CTRSYL(char *trana,char *tranb,int *isgn,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c,int *ldc,float *scale,int *info);
void    ctrsyl(char *trana,char *tranb,int *isgn,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb, MKL_Complex8 *c,int *ldc,float *scale,int *info);
void    CTRTI2(char *uplo,char *diag,int *n, MKL_Complex8 *a,int *lda,int *info);
void    ctrti2(char *uplo,char *diag,int *n, MKL_Complex8 *a,int *lda,int *info);
void    CTRTRI(char *uplo,char *diag,int *n, MKL_Complex8 *a,int *lda,int *info);
void    ctrtri(char *uplo,char *diag,int *n, MKL_Complex8 *a,int *lda,int *info);
void    CTRTRS(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    ctrtrs(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex8 *a,int *lda, MKL_Complex8 *b,int *ldb,int *info);
void    CTZRQF(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau,int *info);
void    ctzrqf(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau,int *info);
void    CTZRZF(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    ctzrzf(int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CUNG2L(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cung2l(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CUNG2R(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cung2r(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CUNGBR(char *vect,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cungbr(char *vect,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CUNGHR(int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cunghr(int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CUNGL2(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cungl2(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CUNGLQ(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cunglq(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CUNGQL(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cungql(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CUNGQR(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cungqr(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CUNGR2(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    cungr2(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *info);
void    CUNGRQ(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cungrq(int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CUNGTR(char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    cungtr(char *uplo,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *work,int *lwork,int *info);
void    CUNM2L(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    cunm2l(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    CUNM2R(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    cunm2r(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    CUNMBR(char *vect,char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    cunmbr(char *vect,char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    CUNMHR(char *side,char *trans,int *m,int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    cunmhr(char *side,char *trans,int *m,int *n,int *ilo,int *ihi, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    CUNML2(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    cunml2(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    CUNMLQ(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    cunmlq(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    CUNMQL(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    cunmql(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    CUNMQR(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    cunmqr(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    CUNMR2(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    cunmr2(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    CUNMR3(char *side,char *trans,int *m,int *n,int *k,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    cunmr3(char *side,char *trans,int *m,int *n,int *k,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    CUNMRQ(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    cunmrq(char *side,char *trans,int *m,int *n,int *k, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    CUNMRZ(char *side,char *trans,int *m,int *n,int *k,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    cunmrz(char *side,char *trans,int *m,int *n,int *k,int *l, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    CUNMTR(char *side,char *uplo,char *trans,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    cunmtr(char *side,char *uplo,char *trans,int *m,int *n, MKL_Complex8 *a,int *lda, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *lwork,int *info);
void    CUPGTR(char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *tau, MKL_Complex8 *q,int *ldq, MKL_Complex8 *work,int *info);
void    cupgtr(char *uplo,int *n, MKL_Complex8 *ap, MKL_Complex8 *tau, MKL_Complex8 *q,int *ldq, MKL_Complex8 *work,int *info);
void    CUPMTR(char *side,char *uplo,char *trans,int *m,int *n, MKL_Complex8 *ap, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
void    cupmtr(char *side,char *uplo,char *trans,int *m,int *n, MKL_Complex8 *ap, MKL_Complex8 *tau, MKL_Complex8 *c,int *ldc, MKL_Complex8 *work,int *info);
int     ICMAX1(int *n, MKL_Complex8 *cx,int *incx);
int     icmax1(int *n, MKL_Complex8 *cx,int *incx);
void    SBDSDC(char *uplo,char *compq,int *n,float *d,float *e,float *u,int *ldu,float *vt,int *ldvt,float *q,int *iq,float *work,int *iwork,int *info);
void    sbdsdc(char *uplo,char *compq,int *n,float *d,float *e,float *u,int *ldu,float *vt,int *ldvt,float *q,int *iq,float *work,int *iwork,int *info);
void    SBDSQR(char *uplo,int *n,int *ncvt,int *nru,int *ncc,float *d,float *e,float *vt,int *ldvt,float *u,int *ldu,float *c,int *ldc,float *work,int *info);
void    sbdsqr(char *uplo,int *n,int *ncvt,int *nru,int *ncc,float *d,float *e,float *vt,int *ldvt,float *u,int *ldu,float *c,int *ldc,float *work,int *info);
float   SCSUM1(int *n, MKL_Complex8 *cx,int *incx);
float   scsum1(int *n, MKL_Complex8 *cx,int *incx);
void    SDISNA(char *job,int *m,int *n,float *d,float *sep,int *info);
void    sdisna(char *job,int *m,int *n,float *d,float *sep,int *info);
void    SGBBRD(char *vect,int *m,int *n,int *ncc,int *kl,int *ku,float *ab,int *ldab,float *d,float *e,float *q,int *ldq,float *pt,int *ldpt,float *c,int *ldc,float *work,int *info);
void    sgbbrd(char *vect,int *m,int *n,int *ncc,int *kl,int *ku,float *ab,int *ldab,float *d,float *e,float *q,int *ldq,float *pt,int *ldpt,float *c,int *ldc,float *work,int *info);
void    SGBCON(char *norm,int *n,int *kl,int *ku,float *ab,int *ldab,int *ipiv,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    sgbcon(char *norm,int *n,int *kl,int *ku,float *ab,int *ldab,int *ipiv,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    SGBEQU(int *m,int *n,int *kl,int *ku,float *ab,int *ldab,float *r,float *c,float *rowcnd,float *colcnd,float *amax,int *info);
void    sgbequ(int *m,int *n,int *kl,int *ku,float *ab,int *ldab,float *r,float *c,float *rowcnd,float *colcnd,float *amax,int *info);
void    SGBRFS(char *trans,int *n,int *kl,int *ku,int *nrhs,float *ab,int *ldab,float *afb,int *ldafb,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sgbrfs(char *trans,int *n,int *kl,int *ku,int *nrhs,float *ab,int *ldab,float *afb,int *ldafb,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SGBSV(int *n,int *kl,int *ku,int *nrhs,float *ab,int *ldab,int *ipiv,float *b,int *ldb,int *info);
void    sgbsv(int *n,int *kl,int *ku,int *nrhs,float *ab,int *ldab,int *ipiv,float *b,int *ldb,int *info);
void    SGBSVX(char *fact,char *trans,int *n,int *kl,int *ku,int *nrhs,float *ab,int *ldab,float *afb,int *ldafb,int *ipiv,char *equed,float *r,float *c,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sgbsvx(char *fact,char *trans,int *n,int *kl,int *ku,int *nrhs,float *ab,int *ldab,float *afb,int *ldafb,int *ipiv,char *equed,float *r,float *c,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SGBTF2(int *m,int *n,int *kl,int *ku,float *ab,int *ldab,int *ipiv,int *info);
void    sgbtf2(int *m,int *n,int *kl,int *ku,float *ab,int *ldab,int *ipiv,int *info);
void    SGBTRF(int *m,int *n,int *kl,int *ku,float *ab,int *ldab,int *ipiv,int *info);
void    sgbtrf(int *m,int *n,int *kl,int *ku,float *ab,int *ldab,int *ipiv,int *info);
void    SGBTRS(char *trans,int *n,int *kl,int *ku,int *nrhs,float *ab,int *ldab,int *ipiv,float *b,int *ldb,int *info);
void    sgbtrs(char *trans,int *n,int *kl,int *ku,int *nrhs,float *ab,int *ldab,int *ipiv,float *b,int *ldb,int *info);
void    SGEBAK(char *job,char *side,int *n,int *ilo,int *ihi,float *scale,int *m,float *v,int *ldv,int *info);
void    sgebak(char *job,char *side,int *n,int *ilo,int *ihi,float *scale,int *m,float *v,int *ldv,int *info);
void    SGEBAL(char *job,int *n,float *a,int *lda,int *ilo,int *ihi,float *scale,int *info);
void    sgebal(char *job,int *n,float *a,int *lda,int *ilo,int *ihi,float *scale,int *info);
void    SGEBD2(int *m,int *n,float *a,int *lda,float *d,float *e,float *tauq,float *taup,float *work,int *info);
void    sgebd2(int *m,int *n,float *a,int *lda,float *d,float *e,float *tauq,float *taup,float *work,int *info);
void    SGEBRD(int *m,int *n,float *a,int *lda,float *d,float *e,float *tauq,float *taup,float *work,int *lwork,int *info);
void    sgebrd(int *m,int *n,float *a,int *lda,float *d,float *e,float *tauq,float *taup,float *work,int *lwork,int *info);
void    SGECON(char *norm,int *n,float *a,int *lda,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    sgecon(char *norm,int *n,float *a,int *lda,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    SGEEQU(int *m,int *n,float *a,int *lda,float *r,float *c,float *rowcnd,float *colcnd,float *amax,int *info);
void    sgeequ(int *m,int *n,float *a,int *lda,float *r,float *c,float *rowcnd,float *colcnd,float *amax,int *info);
void    SGEES(char *jobvs,char *sort,void *select,int *n,float *a,int *lda,int *sdim,float *wr,float *wi,float *vs,int *ldvs,float *work,int *lwork,void *bwork,int *info);
void    sgees(char *jobvs,char *sort,void *select,int *n,float *a,int *lda,int *sdim,float *wr,float *wi,float *vs,int *ldvs,float *work,int *lwork,void *bwork,int *info);
void    SGEESX(char *jobvs,char *sort,void *select,char *sense,int *n,float *a,int *lda,int *sdim,float *wr,float *wi,float *vs,int *ldvs,float *rconde,float *rcondv,float *work,int *lwork,int *iwork,int *liwork,void *bwork,int *info);
void    sgeesx(char *jobvs,char *sort,void *select,char *sense,int *n,float *a,int *lda,int *sdim,float *wr,float *wi,float *vs,int *ldvs,float *rconde,float *rcondv,float *work,int *lwork,int *iwork,int *liwork,void *bwork,int *info);
void    SGEEV(char *jobvl,char *jobvr,int *n,float *a,int *lda,float *wr,float *wi,float *vl,int *ldvl,float *vr,int *ldvr,float *work,int *lwork,int *info);
void    sgeev(char *jobvl,char *jobvr,int *n,float *a,int *lda,float *wr,float *wi,float *vl,int *ldvl,float *vr,int *ldvr,float *work,int *lwork,int *info);
void    SGEEVX(char *balanc,char *jobvl,char *jobvr,char *sense,int *n,float *a,int *lda,float *wr,float *wi,float *vl,int *ldvl,float *vr,int *ldvr,int *ilo,int *ihi,float *scale,float *abnrm,float *rconde,float *rcondv,float *work,int *lwork,int *iwork,int *info);
void    sgeevx(char *balanc,char *jobvl,char *jobvr,char *sense,int *n,float *a,int *lda,float *wr,float *wi,float *vl,int *ldvl,float *vr,int *ldvr,int *ilo,int *ihi,float *scale,float *abnrm,float *rconde,float *rcondv,float *work,int *lwork,int *iwork,int *info);
void    SGEGS(char *jobvsl,char *jobvsr,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *vsl,int *ldvsl,float *vsr,int *ldvsr,float *work,int *lwork,int *info);
void    sgegs(char *jobvsl,char *jobvsr,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *vsl,int *ldvsl,float *vsr,int *ldvsr,float *work,int *lwork,int *info);
void    SGEGV(char *jobvl,char *jobvr,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *vl,int *ldvl,float *vr,int *ldvr,float *work,int *lwork,int *info);
void    sgegv(char *jobvl,char *jobvr,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *vl,int *ldvl,float *vr,int *ldvr,float *work,int *lwork,int *info);
void    SGEHD2(int *n,int *ilo,int *ihi,float *a,int *lda,float *tau,float *work,int *info);
void    sgehd2(int *n,int *ilo,int *ihi,float *a,int *lda,float *tau,float *work,int *info);
void    SGEHRD(int *n,int *ilo,int *ihi,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sgehrd(int *n,int *ilo,int *ihi,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SGELQ2(int *m,int *n,float *a,int *lda,float *tau,float *work,int *info);
void    sgelq2(int *m,int *n,float *a,int *lda,float *tau,float *work,int *info);
void    SGELQF(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sgelqf(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SGELS(char *trans,int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,float *work,int *lwork,int *info);
void    sgels(char *trans,int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,float *work,int *lwork,int *info);
void    SGELSD(int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,float *s,float *rcond,int *rank,float *work,int *lwork,int *iwork,int *info);
void    sgelsd(int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,float *s,float *rcond,int *rank,float *work,int *lwork,int *iwork,int *info);
void    SGELSS(int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,float *s,float *rcond,int *rank,float *work,int *lwork,int *info);
void    sgelss(int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,float *s,float *rcond,int *rank,float *work,int *lwork,int *info);
void    SGELSX(int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *jpvt,float *rcond,int *rank,float *work,int *info);
void    sgelsx(int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *jpvt,float *rcond,int *rank,float *work,int *info);
void    SGELSY(int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *jpvt,float *rcond,int *rank,float *work,int *lwork,int *info);
void    sgelsy(int *m,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *jpvt,float *rcond,int *rank,float *work,int *lwork,int *info);
void    SGEQL2(int *m,int *n,float *a,int *lda,float *tau,float *work,int *info);
void    sgeql2(int *m,int *n,float *a,int *lda,float *tau,float *work,int *info);
void    SGEQLF(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sgeqlf(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SGEQP3(int *m,int *n,float *a,int *lda,int *jpvt,float *tau,float *work,int *lwork,int *info);
void    sgeqp3(int *m,int *n,float *a,int *lda,int *jpvt,float *tau,float *work,int *lwork,int *info);
void    SGEQPF(int *m,int *n,float *a,int *lda,int *jpvt,float *tau,float *work,int *info);
void    sgeqpf(int *m,int *n,float *a,int *lda,int *jpvt,float *tau,float *work,int *info);
void    SGEQR2(int *m,int *n,float *a,int *lda,float *tau,float *work,int *info);
void    sgeqr2(int *m,int *n,float *a,int *lda,float *tau,float *work,int *info);
void    SGEQRF(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sgeqrf(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SGERFS(char *trans,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sgerfs(char *trans,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SGERQ2(int *m,int *n,float *a,int *lda,float *tau,float *work,int *info);
void    sgerq2(int *m,int *n,float *a,int *lda,float *tau,float *work,int *info);
void    SGERQF(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sgerqf(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SGESC2(int *n,float *a,int *lda,float *rhs,int *ipiv,int *jpiv,float *scale);
void    sgesc2(int *n,float *a,int *lda,float *rhs,int *ipiv,int *jpiv,float *scale);
void    SGESDD(char *jobz,int *m,int *n,float *a,int *lda,float *s,float *u,int *ldu,float *vt,int *ldvt,float *work,int *lwork,int *iwork,int *info);
void    sgesdd(char *jobz,int *m,int *n,float *a,int *lda,float *s,float *u,int *ldu,float *vt,int *ldvt,float *work,int *lwork,int *iwork,int *info);
void    SGESV(int *n,int *nrhs,float *a,int *lda,int *ipiv,float *b,int *ldb,int *info);
void    sgesv(int *n,int *nrhs,float *a,int *lda,int *ipiv,float *b,int *ldb,int *info);
void    SGESVD(char *jobu,char *jobvt,int *m,int *n,float *a,int *lda,float *s,float *u,int *ldu,float *vt,int *ldvt,float *work,int *lwork,int *info);
void    sgesvd(char *jobu,char *jobvt,int *m,int *n,float *a,int *lda,float *s,float *u,int *ldu,float *vt,int *ldvt,float *work,int *lwork,int *info);
void    SGESVX(char *fact,char *trans,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,int *ipiv,char *equed,float *r,float *c,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sgesvx(char *fact,char *trans,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,int *ipiv,char *equed,float *r,float *c,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SGETC2(int *n,float *a,int *lda,int *ipiv,int *jpiv,int *info);
void    sgetc2(int *n,float *a,int *lda,int *ipiv,int *jpiv,int *info);
void    SGETF2(int *m,int *n,float *a,int *lda,int *ipiv,int *info);
void    sgetf2(int *m,int *n,float *a,int *lda,int *ipiv,int *info);
void    SGETRF(int *m,int *n,float *a,int *lda,int *ipiv,int *info);
void    sgetrf(int *m,int *n,float *a,int *lda,int *ipiv,int *info);
void    SGETRI(int *n,float *a,int *lda,int *ipiv,float *work,int *lwork,int *info);
void    sgetri(int *n,float *a,int *lda,int *ipiv,float *work,int *lwork,int *info);
void    SGETRS(char *trans,int *n,int *nrhs,float *a,int *lda,int *ipiv,float *b,int *ldb,int *info);
void    sgetrs(char *trans,int *n,int *nrhs,float *a,int *lda,int *ipiv,float *b,int *ldb,int *info);
void    SGGBAK(char *job,char *side,int *n,int *ilo,int *ihi,float *lscale,float *rscale,int *m,float *v,int *ldv,int *info);
void    sggbak(char *job,char *side,int *n,int *ilo,int *ihi,float *lscale,float *rscale,int *m,float *v,int *ldv,int *info);
void    SGGBAL(char *job,int *n,float *a,int *lda,float *b,int *ldb,int *ilo,int *ihi,float *lscale,float *rscale,float *work,int *info);
void    sggbal(char *job,int *n,float *a,int *lda,float *b,int *ldb,int *ilo,int *ihi,float *lscale,float *rscale,float *work,int *info);
void    SGGES(char *jobvsl,char *jobvsr,char *sort,void *selctg,int *n,float *a,int *lda,float *b,int *ldb,int *sdim,float *alphar,float *alphai,float *beta,float *vsl,int *ldvsl,float *vsr,int *ldvsr,float *work,int *lwork,void *bwork,int *info);
void    sgges(char *jobvsl,char *jobvsr,char *sort,void *selctg,int *n,float *a,int *lda,float *b,int *ldb,int *sdim,float *alphar,float *alphai,float *beta,float *vsl,int *ldvsl,float *vsr,int *ldvsr,float *work,int *lwork,void *bwork,int *info);
void    SGGESX(char *jobvsl,char *jobvsr,char *sort,void *selctg,char *sense,int *n,float *a,int *lda,float *b,int *ldb,int *sdim,float *alphar,float *alphai,float *beta,float *vsl,int *ldvsl,float *vsr,int *ldvsr,float *rconde,float *rcondv,float *work,int *lwork,int *iwork,int *liwork,void *bwork,int *info);
void    sggesx(char *jobvsl,char *jobvsr,char *sort,void *selctg,char *sense,int *n,float *a,int *lda,float *b,int *ldb,int *sdim,float *alphar,float *alphai,float *beta,float *vsl,int *ldvsl,float *vsr,int *ldvsr,float *rconde,float *rcondv,float *work,int *lwork,int *iwork,int *liwork,void *bwork,int *info);
void    SGGEV(char *jobvl,char *jobvr,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *vl,int *ldvl,float *vr,int *ldvr,float *work,int *lwork,int *info);
void    sggev(char *jobvl,char *jobvr,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *vl,int *ldvl,float *vr,int *ldvr,float *work,int *lwork,int *info);
void    SGGEVX(char *balanc,char *jobvl,char *jobvr,char *sense,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *vl,int *ldvl,float *vr,int *ldvr,int *ilo,int *ihi,float *lscale,float *rscale,float *abnrm,float *bbnrm,float *rconde,float *rcondv,float *work,int *lwork,int *iwork,void *bwork,int *info);
void    sggevx(char *balanc,char *jobvl,char *jobvr,char *sense,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *vl,int *ldvl,float *vr,int *ldvr,int *ilo,int *ihi,float *lscale,float *rscale,float *abnrm,float *bbnrm,float *rconde,float *rcondv,float *work,int *lwork,int *iwork,void *bwork,int *info);
void    SGGGLM(int *n,int *m,int *p,float *a,int *lda,float *b,int *ldb,float *d,float *x,float *y,float *work,int *lwork,int *info);
void    sggglm(int *n,int *m,int *p,float *a,int *lda,float *b,int *ldb,float *d,float *x,float *y,float *work,int *lwork,int *info);
void    SGGHRD(char *compq,char *compz,int *n,int *ilo,int *ihi,float *a,int *lda,float *b,int *ldb,float *q,int *ldq,float *z,int *ldz,int *info);
void    sgghrd(char *compq,char *compz,int *n,int *ilo,int *ihi,float *a,int *lda,float *b,int *ldb,float *q,int *ldq,float *z,int *ldz,int *info);
void    SGGLSE(int *m,int *n,int *p,float *a,int *lda,float *b,int *ldb,float *c,float *d,float *x,float *work,int *lwork,int *info);
void    sgglse(int *m,int *n,int *p,float *a,int *lda,float *b,int *ldb,float *c,float *d,float *x,float *work,int *lwork,int *info);
void    SGGQRF(int *n,int *m,int *p,float *a,int *lda,float *taua,float *b,int *ldb,float *taub,float *work,int *lwork,int *info);
void    sggqrf(int *n,int *m,int *p,float *a,int *lda,float *taua,float *b,int *ldb,float *taub,float *work,int *lwork,int *info);
void    SGGRQF(int *m,int *p,int *n,float *a,int *lda,float *taua,float *b,int *ldb,float *taub,float *work,int *lwork,int *info);
void    sggrqf(int *m,int *p,int *n,float *a,int *lda,float *taua,float *b,int *ldb,float *taub,float *work,int *lwork,int *info);
void    SGGSVD(char *jobu,char *jobv,char *jobq,int *m,int *n,int *p,int *k,int *l,float *a,int *lda,float *b,int *ldb,float *alpha,float *beta,float *u,int *ldu,float *v,int *ldv,float *q,int *ldq,float *work,int *iwork,int *info);
void    sggsvd(char *jobu,char *jobv,char *jobq,int *m,int *n,int *p,int *k,int *l,float *a,int *lda,float *b,int *ldb,float *alpha,float *beta,float *u,int *ldu,float *v,int *ldv,float *q,int *ldq,float *work,int *iwork,int *info);
void    SGGSVP(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,float *a,int *lda,float *b,int *ldb,float *tola,float *tolb,int *k,int *l,float *u,int *ldu,float *v,int *ldv,float *q,int *ldq,int *iwork,float *tau,float *work,int *info);
void    sggsvp(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,float *a,int *lda,float *b,int *ldb,float *tola,float *tolb,int *k,int *l,float *u,int *ldu,float *v,int *ldv,float *q,int *ldq,int *iwork,float *tau,float *work,int *info);
void    SGTCON(char *norm,int *n,float *dl,float *d,float *du,float *du2,int *ipiv,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    sgtcon(char *norm,int *n,float *dl,float *d,float *du,float *du2,int *ipiv,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    SGTRFS(char *trans,int *n,int *nrhs,float *dl,float *d,float *du,float *dlf,float *df,float *duf,float *du2,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sgtrfs(char *trans,int *n,int *nrhs,float *dl,float *d,float *du,float *dlf,float *df,float *duf,float *du2,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SGTSV(int *n,int *nrhs,float *dl,float *d,float *du,float *b,int *ldb,int *info);
void    sgtsv(int *n,int *nrhs,float *dl,float *d,float *du,float *b,int *ldb,int *info);
void    SGTSVX(char *fact,char *trans,int *n,int *nrhs,float *dl,float *d,float *du,float *dlf,float *df,float *duf,float *du2,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sgtsvx(char *fact,char *trans,int *n,int *nrhs,float *dl,float *d,float *du,float *dlf,float *df,float *duf,float *du2,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SGTTRF(int *n,float *dl,float *d,float *du,float *du2,int *ipiv,int *info);
void    sgttrf(int *n,float *dl,float *d,float *du,float *du2,int *ipiv,int *info);
void    SGTTRS(char *trans,int *n,int *nrhs,float *dl,float *d,float *du,float *du2,int *ipiv,float *b,int *ldb,int *info);
void    sgttrs(char *trans,int *n,int *nrhs,float *dl,float *d,float *du,float *du2,int *ipiv,float *b,int *ldb,int *info);
void    SGTTS2(int *itrans,int *n,int *nrhs,float *dl,float *d,float *du,float *du2,int *ipiv,float *b,int *ldb);
void    sgtts2(int *itrans,int *n,int *nrhs,float *dl,float *d,float *du,float *du2,int *ipiv,float *b,int *ldb);
void    SHGEQZ(char *job,char *compq,char *compz,int *n,int *ilo,int *ihi,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *q,int *ldq,float *z,int *ldz,float *work,int *lwork,int *info);
void    shgeqz(char *job,char *compq,char *compz,int *n,int *ilo,int *ihi,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *q,int *ldq,float *z,int *ldz,float *work,int *lwork,int *info);
void    SHSEIN(char *side,char *eigsrc,char *initv,void *select,int *n,float *h,int *ldh,float *wr,float *wi,float *vl,int *ldvl,float *vr,int *ldvr,int *mm,int *m,float *work,int *ifaill,int *ifailr,int *info);
void    shsein(char *side,char *eigsrc,char *initv,void *select,int *n,float *h,int *ldh,float *wr,float *wi,float *vl,int *ldvl,float *vr,int *ldvr,int *mm,int *m,float *work,int *ifaill,int *ifailr,int *info);
void    SHSEQR(char *job,char *compz,int *n,int *ilo,int *ihi,float *h,int *ldh,float *wr,float *wi,float *z,int *ldz,float *work,int *lwork,int *info);
void    shseqr(char *job,char *compz,int *n,int *ilo,int *ihi,float *h,int *ldh,float *wr,float *wi,float *z,int *ldz,float *work,int *lwork,int *info);
void    SLABAD(float *small,float *large);
void    slabad(float *small,float *large);
void    SLABRD(int *m,int *n,int *nb,float *a,int *lda,float *d,float *e,float *tauq,float *taup,float *x,int *ldx,float *y,int *ldy);
void    slabrd(int *m,int *n,int *nb,float *a,int *lda,float *d,float *e,float *tauq,float *taup,float *x,int *ldx,float *y,int *ldy);
void    SLACON(int *n,float *v,float *x,int *isgn,float *est,int *kase);
void    slacon(int *n,float *v,float *x,int *isgn,float *est,int *kase);
void    SLACPY(char *uplo,int *m,int *n,float *a,int *lda,float *b,int *ldb);
void    slacpy(char *uplo,int *m,int *n,float *a,int *lda,float *b,int *ldb);
void    SLADIV(float *a,float *b,float *c,float *d,float *p,float *q);
void    sladiv(float *a,float *b,float *c,float *d,float *p,float *q);
void    SLAE2(float *a,float *b,float *c,float *rt1,float *rt2);
void    slae2(float *a,float *b,float *c,float *rt1,float *rt2);
void    SLAEBZ(int *ijob,int *nitmax,int *n,int *mmax,int *minp,int *nbmin,float *abstol,float *reltol,float *pivmin,float *d,float *e,float *e2,int *nval,float *ab,float *c,int *mout,int *nab,float *work,int *iwork,int *info);
void    slaebz(int *ijob,int *nitmax,int *n,int *mmax,int *minp,int *nbmin,float *abstol,float *reltol,float *pivmin,float *d,float *e,float *e2,int *nval,float *ab,float *c,int *mout,int *nab,float *work,int *iwork,int *info);
void    SLAED0(int *icompq,int *qsiz,int *n,float *d,float *e,float *q,int *ldq,float *qstore,int *ldqs,float *work,int *iwork,int *info);
void    slaed0(int *icompq,int *qsiz,int *n,float *d,float *e,float *q,int *ldq,float *qstore,int *ldqs,float *work,int *iwork,int *info);
void    SLAED1(int *n,float *d,float *q,int *ldq,int *indxq,float *rho,int *cutpnt,float *work,int *iwork,int *info);
void    slaed1(int *n,float *d,float *q,int *ldq,int *indxq,float *rho,int *cutpnt,float *work,int *iwork,int *info);
void    SLAED2(int *k,int *n,int *n1,float *d,float *q,int *ldq,int *indxq,float *rho,float *z,float *dlamda,float *w,float *q2,int *indx,int *indxc,int *indxp,int *coltyp,int *info);
void    slaed2(int *k,int *n,int *n1,float *d,float *q,int *ldq,int *indxq,float *rho,float *z,float *dlamda,float *w,float *q2,int *indx,int *indxc,int *indxp,int *coltyp,int *info);
void    SLAED3(int *k,int *n,int *n1,float *d,float *q,int *ldq,float *rho,float *dlamda,float *q2,int *indx,int *ctot,float *w,float *s,int *info);
void    slaed3(int *k,int *n,int *n1,float *d,float *q,int *ldq,float *rho,float *dlamda,float *q2,int *indx,int *ctot,float *w,float *s,int *info);
void    SLAED4(int *n,int *i,float *d,float *z,float *delta,float *rho,float *dlam,int *info);
void    slaed4(int *n,int *i,float *d,float *z,float *delta,float *rho,float *dlam,int *info);
void    SLAED5(int *i,float *d,float *z,float *delta,float *rho,float *dlam);
void    slaed5(int *i,float *d,float *z,float *delta,float *rho,float *dlam);
void    SLAED6(int *kniter,void *orgati,float *rho,float *d,float *z,float *finit,float *tau,int *info);
void    slaed6(int *kniter,void *orgati,float *rho,float *d,float *z,float *finit,float *tau,int *info);
void    SLAED7(int *icompq,int *n,int *qsiz,int *tlvls,int *curlvl,int *curpbm,float *d,float *q,int *ldq,int *indxq,float *rho,int *cutpnt,float *qstore,int *qptr,int *prmptr,int *perm,int *givptr,int *givcol,float *givnum,float *work,int *iwork,int *info);
void    slaed7(int *icompq,int *n,int *qsiz,int *tlvls,int *curlvl,int *curpbm,float *d,float *q,int *ldq,int *indxq,float *rho,int *cutpnt,float *qstore,int *qptr,int *prmptr,int *perm,int *givptr,int *givcol,float *givnum,float *work,int *iwork,int *info);
void    SLAED8(int *icompq,int *k,int *n,int *qsiz,float *d,float *q,int *ldq,int *indxq,float *rho,int *cutpnt,float *z,float *dlamda,float *q2,int *ldq2,float *w,int *perm,int *givptr,int *givcol,float *givnum,int *indxp,int *indx,int *info);
void    slaed8(int *icompq,int *k,int *n,int *qsiz,float *d,float *q,int *ldq,int *indxq,float *rho,int *cutpnt,float *z,float *dlamda,float *q2,int *ldq2,float *w,int *perm,int *givptr,int *givcol,float *givnum,int *indxp,int *indx,int *info);
void    SLAED9(int *k,int *kstart,int *kstop,int *n,float *d,float *q,int *ldq,float *rho,float *dlamda,float *w,float *s,int *lds,int *info);
void    slaed9(int *k,int *kstart,int *kstop,int *n,float *d,float *q,int *ldq,float *rho,float *dlamda,float *w,float *s,int *lds,int *info);
void    SLAEDA(int *n,int *tlvls,int *curlvl,int *curpbm,int *prmptr,int *perm,int *givptr,int *givcol,float *givnum,float *q,int *qptr,float *z,float *ztemp,int *info);
void    slaeda(int *n,int *tlvls,int *curlvl,int *curpbm,int *prmptr,int *perm,int *givptr,int *givcol,float *givnum,float *q,int *qptr,float *z,float *ztemp,int *info);
void    SLAEIN(void *rightv,void *noinit,int *n,float *h,int *ldh,float *wr,float *wi,float *vr,float *vi,float *b,int *ldb,float *work,float *eps3,float *smlnum,float *bignum,int *info);
void    slaein(void *rightv,void *noinit,int *n,float *h,int *ldh,float *wr,float *wi,float *vr,float *vi,float *b,int *ldb,float *work,float *eps3,float *smlnum,float *bignum,int *info);
void    SLAEV2(float *a,float *b,float *c,float *rt1,float *rt2,float *cs1,float *sn1);
void    slaev2(float *a,float *b,float *c,float *rt1,float *rt2,float *cs1,float *sn1);
void    SLAEXC(void *wantq,int *n,float *t,int *ldt,float *q,int *ldq,int *j1,int *n1,int *n2,float *work,int *info);
void    slaexc(void *wantq,int *n,float *t,int *ldt,float *q,int *ldq,int *j1,int *n1,int *n2,float *work,int *info);
void    SLAG2(float *a,int *lda,float *b,int *ldb,float *safmin,float *scale1,float *scale2,float *wr1,float *wr2,float *wi);
void    slag2(float *a,int *lda,float *b,int *ldb,float *safmin,float *scale1,float *scale2,float *wr1,float *wr2,float *wi);
void    SLAGS2(void *upper,float *a1,float *a2,float *a3,float *b1,float *b2,float *b3,float *csu,float *snu,float *csv,float *snv,float *csq,float *snq);
void    slags2(void *upper,float *a1,float *a2,float *a3,float *b1,float *b2,float *b3,float *csu,float *snu,float *csv,float *snv,float *csq,float *snq);
void    SLAGTF(int *n,float *a,float *lambda,float *b,float *c,float *tol,float *d,int *in,int *info);
void    slagtf(int *n,float *a,float *lambda,float *b,float *c,float *tol,float *d,int *in,int *info);
void    SLAGTM(char *trans,int *n,int *nrhs,float *alpha,float *dl,float *d,float *du,float *x,int *ldx,float *beta,float *b,int *ldb);
void    slagtm(char *trans,int *n,int *nrhs,float *alpha,float *dl,float *d,float *du,float *x,int *ldx,float *beta,float *b,int *ldb);
void    SLAGTS(int *job,int *n,float *a,float *b,float *c,float *d,int *in,float *y,float *tol,int *info);
void    slagts(int *job,int *n,float *a,float *b,float *c,float *d,int *in,float *y,float *tol,int *info);
void    SLAGV2(float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *csl,float *snl,float *csr,float *snr);
void    slagv2(float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *csl,float *snl,float *csr,float *snr);
void    SLAHQR(void *wantt,void *wantz,int *n,int *ilo,int *ihi,float *h,int *ldh,float *wr,float *wi,int *iloz,int *ihiz,float *z,int *ldz,int *info);
void    slahqr(void *wantt,void *wantz,int *n,int *ilo,int *ihi,float *h,int *ldh,float *wr,float *wi,int *iloz,int *ihiz,float *z,int *ldz,int *info);
void    SLAHRD(int *n,int *k,int *nb,float *a,int *lda,float *tau,float *t,int *ldt,float *y,int *ldy);
void    slahrd(int *n,int *k,int *nb,float *a,int *lda,float *tau,float *t,int *ldt,float *y,int *ldy);
void    SLAIC1(int *job,int *j,float *x,float *sest,float *w,float *gamma,float *sestpr,float *s,float *c);
void    slaic1(int *job,int *j,float *x,float *sest,float *w,float *gamma,float *sestpr,float *s,float *c);
void    SLALN2(void *ltrans,int *na,int *nw,float *smin,float *ca,float *a,int *lda,float *d1,float *d2,float *b,int *ldb,float *wr,float *wi,float *x,int *ldx,float *scale,float *xnorm,int *info);
void    slaln2(void *ltrans,int *na,int *nw,float *smin,float *ca,float *a,int *lda,float *d1,float *d2,float *b,int *ldb,float *wr,float *wi,float *x,int *ldx,float *scale,float *xnorm,int *info);
void    SLALS0(int *icompq,int *nl,int *nr,int *sqre,int *nrhs,float *b,int *ldb,float *bx,int *ldbx,int *perm,int *givptr,int *givcol,int *ldgcol,float *givnum,int *ldgnum,float *poles,float *difl,float *difr,float *z,int *k,float *c,float *s,float *work,int *info);
void    slals0(int *icompq,int *nl,int *nr,int *sqre,int *nrhs,float *b,int *ldb,float *bx,int *ldbx,int *perm,int *givptr,int *givcol,int *ldgcol,float *givnum,int *ldgnum,float *poles,float *difl,float *difr,float *z,int *k,float *c,float *s,float *work,int *info);
void    SLALSA(int *icompq,int *smlsiz,int *n,int *nrhs,float *b,int *ldb,float *bx,int *ldbx,float *u,int *ldu,float *vt,int *k,float *difl,float *difr,float *z,float *poles,int *givptr,int *givcol,int *ldgcol,int *perm,float *givnum,float *c,float *s,float *work,int *iwork,int *info);
void    slalsa(int *icompq,int *smlsiz,int *n,int *nrhs,float *b,int *ldb,float *bx,int *ldbx,float *u,int *ldu,float *vt,int *k,float *difl,float *difr,float *z,float *poles,int *givptr,int *givcol,int *ldgcol,int *perm,float *givnum,float *c,float *s,float *work,int *iwork,int *info);
void    SLALSD(char *uplo,int *smlsiz,int *n,int *nrhs,float *d,float *e,float *b,int *ldb,float *rcond,int *rank,float *work,int *iwork,int *info);
void    slalsd(char *uplo,int *smlsiz,int *n,int *nrhs,float *d,float *e,float *b,int *ldb,float *rcond,int *rank,float *work,int *iwork,int *info);
float   SLAMC3(float *a,float *b);
float   slamc3(float *a,float *b);
float   SLAMCH(char *cmach);
float   slamch(char *cmach);
void    SLAMRG(int *n1,int *n2,float *a,int *strd1,int *strd2,int *index);
void    slamrg(int *n1,int *n2,float *a,int *strd1,int *strd2,int *index);
float   SLANGB(char *norm,int *n,int *kl,int *ku,float *ab,int *ldab,float *work);
float   slangb(char *norm,int *n,int *kl,int *ku,float *ab,int *ldab,float *work);
float   SLANGE(char *norm,int *m,int *n,float *a,int *lda,float *work);
float   slange(char *norm,int *m,int *n,float *a,int *lda,float *work);
float   SLANGT(char *norm,int *n,float *dl,float *d,float *du);
float   slangt(char *norm,int *n,float *dl,float *d,float *du);
float   SLANHS(char *norm,int *n,float *a,int *lda,float *work);
float   slanhs(char *norm,int *n,float *a,int *lda,float *work);
float   SLANSB(char *norm,char *uplo,int *n,int *k,float *ab,int *ldab,float *work);
float   slansb(char *norm,char *uplo,int *n,int *k,float *ab,int *ldab,float *work);
float   SLANSP(char *norm,char *uplo,int *n,float *ap,float *work);
float   slansp(char *norm,char *uplo,int *n,float *ap,float *work);
float   SLANST(char *norm,int *n,float *d,float *e);
float   slanst(char *norm,int *n,float *d,float *e);
float   SLANSY(char *norm,char *uplo,int *n,float *a,int *lda,float *work);
float   slansy(char *norm,char *uplo,int *n,float *a,int *lda,float *work);
float   SLANTB(char *norm,char *uplo,char *diag,int *n,int *k,float *ab,int *ldab,float *work);
float   slantb(char *norm,char *uplo,char *diag,int *n,int *k,float *ab,int *ldab,float *work);
float   SLANTP(char *norm,char *uplo,char *diag,int *n,float *ap,float *work);
float   slantp(char *norm,char *uplo,char *diag,int *n,float *ap,float *work);
float   SLANTR(char *norm,char *uplo,char *diag,int *m,int *n,float *a,int *lda,float *work);
float   slantr(char *norm,char *uplo,char *diag,int *m,int *n,float *a,int *lda,float *work);
void    SLANV2(float *a,float *b,float *c,float *d,float *rt1r,float *rt1i,float *rt2r,float *rt2i,float *cs,float *sn);
void    slanv2(float *a,float *b,float *c,float *d,float *rt1r,float *rt1i,float *rt2r,float *rt2i,float *cs,float *sn);
void    SLAPLL(int *n,float *x,int *incx,float *y,int *incy,float *ssmin);
void    slapll(int *n,float *x,int *incx,float *y,int *incy,float *ssmin);
void    SLAPMT(void *forwrd,int *m,int *n,float *x,int *ldx,int *k);
void    slapmt(void *forwrd,int *m,int *n,float *x,int *ldx,int *k);
float   SLAPY2(float *x,float *y);
float   slapy2(float *x,float *y);
float   SLAPY3(float *x,float *y,float *z);
float   slapy3(float *x,float *y,float *z);
void    SLAQGB(int *m,int *n,int *kl,int *ku,float *ab,int *ldab,float *r,float *c,float *rowcnd,float *colcnd,float *amax,char *equed);
void    slaqgb(int *m,int *n,int *kl,int *ku,float *ab,int *ldab,float *r,float *c,float *rowcnd,float *colcnd,float *amax,char *equed);
void    SLAQGE(int *m,int *n,float *a,int *lda,float *r,float *c,float *rowcnd,float *colcnd,float *amax,char *equed);
void    slaqge(int *m,int *n,float *a,int *lda,float *r,float *c,float *rowcnd,float *colcnd,float *amax,char *equed);
void    SLAQP2(int *m,int *n,int *offset,float *a,int *lda,int *jpvt,float *tau,float *vn1,float *vn2,float *work);
void    slaqp2(int *m,int *n,int *offset,float *a,int *lda,int *jpvt,float *tau,float *vn1,float *vn2,float *work);
void    SLAQPS(int *m,int *n,int *offset,int *nb,int *kb,float *a,int *lda,int *jpvt,float *tau,float *vn1,float *vn2,float *auxv,float *f,int *ldf);
void    slaqps(int *m,int *n,int *offset,int *nb,int *kb,float *a,int *lda,int *jpvt,float *tau,float *vn1,float *vn2,float *auxv,float *f,int *ldf);
void    SLAQSB(char *uplo,int *n,int *kd,float *ab,int *ldab,float *s,float *scond,float *amax,char *equed);
void    slaqsb(char *uplo,int *n,int *kd,float *ab,int *ldab,float *s,float *scond,float *amax,char *equed);
void    SLAQSP(char *uplo,int *n,float *ap,float *s,float *scond,float *amax,char *equed);
void    slaqsp(char *uplo,int *n,float *ap,float *s,float *scond,float *amax,char *equed);
void    SLAQSY(char *uplo,int *n,float *a,int *lda,float *s,float *scond,float *amax,char *equed);
void    slaqsy(char *uplo,int *n,float *a,int *lda,float *s,float *scond,float *amax,char *equed);
float   SLAQTR(float *ltran,void *lreal,float *n,float *t,int *ldt,float *b,float *w,float *scale,float *x,float *work,int *info);
float   slaqtr(float *ltran,void *lreal,float *n,float *t,int *ldt,float *b,float *w,float *scale,float *x,float *work,int *info);
void    SLAR1V(int *n,int *b1,int *bn,float *sigma,float *d,float *l,float *ld,float *lld,float *gersch,float *z,float *ztz,float *mingma,int *r,int *isuppz,float *work);
void    slar1v(int *n,int *b1,int *bn,float *sigma,float *d,float *l,float *ld,float *lld,float *gersch,float *z,float *ztz,float *mingma,int *r,int *isuppz,float *work);
void    SLAR2V(int *n,float *x,float *y,float *z,int *incx,float *c,float *s,int *incc);
void    slar2v(int *n,float *x,float *y,float *z,int *incx,float *c,float *s,int *incc);
void    SLARF(char *side,int *m,int *n,float *v,int *incv,float *tau,float *c,int *ldc,float *work);
void    slarf(char *side,int *m,int *n,float *v,int *incv,float *tau,float *c,int *ldc,float *work);
void    SLARFB(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,float *v,int *ldv,float *t,int *ldt,float *c,int *ldc,float *work,int *ldwork);
void    slarfb(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,float *v,int *ldv,float *t,int *ldt,float *c,int *ldc,float *work,int *ldwork);
void    SLARFG(int *n,float *alpha,float *x,int *incx,float *tau);
void    slarfg(int *n,float *alpha,float *x,int *incx,float *tau);
void    SLARFT(char *direct,char *storev,int *n,int *k,float *v,int *ldv,float *tau,float *t,int *ldt);
void    slarft(char *direct,char *storev,int *n,int *k,float *v,int *ldv,float *tau,float *t,int *ldt);
void    SLARFX(char *side,int *m,int *n,float *v,float *tau,float *c,int *ldc,float *work);
void    slarfx(char *side,int *m,int *n,float *v,float *tau,float *c,int *ldc,float *work);
void    SLARGV(int *n,float *x,int *incx,float *y,int *incy,float *c,int *incc);
void    slargv(int *n,float *x,int *incx,float *y,int *incy,float *c,int *incc);
void    SLARNV(int *idist,int *iseed,int *n,float *x);
void    slarnv(int *idist,int *iseed,int *n,float *x);
void    SLARRB(int *n,float *d,float *l,float *ld,float *lld,int *ifirst,int *ilast,float *sigma,float *reltol,float *w,float *wgap,float *werr,float *work,int *iwork,int *info);
void    slarrb(int *n,float *d,float *l,float *ld,float *lld,int *ifirst,int *ilast,float *sigma,float *reltol,float *w,float *wgap,float *werr,float *work,int *iwork,int *info);
void    SLARRE(int *n,float *d,float *e,float *tol,int *nsplit,int *isplit,int *m,float *w,float *woff,float *gersch,float *work,int *info);
void    slarre(int *n,float *d,float *e,float *tol,int *nsplit,int *isplit,int *m,float *w,float *woff,float *gersch,float *work,int *info);
void    SLARRF(int *n,float *d,float *l,float *ld,float *lld,int *ifirst,int *ilast,float *w,float *dplus,float *lplus,float *work,int *iwork,int *info);
void    slarrf(int *n,float *d,float *l,float *ld,float *lld,int *ifirst,int *ilast,float *w,float *dplus,float *lplus,float *work,int *iwork,int *info);
void    SLARRV(int *n,float *d,float *l,int *isplit,int *m,float *w,int *iblock,float *gersch,float *tol,float *z,int *ldz,int *isuppz,float *work,int *iwork,int *info);
void    slarrv(int *n,float *d,float *l,int *isplit,int *m,float *w,int *iblock,float *gersch,float *tol,float *z,int *ldz,int *isuppz,float *work,int *iwork,int *info);
void    SLARTG(float *f,float *g,float *cs,float *sn,float *r);
void    slartg(float *f,float *g,float *cs,float *sn,float *r);
void    SLARTV(int *n,float *x,int *incx,float *y,int *incy,float *c,float *s,int *incc);
void    slartv(int *n,float *x,int *incx,float *y,int *incy,float *c,float *s,int *incc);
void    SLARUV(int *iseed,int *n,float *x);
void    slaruv(int *iseed,int *n,float *x);
void    SLARZ(char *side,int *m,int *n,int *l,float *v,int *incv,float *tau,float *c,int *ldc,float *work);
void    slarz(char *side,int *m,int *n,int *l,float *v,int *incv,float *tau,float *c,int *ldc,float *work);
void    SLARZB(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,int *l,float *v,int *ldv,float *t,int *ldt,float *c,int *ldc,float *work,int *ldwork);
void    slarzb(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,int *l,float *v,int *ldv,float *t,int *ldt,float *c,int *ldc,float *work,int *ldwork);
void    SLARZT(char *direct,char *storev,int *n,int *k,float *v,int *ldv,float *tau,float *t,int *ldt);
void    slarzt(char *direct,char *storev,int *n,int *k,float *v,int *ldv,float *tau,float *t,int *ldt);
void    SLAS2(float *f,float *g,float *h,float *ssmin,float *ssmax);
void    slas2(float *f,float *g,float *h,float *ssmin,float *ssmax);
void    SLASCL(char *type,int *kl,int *ku,float *cfrom,float *cto,int *m,int *n,float *a,int *lda,int *info);
void    slascl(char *type,int *kl,int *ku,float *cfrom,float *cto,int *m,int *n,float *a,int *lda,int *info);
void    SLASD0(int *n,int *sqre,float *d,float *e,float *u,int *ldu,float *vt,int *ldvt,int *smlsiz,int *iwork,float *work,int *info);
void    slasd0(int *n,int *sqre,float *d,float *e,float *u,int *ldu,float *vt,int *ldvt,int *smlsiz,int *iwork,float *work,int *info);
void    SLASD1(int *nl,int *nr,int *sqre,float *d,float *alpha,float *beta,float *u,int *ldu,float *vt,int *ldvt,int *idxq,int *iwork,float *work,int *info);
void    slasd1(int *nl,int *nr,int *sqre,float *d,float *alpha,float *beta,float *u,int *ldu,float *vt,int *ldvt,int *idxq,int *iwork,float *work,int *info);
void    SLASD2(int *nl,int *nr,int *sqre,int *k,float *d,float *z,float *alpha,float *beta,float *u,int *ldu,float *vt,int *ldvt,float *dsigma,float *u2,int *ldu2,float *vt2,int *ldvt2,int *idxp,int *idx,int *idxc,int *idxq,int *coltyp,int *info);
void    slasd2(int *nl,int *nr,int *sqre,int *k,float *d,float *z,float *alpha,float *beta,float *u,int *ldu,float *vt,int *ldvt,float *dsigma,float *u2,int *ldu2,float *vt2,int *ldvt2,int *idxp,int *idx,int *idxc,int *idxq,int *coltyp,int *info);
void    SLASD3(int *nl,int *nr,int *sqre,int *k,float *d,float *q,int *ldq,float *dsigma,float *u,int *ldu,float *u2,int *ldu2,float *vt,int *ldvt,float *vt2,int *ldvt2,int *idxc,int *ctot,float *z,int *info);
void    slasd3(int *nl,int *nr,int *sqre,int *k,float *d,float *q,int *ldq,float *dsigma,float *u,int *ldu,float *u2,int *ldu2,float *vt,int *ldvt,float *vt2,int *ldvt2,int *idxc,int *ctot,float *z,int *info);
void    SLASD4(int *n,int *i,float *d,float *z,float *delta,float *rho,float *sigma,float *work,int *info);
void    slasd4(int *n,int *i,float *d,float *z,float *delta,float *rho,float *sigma,float *work,int *info);
void    SLASD5(int *i,float *d,float *z,float *delta,float *rho,float *dsigma,float *work);
void    slasd5(int *i,float *d,float *z,float *delta,float *rho,float *dsigma,float *work);
void    SLASD6(int *icompq,int *nl,int *nr,int *sqre,float *d,float *vf,float *vl,float *alpha,float *beta,int *idxq,int *perm,int *givptr,int *givcol,int *ldgcol,float *givnum,int *ldgnum,float *poles,float *difl,float *difr,float *z,int *k,float *c,float *s,float *work,int *iwork,int *info);
void    slasd6(int *icompq,int *nl,int *nr,int *sqre,float *d,float *vf,float *vl,float *alpha,float *beta,int *idxq,int *perm,int *givptr,int *givcol,int *ldgcol,float *givnum,int *ldgnum,float *poles,float *difl,float *difr,float *z,int *k,float *c,float *s,float *work,int *iwork,int *info);
void    SLASD7(int *icompq,int *nl,int *nr,int *sqre,int *k,float *d,float *z,float *zw,float *vf,float *vfw,float *vl,float *vlw,float *alpha,float *beta,float *dsigma,int *idx,int *idxp,int *idxq,int *perm,int *givptr,int *givcol,int *ldgcol,float *givnum,int *ldgnum,float *c,float *s,int *info);
void    slasd7(int *icompq,int *nl,int *nr,int *sqre,int *k,float *d,float *z,float *zw,float *vf,float *vfw,float *vl,float *vlw,float *alpha,float *beta,float *dsigma,int *idx,int *idxp,int *idxq,int *perm,int *givptr,int *givcol,int *ldgcol,float *givnum,int *ldgnum,float *c,float *s,int *info);
void    SLASD8(int *icompq,int *k,float *d,float *z,float *vf,float *vl,float *difl,float *difr,int *lddifr,float *dsigma,float *work,int *info);
void    slasd8(int *icompq,int *k,float *d,float *z,float *vf,float *vl,float *difl,float *difr,int *lddifr,float *dsigma,float *work,int *info);
void    SLASD9(int *icompq,int *ldu,int *k,float *d,float *z,float *vf,float *vl,float *difl,float *difr,float *dsigma,float *work,int *info);
void    slasd9(int *icompq,int *ldu,int *k,float *d,float *z,float *vf,float *vl,float *difl,float *difr,float *dsigma,float *work,int *info);
void    SLASDA(int *icompq,int *smlsiz,int *n,int *sqre,float *d,float *e,float *u,int *ldu,float *vt,int *k,float *difl,float *difr,float *z,float *poles,int *givptr,int *givcol,int *ldgcol,int *perm,float *givnum,float *c,float *s,float *work,int *iwork,int *info);
void    slasda(int *icompq,int *smlsiz,int *n,int *sqre,float *d,float *e,float *u,int *ldu,float *vt,int *k,float *difl,float *difr,float *z,float *poles,int *givptr,int *givcol,int *ldgcol,int *perm,float *givnum,float *c,float *s,float *work,int *iwork,int *info);
void    SLASDQ(char *uplo,int *sqre,int *n,int *ncvt,int *nru,int *ncc,float *d,float *e,float *vt,int *ldvt,float *u,int *ldu,float *c,int *ldc,float *work,int *info);
void    slasdq(char *uplo,int *sqre,int *n,int *ncvt,int *nru,int *ncc,float *d,float *e,float *vt,int *ldvt,float *u,int *ldu,float *c,int *ldc,float *work,int *info);
void    SLASDT(int *n,int *lvl,int *nd,int *inode,int *ndiml,int *ndimr,int *msub);
void    slasdt(int *n,int *lvl,int *nd,int *inode,int *ndiml,int *ndimr,int *msub);
void    SLASET(char *uplo,int *m,int *n,float *alpha,float *beta,float *a,int *lda);
void    slaset(char *uplo,int *m,int *n,float *alpha,float *beta,float *a,int *lda);
void    SLASQ1(int *n,float *d,float *e,float *work,int *info);
void    slasq1(int *n,float *d,float *e,float *work,int *info);
void    SLASQ2(int *n,float *z,int *info);
void    slasq2(int *n,float *z,int *info);
void    SLASQ3(int *i0,int *n0,float *z,int *pp,float *dmin,float *sigma,float *desig,float *qmax,int *nfail,int *iter,int *ndiv,void *ieee);
void    slasq3(int *i0,int *n0,float *z,int *pp,float *dmin,float *sigma,float *desig,float *qmax,int *nfail,int *iter,int *ndiv,void *ieee);
void    SLASQ4(int *i0,int *n0,float *z,int *pp,int *n0in,float *dmin,float *dmin1,float *dmin2,float *dn,float *dn1,float *dn2,float *tau,int *ttype);
void    slasq4(int *i0,int *n0,float *z,int *pp,int *n0in,float *dmin,float *dmin1,float *dmin2,float *dn,float *dn1,float *dn2,float *tau,int *ttype);
void    SLASQ5(int *i0,int *n0,float *z,int *pp,float *tau,float *dmin,float *dmin1,float *dmin2,float *dn,float *dnm1,float *dnm2,void *ieee);
void    slasq5(int *i0,int *n0,float *z,int *pp,float *tau,float *dmin,float *dmin1,float *dmin2,float *dn,float *dnm1,float *dnm2,void *ieee);
void    SLASQ6(int *i0,int *n0,float *z,int *pp,float *dmin,float *dmin1,float *dmin2,float *dn,float *dnm1,float *dnm2);
void    slasq6(int *i0,int *n0,float *z,int *pp,float *dmin,float *dmin1,float *dmin2,float *dn,float *dnm1,float *dnm2);
void    SLASR(char *side,char *pivot,char *direct,int *m,int *n,float *c,float *s,float *a,int *lda);
void    slasr(char *side,char *pivot,char *direct,int *m,int *n,float *c,float *s,float *a,int *lda);
void    SLASRT(char *id,int *n,float *d,int *info);
void    slasrt(char *id,int *n,float *d,int *info);
void    SLASSQ(int *n,float *x,int *incx,float *scale,float *sumsq);
void    slassq(int *n,float *x,int *incx,float *scale,float *sumsq);
void    SLASV2(float *f,float *g,float *h,float *ssmin,float *ssmax,float *snr,float *csr,float *snl,float *csl);
void    slasv2(float *f,float *g,float *h,float *ssmin,float *ssmax,float *snr,float *csr,float *snl,float *csl);
void    SLASWP(int *n,float *a,int *lda,int *k1,int *k2,int *ipiv,int *incx);
void    slaswp(int *n,float *a,int *lda,int *k1,int *k2,int *ipiv,int *incx);
void    SLASY2(void *ltranl,void *ltranr,int *isgn,int *n1,int *n2,float *tl,int *ldtl,float *tr,int *ldtr,float *b,int *ldb,float *scale,float *x,int *ldx,float *xnorm,int *info);
void    slasy2(void *ltranl,void *ltranr,int *isgn,int *n1,int *n2,float *tl,int *ldtl,float *tr,int *ldtr,float *b,int *ldb,float *scale,float *x,int *ldx,float *xnorm,int *info);
void    SLASYF(char *uplo,int *n,int *nb,int *kb,float *a,int *lda,int *ipiv,float *w,int *ldw,int *info);
void    slasyf(char *uplo,int *n,int *nb,int *kb,float *a,int *lda,int *ipiv,float *w,int *ldw,int *info);
void    SLATBS(char *uplo,char *trans,char *diag,char *normin,int *n,int *kd,float *ab,int *ldab,float *x,float *scale,float *cnorm,int *info);
void    slatbs(char *uplo,char *trans,char *diag,char *normin,int *n,int *kd,float *ab,int *ldab,float *x,float *scale,float *cnorm,int *info);
void    SLATDF(int *ijob,int *n,float *z,int *ldz,float *rhs,float *rdsum,float *rdscal,int *ipiv,int *jpiv);
void    slatdf(int *ijob,int *n,float *z,int *ldz,float *rhs,float *rdsum,float *rdscal,int *ipiv,int *jpiv);
void    SLATPS(char *uplo,char *trans,char *diag,char *normin,int *n,float *ap,float *x,float *scale,float *cnorm,int *info);
void    slatps(char *uplo,char *trans,char *diag,char *normin,int *n,float *ap,float *x,float *scale,float *cnorm,int *info);
void    SLATRD(char *uplo,int *n,int *nb,float *a,int *lda,float *e,float *tau,float *w,int *ldw);
void    slatrd(char *uplo,int *n,int *nb,float *a,int *lda,float *e,float *tau,float *w,int *ldw);
void    SLATRS(char *uplo,char *trans,char *diag,char *normin,int *n,float *a,int *lda,float *x,float *scale,float *cnorm,int *info);
void    slatrs(char *uplo,char *trans,char *diag,char *normin,int *n,float *a,int *lda,float *x,float *scale,float *cnorm,int *info);
void    SLATRZ(int *m,int *n,int *l,float *a,int *lda,float *tau,float *work);
void    slatrz(int *m,int *n,int *l,float *a,int *lda,float *tau,float *work);
void    SLATZM(char *side,int *m,int *n,float *v,int *incv,float *tau,float *c1,float *c2,int *ldc,float *work);
void    slatzm(char *side,int *m,int *n,float *v,int *incv,float *tau,float *c1,float *c2,int *ldc,float *work);
void    SLAUU2(char *uplo,int *n,float *a,int *lda,int *info);
void    slauu2(char *uplo,int *n,float *a,int *lda,int *info);
void    SLAUUM(char *uplo,int *n,float *a,int *lda,int *info);
void    slauum(char *uplo,int *n,float *a,int *lda,int *info);
void    SOPGTR(char *uplo,int *n,float *ap,float *tau,float *q,int *ldq,float *work,int *info);
void    sopgtr(char *uplo,int *n,float *ap,float *tau,float *q,int *ldq,float *work,int *info);
void    SOPMTR(char *side,char *uplo,char *trans,int *m,int *n,float *ap,float *tau,float *c,int *ldc,float *work,int *info);
void    sopmtr(char *side,char *uplo,char *trans,int *m,int *n,float *ap,float *tau,float *c,int *ldc,float *work,int *info);
void    SORG2L(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *info);
void    sorg2l(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *info);
void    SORG2R(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *info);
void    sorg2r(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *info);
void    SORGBR(char *vect,int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sorgbr(char *vect,int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SORGHR(int *n,int *ilo,int *ihi,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sorghr(int *n,int *ilo,int *ihi,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SORGL2(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *info);
void    sorgl2(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *info);
void    SORGLQ(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sorglq(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SORGQL(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sorgql(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SORGQR(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sorgqr(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SORGR2(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *info);
void    sorgr2(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *info);
void    SORGRQ(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sorgrq(int *m,int *n,int *k,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SORGTR(char *uplo,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    sorgtr(char *uplo,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    SORM2L(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    sorm2l(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    SORM2R(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    sorm2r(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    SORMBR(char *vect,char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    sormbr(char *vect,char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    SORMHR(char *side,char *trans,int *m,int *n,int *ilo,int *ihi,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    sormhr(char *side,char *trans,int *m,int *n,int *ilo,int *ihi,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    SORML2(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    sorml2(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    SORMLQ(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    sormlq(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    SORMQL(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    sormql(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    SORMQR(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    sormqr(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    SORMR2(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    sormr2(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    SORMR3(char *side,char *trans,int *m,int *n,int *k,int *l,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    sormr3(char *side,char *trans,int *m,int *n,int *k,int *l,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *info);
void    SORMRQ(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    sormrq(char *side,char *trans,int *m,int *n,int *k,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    SORMRZ(char *side,char *trans,int *m,int *n,int *k,int *l,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    sormrz(char *side,char *trans,int *m,int *n,int *k,int *l,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    SORMTR(char *side,char *uplo,char *trans,int *m,int *n,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    sormtr(char *side,char *uplo,char *trans,int *m,int *n,float *a,int *lda,float *tau,float *c,int *ldc,float *work,int *lwork,int *info);
void    SPBCON(char *uplo,int *n,int *kd,float *ab,int *ldab,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    spbcon(char *uplo,int *n,int *kd,float *ab,int *ldab,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    SPBEQU(char *uplo,int *n,int *kd,float *ab,int *ldab,float *s,float *scond,float *amax,int *info);
void    spbequ(char *uplo,int *n,int *kd,float *ab,int *ldab,float *s,float *scond,float *amax,int *info);
void    SPBRFS(char *uplo,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *afb,int *ldafb,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    spbrfs(char *uplo,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *afb,int *ldafb,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SPBSTF(char *uplo,int *n,int *kd,float *ab,int *ldab,int *info);
void    spbstf(char *uplo,int *n,int *kd,float *ab,int *ldab,int *info);
void    SPBSV(char *uplo,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *b,int *ldb,int *info);
void    spbsv(char *uplo,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *b,int *ldb,int *info);
void    SPBSVX(char *fact,char *uplo,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *afb,int *ldafb,char *equed,float *s,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    spbsvx(char *fact,char *uplo,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *afb,int *ldafb,char *equed,float *s,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SPBTF2(char *uplo,int *n,int *kd,float *ab,int *ldab,int *info);
void    spbtf2(char *uplo,int *n,int *kd,float *ab,int *ldab,int *info);
void    SPBTRF(char *uplo,int *n,int *kd,float *ab,int *ldab,int *info);
void    spbtrf(char *uplo,int *n,int *kd,float *ab,int *ldab,int *info);
void    SPBTRS(char *uplo,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *b,int *ldb,int *info);
void    spbtrs(char *uplo,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *b,int *ldb,int *info);
void    SPOCON(char *uplo,int *n,float *a,int *lda,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    spocon(char *uplo,int *n,float *a,int *lda,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    SPOEQU(int *n,float *a,int *lda,float *s,float *scond,float *amax,int *info);
void    spoequ(int *n,float *a,int *lda,float *s,float *scond,float *amax,int *info);
void    SPORFS(char *uplo,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sporfs(char *uplo,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SPOSV(char *uplo,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *info);
void    sposv(char *uplo,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *info);
void    SPOSVX(char *fact,char *uplo,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,char *equed,float *s,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sposvx(char *fact,char *uplo,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,char *equed,float *s,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SPOTF2(char *uplo,int *n,float *a,int *lda,int *info);
void    spotf2(char *uplo,int *n,float *a,int *lda,int *info);
void    SPOTRF(char *uplo,int *n,float *a,int *lda,int *info);
void    spotrf(char *uplo,int *n,float *a,int *lda,int *info);
void    SPOTRI(char *uplo,int *n,float *a,int *lda,int *info);
void    spotri(char *uplo,int *n,float *a,int *lda,int *info);
void    SPOTRS(char *uplo,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *info);
void    spotrs(char *uplo,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *info);
void    SPPCON(char *uplo,int *n,float *ap,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    sppcon(char *uplo,int *n,float *ap,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    SPPEQU(char *uplo,int *n,float *ap,float *s,float *scond,float *amax,int *info);
void    sppequ(char *uplo,int *n,float *ap,float *s,float *scond,float *amax,int *info);
void    SPPRFS(char *uplo,int *n,int *nrhs,float *ap,float *afp,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    spprfs(char *uplo,int *n,int *nrhs,float *ap,float *afp,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SPPSV(char *uplo,int *n,int *nrhs,float *ap,float *b,int *ldb,int *info);
void    sppsv(char *uplo,int *n,int *nrhs,float *ap,float *b,int *ldb,int *info);
void    SPPSVX(char *fact,char *uplo,int *n,int *nrhs,float *ap,float *afp,char *equed,float *s,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sppsvx(char *fact,char *uplo,int *n,int *nrhs,float *ap,float *afp,char *equed,float *s,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SPPTRF(char *uplo,int *n,float *ap,int *info);
void    spptrf(char *uplo,int *n,float *ap,int *info);
void    SPPTRI(char *uplo,int *n,float *ap,int *info);
void    spptri(char *uplo,int *n,float *ap,int *info);
void    SPPTRS(char *uplo,int *n,int *nrhs,float *ap,float *b,int *ldb,int *info);
void    spptrs(char *uplo,int *n,int *nrhs,float *ap,float *b,int *ldb,int *info);
void    SPTCON(int *n,float *d,float *e,float *anorm,float *rcond,float *work,int *info);
void    sptcon(int *n,float *d,float *e,float *anorm,float *rcond,float *work,int *info);
void    SPTEQR(char *compz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *info);
void    spteqr(char *compz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *info);
void    SPTRFS(int *n,int *nrhs,float *d,float *e,float *df,float *ef,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *info);
void    sptrfs(int *n,int *nrhs,float *d,float *e,float *df,float *ef,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *info);
void    SPTSV(int *n,int *nrhs,float *d,float *e,float *b,int *ldb,int *info);
void    sptsv(int *n,int *nrhs,float *d,float *e,float *b,int *ldb,int *info);
void    SPTSVX(char *fact,int *n,int *nrhs,float *d,float *e,float *df,float *ef,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *info);
void    sptsvx(char *fact,int *n,int *nrhs,float *d,float *e,float *df,float *ef,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *info);
void    SPTTRF(int *n,float *d,float *e,int *info);
void    spttrf(int *n,float *d,float *e,int *info);
void    SPTTRS(int *n,int *nrhs,float *d,float *e,float *b,int *ldb,int *info);
void    spttrs(int *n,int *nrhs,float *d,float *e,float *b,int *ldb,int *info);
void    SPTTS2(int *n,int *nrhs,float *d,float *e,float *b,int *ldb);
void    sptts2(int *n,int *nrhs,float *d,float *e,float *b,int *ldb);
void    SRSCL(int *n,float *sa,float *sx,int *incx);
void    srscl(int *n,float *sa,float *sx,int *incx);
void    SSBEV(char *jobz,char *uplo,int *n,int *kd,float *ab,int *ldab,float *w,float *z,int *ldz,float *work,int *info);
void    ssbev(char *jobz,char *uplo,int *n,int *kd,float *ab,int *ldab,float *w,float *z,int *ldz,float *work,int *info);
void    SSBEVD(char *jobz,char *uplo,int *n,int *kd,float *ab,int *ldab,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    ssbevd(char *jobz,char *uplo,int *n,int *kd,float *ab,int *ldab,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSBEVX(char *jobz,char *range,char *uplo,int *n,int *kd,float *ab,int *ldab,float *q,int *ldq,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    ssbevx(char *jobz,char *range,char *uplo,int *n,int *kd,float *ab,int *ldab,float *q,int *ldq,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    SSBGST(char *vect,char *uplo,int *n,int *ka,int *kb,float *ab,int *ldab,float *bb,int *ldbb,float *x,int *ldx,float *work,int *info);
void    ssbgst(char *vect,char *uplo,int *n,int *ka,int *kb,float *ab,int *ldab,float *bb,int *ldbb,float *x,int *ldx,float *work,int *info);
void    SSBGV(char *jobz,char *uplo,int *n,int *ka,int *kb,float *ab,int *ldab,float *bb,int *ldbb,float *w,float *z,int *ldz,float *work,int *info);
void    ssbgv(char *jobz,char *uplo,int *n,int *ka,int *kb,float *ab,int *ldab,float *bb,int *ldbb,float *w,float *z,int *ldz,float *work,int *info);
void    SSBGVD(char *jobz,char *uplo,int *n,int *ka,int *kb,float *ab,int *ldab,float *bb,int *ldbb,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    ssbgvd(char *jobz,char *uplo,int *n,int *ka,int *kb,float *ab,int *ldab,float *bb,int *ldbb,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSBGVX(char *jobz,char *range,char *uplo,int *n,int *ka,int *kb,float *ab,int *ldab,float *bb,int *ldbb,float *q,int *ldq,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    ssbgvx(char *jobz,char *range,char *uplo,int *n,int *ka,int *kb,float *ab,int *ldab,float *bb,int *ldbb,float *q,int *ldq,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    SSBTRD(char *vect,char *uplo,int *n,int *kd,float *ab,int *ldab,float *d,float *e,float *q,int *ldq,float *work,int *info);
void    ssbtrd(char *vect,char *uplo,int *n,int *kd,float *ab,int *ldab,float *d,float *e,float *q,int *ldq,float *work,int *info);
void    SSPCON(char *uplo,int *n,float *ap,int *ipiv,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    sspcon(char *uplo,int *n,float *ap,int *ipiv,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    SSPEV(char *jobz,char *uplo,int *n,float *ap,float *w,float *z,int *ldz,float *work,int *info);
void    sspev(char *jobz,char *uplo,int *n,float *ap,float *w,float *z,int *ldz,float *work,int *info);
void    SSPEVD(char *jobz,char *uplo,int *n,float *ap,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    sspevd(char *jobz,char *uplo,int *n,float *ap,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSPEVX(char *jobz,char *range,char *uplo,int *n,float *ap,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    sspevx(char *jobz,char *range,char *uplo,int *n,float *ap,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    SSPGST(int *itype,char *uplo,int *n,float *ap,float *bp,int *info);
void    sspgst(int *itype,char *uplo,int *n,float *ap,float *bp,int *info);
void    SSPGV(int *itype,char *jobz,char *uplo,int *n,float *ap,float *bp,float *w,float *z,int *ldz,float *work,int *info);
void    sspgv(int *itype,char *jobz,char *uplo,int *n,float *ap,float *bp,float *w,float *z,int *ldz,float *work,int *info);
void    SSPGVD(int *itype,char *jobz,char *uplo,int *n,float *ap,float *bp,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    sspgvd(int *itype,char *jobz,char *uplo,int *n,float *ap,float *bp,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSPGVX(int *itype,char *jobz,char *range,char *uplo,int *n,float *ap,float *bp,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    sspgvx(int *itype,char *jobz,char *range,char *uplo,int *n,float *ap,float *bp,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    SSPRFS(char *uplo,int *n,int *nrhs,float *ap,float *afp,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    ssprfs(char *uplo,int *n,int *nrhs,float *ap,float *afp,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SSPSV(char *uplo,int *n,int *nrhs,float *ap,int *ipiv,float *b,int *ldb,int *info);
void    sspsv(char *uplo,int *n,int *nrhs,float *ap,int *ipiv,float *b,int *ldb,int *info);
void    SSPSVX(char *fact,char *uplo,int *n,int *nrhs,float *ap,float *afp,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    sspsvx(char *fact,char *uplo,int *n,int *nrhs,float *ap,float *afp,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SSPTRD(char *uplo,int *n,float *ap,float *d,float *e,float *tau,int *info);
void    ssptrd(char *uplo,int *n,float *ap,float *d,float *e,float *tau,int *info);
void    SSPTRF(char *uplo,int *n,float *ap,int *ipiv,int *info);
void    ssptrf(char *uplo,int *n,float *ap,int *ipiv,int *info);
void    SSPTRI(char *uplo,int *n,float *ap,int *ipiv,float *work,int *info);
void    ssptri(char *uplo,int *n,float *ap,int *ipiv,float *work,int *info);
void    SSPTRS(char *uplo,int *n,int *nrhs,float *ap,int *ipiv,float *b,int *ldb,int *info);
void    ssptrs(char *uplo,int *n,int *nrhs,float *ap,int *ipiv,float *b,int *ldb,int *info);
void    SSTEBZ(char *range,char *order,int *n,float *vl,float *vu,int *il,int *iu,float *abstol,float *d,float *e,int *m,int *nsplit,float *w,int *iblock,int *isplit,float *work,int *iwork,int *info);
void    sstebz(char *range,char *order,int *n,float *vl,float *vu,int *il,int *iu,float *abstol,float *d,float *e,int *m,int *nsplit,float *w,int *iblock,int *isplit,float *work,int *iwork,int *info);
void    SSTEDC(char *compz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    sstedc(char *compz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSTEGR(char *jobz,char *range,int *n,float *d,float *e,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,int *isuppz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    sstegr(char *jobz,char *range,int *n,float *d,float *e,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,int *isuppz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSTEIN(int *n,float *d,float *e,int *m,float *w,int *iblock,int *isplit,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    sstein(int *n,float *d,float *e,int *m,float *w,int *iblock,int *isplit,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    SSTEQR(char *compz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *info);
void    ssteqr(char *compz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *info);
void    SSTERF(int *n,float *d,float *e,int *info);
void    ssterf(int *n,float *d,float *e,int *info);
void    SSTEV(char *jobz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *info);
void    sstev(char *jobz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *info);
void    SSTEVD(char *jobz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    sstevd(char *jobz,int *n,float *d,float *e,float *z,int *ldz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSTEVR(char *jobz,char *range,int *n,float *d,float *e,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,int *isuppz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    sstevr(char *jobz,char *range,int *n,float *d,float *e,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,int *isuppz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSTEVX(char *jobz,char *range,int *n,float *d,float *e,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    sstevx(char *jobz,char *range,int *n,float *d,float *e,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *iwork,int *ifail,int *info);
void    SSYCON(char *uplo,int *n,float *a,int *lda,int *ipiv,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    ssycon(char *uplo,int *n,float *a,int *lda,int *ipiv,float *anorm,float *rcond,float *work,int *iwork,int *info);
void    SSYEV(char *jobz,char *uplo,int *n,float *a,int *lda,float *w,float *work,int *lwork,int *info);
void    ssyev(char *jobz,char *uplo,int *n,float *a,int *lda,float *w,float *work,int *lwork,int *info);
void    SSYEVD(char *jobz,char *uplo,int *n,float *a,int *lda,float *w,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    ssyevd(char *jobz,char *uplo,int *n,float *a,int *lda,float *w,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSYEVR(char *jobz,char *range,char *uplo,int *n,float *a,int *lda,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,int *isuppz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    ssyevr(char *jobz,char *range,char *uplo,int *n,float *a,int *lda,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,int *isuppz,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSYEVX(char *jobz,char *range,char *uplo,int *n,float *a,int *lda,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *ifail,int *info);
void    ssyevx(char *jobz,char *range,char *uplo,int *n,float *a,int *lda,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *ifail,int *info);
void    SSYGS2(int *itype,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,int *info);
void    ssygs2(int *itype,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,int *info);
void    SSYGST(int *itype,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,int *info);
void    ssygst(int *itype,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,int *info);
void    SSYGV(int *itype,char *jobz,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,float *w,float *work,int *lwork,int *info);
void    ssygv(int *itype,char *jobz,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,float *w,float *work,int *lwork,int *info);
void    SSYGVD(int *itype,char *jobz,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,float *w,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    ssygvd(int *itype,char *jobz,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,float *w,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    SSYGVX(int *itype,char *jobz,char *range,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *ifail,int *info);
void    ssygvx(int *itype,char *jobz,char *range,char *uplo,int *n,float *a,int *lda,float *b,int *ldb,float *vl,float *vu,int *il,int *iu,float *abstol,int *m,float *w,float *z,int *ldz,float *work,int *lwork,int *iwork,int *ifail,int *info);
void    SSYRFS(char *uplo,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    ssyrfs(char *uplo,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    SSYSV(char *uplo,int *n,int *nrhs,float *a,int *lda,int *ipiv,float *b,int *ldb,float *work,int *lwork,int *info);
void    ssysv(char *uplo,int *n,int *nrhs,float *a,int *lda,int *ipiv,float *b,int *ldb,float *work,int *lwork,int *info);
void    SSYSVX(char *fact,char *uplo,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *lwork,int *iwork,int *info);
void    ssysvx(char *fact,char *uplo,int *n,int *nrhs,float *a,int *lda,float *af,int *ldaf,int *ipiv,float *b,int *ldb,float *x,int *ldx,float *rcond,float *ferr,float *berr,float *work,int *lwork,int *iwork,int *info);
void    SSYTD2(char *uplo,int *n,float *a,int *lda,float *d,float *e,float *tau,int *info);
void    ssytd2(char *uplo,int *n,float *a,int *lda,float *d,float *e,float *tau,int *info);
void    SSYTF2(char *uplo,int *n,float *a,int *lda,int *ipiv,int *info);
void    ssytf2(char *uplo,int *n,float *a,int *lda,int *ipiv,int *info);
void    SSYTRD(char *uplo,int *n,float *a,int *lda,float *d,float *e,float *tau,float *work,int *lwork,int *info);
void    ssytrd(char *uplo,int *n,float *a,int *lda,float *d,float *e,float *tau,float *work,int *lwork,int *info);
void    SSYTRF(char *uplo,int *n,float *a,int *lda,int *ipiv,float *work,int *lwork,int *info);
void    ssytrf(char *uplo,int *n,float *a,int *lda,int *ipiv,float *work,int *lwork,int *info);
void    SSYTRI(char *uplo,int *n,float *a,int *lda,int *ipiv,float *work,int *info);
void    ssytri(char *uplo,int *n,float *a,int *lda,int *ipiv,float *work,int *info);
void    SSYTRS(char *uplo,int *n,int *nrhs,float *a,int *lda,int *ipiv,float *b,int *ldb,int *info);
void    ssytrs(char *uplo,int *n,int *nrhs,float *a,int *lda,int *ipiv,float *b,int *ldb,int *info);
void    STBCON(char *norm,char *uplo,char *diag,int *n,int *kd,float *ab,int *ldab,float *rcond,float *work,int *iwork,int *info);
void    stbcon(char *norm,char *uplo,char *diag,int *n,int *kd,float *ab,int *ldab,float *rcond,float *work,int *iwork,int *info);
void    STBRFS(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    stbrfs(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    STBTRS(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *b,int *ldb,int *info);
void    stbtrs(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs,float *ab,int *ldab,float *b,int *ldb,int *info);
void    STGEVC(char *side,char *howmny,void *select,int *n,float *a,int *lda,float *b,int *ldb,float *vl,int *ldvl,float *vr,int *ldvr,int *mm,int *m,float *work,int *info);
void    stgevc(char *side,char *howmny,void *select,int *n,float *a,int *lda,float *b,int *ldb,float *vl,int *ldvl,float *vr,int *ldvr,int *mm,int *m,float *work,int *info);
void    STGEX2(void *wantq,void *wantz,int *n,float *a,int *lda,float *b,int *ldb,float *q,int *ldq,float *z,int *ldz,int *j1,int *n1,int *n2,float *work,int *lwork,int *info);
void    stgex2(void *wantq,void *wantz,int *n,float *a,int *lda,float *b,int *ldb,float *q,int *ldq,float *z,int *ldz,int *j1,int *n1,int *n2,float *work,int *lwork,int *info);
void    STGEXC(void *wantq,void *wantz,int *n,float *a,int *lda,float *b,int *ldb,float *q,int *ldq,float *z,int *ldz,int *ifst,int *ilst,float *work,int *lwork,int *info);
void    stgexc(void *wantq,void *wantz,int *n,float *a,int *lda,float *b,int *ldb,float *q,int *ldq,float *z,int *ldz,int *ifst,int *ilst,float *work,int *lwork,int *info);
void    STGSEN(int *ijob,void *wantq,void *wantz,void *select,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *q,int *ldq,float *z,int *ldz,int *m,float *pl,float *pr,float *dif,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    stgsen(int *ijob,void *wantq,void *wantz,void *select,int *n,float *a,int *lda,float *b,int *ldb,float *alphar,float *alphai,float *beta,float *q,int *ldq,float *z,int *ldz,int *m,float *pl,float *pr,float *dif,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    STGSJA(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,int *k,int *l,float *a,int *lda,float *b,int *ldb,float *tola,float *tolb,float *alpha,float *beta,float *u,int *ldu,float *v,int *ldv,float *q,int *ldq,float *work,int *ncycle,int *info);
void    stgsja(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,int *k,int *l,float *a,int *lda,float *b,int *ldb,float *tola,float *tolb,float *alpha,float *beta,float *u,int *ldu,float *v,int *ldv,float *q,int *ldq,float *work,int *ncycle,int *info);
void    STGSNA(char *job,char *howmny,void *select,int *n,float *a,int *lda,float *b,int *ldb,float *vl,int *ldvl,float *vr,int *ldvr,float *s,float *dif,int *mm,int *m,float *work,int *lwork,int *iwork,int *info);
void    stgsna(char *job,char *howmny,void *select,int *n,float *a,int *lda,float *b,int *ldb,float *vl,int *ldvl,float *vr,int *ldvr,float *s,float *dif,int *mm,int *m,float *work,int *lwork,int *iwork,int *info);
void    STGSY2(char *trans,int *ijob,int *m,int *n,float *a,int *lda,float *b,int *ldb,float *c,int *ldc,float *d,int *ldd,float *e,int *lde,float *f,int *ldf,float *scale,float *rdsum,float *rdscal,int *iwork,int *pq,int *info);
void    stgsy2(char *trans,int *ijob,int *m,int *n,float *a,int *lda,float *b,int *ldb,float *c,int *ldc,float *d,int *ldd,float *e,int *lde,float *f,int *ldf,float *scale,float *rdsum,float *rdscal,int *iwork,int *pq,int *info);
void    STGSYL(char *trans,int *ijob,int *m,int *n,float *a,int *lda,float *b,int *ldb,float *c,int *ldc,float *d,int *ldd,float *e,int *lde,float *f,int *ldf,float *scale,float *dif,float *work,int *lwork,int *iwork,int *info);
void    stgsyl(char *trans,int *ijob,int *m,int *n,float *a,int *lda,float *b,int *ldb,float *c,int *ldc,float *d,int *ldd,float *e,int *lde,float *f,int *ldf,float *scale,float *dif,float *work,int *lwork,int *iwork,int *info);
void    STPCON(char *norm,char *uplo,char *diag,int *n,float *ap,float *rcond,float *work,int *iwork,int *info);
void    stpcon(char *norm,char *uplo,char *diag,int *n,float *ap,float *rcond,float *work,int *iwork,int *info);
void    STPRFS(char *uplo,char *trans,char *diag,int *n,int *nrhs,float *ap,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    stprfs(char *uplo,char *trans,char *diag,int *n,int *nrhs,float *ap,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    STPTRI(char *uplo,char *diag,int *n,float *ap,int *info);
void    stptri(char *uplo,char *diag,int *n,float *ap,int *info);
void    STPTRS(char *uplo,char *trans,char *diag,int *n,int *nrhs,float *ap,float *b,int *ldb,int *info);
void    stptrs(char *uplo,char *trans,char *diag,int *n,int *nrhs,float *ap,float *b,int *ldb,int *info);
void    STRCON(char *norm,char *uplo,char *diag,int *n,float *a,int *lda,float *rcond,float *work,int *iwork,int *info);
void    strcon(char *norm,char *uplo,char *diag,int *n,float *a,int *lda,float *rcond,float *work,int *iwork,int *info);
void    STREVC(char *side,char *howmny,void *select,int *n,float *t,int *ldt,float *vl,int *ldvl,float *vr,int *ldvr,int *mm,int *m,float *work,int *info);
void    strevc(char *side,char *howmny,void *select,int *n,float *t,int *ldt,float *vl,int *ldvl,float *vr,int *ldvr,int *mm,int *m,float *work,int *info);
void    STREXC(char *compq,int *n,float *t,int *ldt,float *q,int *ldq,int *ifst,int *ilst,float *work,int *info);
void    strexc(char *compq,int *n,float *t,int *ldt,float *q,int *ldq,int *ifst,int *ilst,float *work,int *info);
void    STRRFS(char *uplo,char *trans,char *diag,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    strrfs(char *uplo,char *trans,char *diag,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,float *x,int *ldx,float *ferr,float *berr,float *work,int *iwork,int *info);
void    STRSEN(char *job,char *compq,void *select,int *n,float *t,int *ldt,float *q,int *ldq,float *wr,float *wi,int *m,float *s,float *sep,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    strsen(char *job,char *compq,void *select,int *n,float *t,int *ldt,float *q,int *ldq,float *wr,float *wi,int *m,float *s,float *sep,float *work,int *lwork,int *iwork,int *liwork,int *info);
void    STRSNA(char *job,char *howmny,void *select,int *n,float *t,int *ldt,float *vl,int *ldvl,float *vr,int *ldvr,float *s,float *sep,int *mm,int *m,float *work,int *ldwork,int *iwork,int *info);
void    strsna(char *job,char *howmny,void *select,int *n,float *t,int *ldt,float *vl,int *ldvl,float *vr,int *ldvr,float *s,float *sep,int *mm,int *m,float *work,int *ldwork,int *iwork,int *info);
void    STRSYL(char *trana,char *tranb,int *isgn,int *m,int *n,float *a,int *lda,float *b,int *ldb,float *c,int *ldc,float *scale,int *info);
void    strsyl(char *trana,char *tranb,int *isgn,int *m,int *n,float *a,int *lda,float *b,int *ldb,float *c,int *ldc,float *scale,int *info);
void    STRTI2(char *uplo,char *diag,int *n,float *a,int *lda,int *info);
void    strti2(char *uplo,char *diag,int *n,float *a,int *lda,int *info);
void    STRTRI(char *uplo,char *diag,int *n,float *a,int *lda,int *info);
void    strtri(char *uplo,char *diag,int *n,float *a,int *lda,int *info);
void    STRTRS(char *uplo,char *trans,char *diag,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *info);
void    strtrs(char *uplo,char *trans,char *diag,int *n,int *nrhs,float *a,int *lda,float *b,int *ldb,int *info);
void    STZRQF(int *m,int *n,float *a,int *lda,float *tau,int *info);
void    stzrqf(int *m,int *n,float *a,int *lda,float *tau,int *info);
void    STZRZF(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);
void    stzrzf(int *m,int *n,float *a,int *lda,float *tau,float *work,int *lwork,int *info);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _MKL_LAPACK_S_H_ */
