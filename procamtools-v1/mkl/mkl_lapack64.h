/*******************************************************************************
!                             INTEL CONFIDENTIAL
!   Copyright(C) 1999-2004 Intel Corporation. All Rights Reserved.
!   The source code contained  or  described herein and all documents related to
!   the source code ("Material") are owned by Intel Corporation or its suppliers
!   or licensors.  Title to the  Material remains with  Intel Corporation or its
!   suppliers and licensors. The Material contains trade secrets and proprietary
!   and  confidential  information of  Intel or its suppliers and licensors. The
!   Material  is  protected  by  worldwide  copyright  and trade secret laws and
!   treaty  provisions. No part of the Material may be used, copied, reproduced,
!   modified, published, uploaded, posted, transmitted, distributed or disclosed
!   in any way without Intel's prior express written permission.
!   No license  under any  patent, copyright, trade secret or other intellectual
!   property right is granted to or conferred upon you by disclosure or delivery
!   of the Materials,  either expressly, by implication, inducement, estoppel or
!   otherwise.  Any  license  under  such  intellectual property  rights must be
!   express and approved by Intel in writing.
!
!*******************************************************************************
!  Content:
!      Intel(R) Math Kernel Library (MKL) interface for LAPACK routines and functions for double precision data
!******************************************************************************/

#ifndef _MKL_LAPACK_D_H_
#define _MKL_LAPACK_D_H_

#include "mkl_types.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

void    DBDSDC(char *uplo,char *compq,int *n,double *d,double *e,double *u,int *ldu,double *vt,int *ldvt,double *q,int *iq,double *work,int *iwork,int *info);
void    dbdsdc(char *uplo,char *compq,int *n,double *d,double *e,double *u,int *ldu,double *vt,int *ldvt,double *q,int *iq,double *work,int *iwork,int *info);
void    DBDSQR(char *uplo,int *n,int *ncvt,int *nru,int *ncc,double *d,double *e,double *vt,int *ldvt,double *u,int *ldu,double *c,int *ldc,double *work,int *info);
void    dbdsqr(char *uplo,int *n,int *ncvt,int *nru,int *ncc,double *d,double *e,double *vt,int *ldvt,double *u,int *ldu,double *c,int *ldc,double *work,int *info);
void    DDISNA(char *job,int *m,int *n,double *d,double *sep,int *info);
void    ddisna(char *job,int *m,int *n,double *d,double *sep,int *info);
void    DGBBRD(char *vect,int *m,int *n,int *ncc,int *kl,int *ku,double *ab,int *ldab,double *d,double *e,double *q,int *ldq,double *pt,int *ldpt,double *c,int *ldc,double *work,int *info);
void    dgbbrd(char *vect,int *m,int *n,int *ncc,int *kl,int *ku,double *ab,int *ldab,double *d,double *e,double *q,int *ldq,double *pt,int *ldpt,double *c,int *ldc,double *work,int *info);
void    DGBCON(char *norm,int *n,int *kl,int *ku,double *ab,int *ldab,int *ipiv,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    dgbcon(char *norm,int *n,int *kl,int *ku,double *ab,int *ldab,int *ipiv,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    DGBEQU(int *m,int *n,int *kl,int *ku,double *ab,int *ldab,double *r,double *c,double *rowcnd,double *colcnd,double *amax,int *info);
void    dgbequ(int *m,int *n,int *kl,int *ku,double *ab,int *ldab,double *r,double *c,double *rowcnd,double *colcnd,double *amax,int *info);
void    DGBRFS(char *trans,int *n,int *kl,int *ku,int *nrhs,double *ab,int *ldab,double *afb,int *ldafb,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dgbrfs(char *trans,int *n,int *kl,int *ku,int *nrhs,double *ab,int *ldab,double *afb,int *ldafb,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DGBSV(int *n,int *kl,int *ku,int *nrhs,double *ab,int *ldab,int *ipiv,double *b,int *ldb,int *info);
void    dgbsv(int *n,int *kl,int *ku,int *nrhs,double *ab,int *ldab,int *ipiv,double *b,int *ldb,int *info);
void    DGBSVX(char *fact,char *trans,int *n,int *kl,int *ku,int *nrhs,double *ab,int *ldab,double *afb,int *ldafb,int *ipiv,char *equed,double *r,double *c,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dgbsvx(char *fact,char *trans,int *n,int *kl,int *ku,int *nrhs,double *ab,int *ldab,double *afb,int *ldafb,int *ipiv,char *equed,double *r,double *c,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DGBTF2(int *m,int *n,int *kl,int *ku,double *ab,int *ldab,int *ipiv,int *info);
void    dgbtf2(int *m,int *n,int *kl,int *ku,double *ab,int *ldab,int *ipiv,int *info);
void    DGBTRF(int *m,int *n,int *kl,int *ku,double *ab,int *ldab,int *ipiv,int *info);
void    dgbtrf(int *m,int *n,int *kl,int *ku,double *ab,int *ldab,int *ipiv,int *info);
void    DGBTRS(char *trans,int *n,int *kl,int *ku,int *nrhs,double *ab,int *ldab,int *ipiv,double *b,int *ldb,int *info);
void    dgbtrs(char *trans,int *n,int *kl,int *ku,int *nrhs,double *ab,int *ldab,int *ipiv,double *b,int *ldb,int *info);
void    DGEBAK(char *job,char *side,int *n,int *ilo,int *ihi,double *scale,int *m,double *v,int *ldv,int *info);
void    dgebak(char *job,char *side,int *n,int *ilo,int *ihi,double *scale,int *m,double *v,int *ldv,int *info);
void    DGEBAL(char *job,int *n,double *a,int *lda,int *ilo,int *ihi,double *scale,int *info);
void    dgebal(char *job,int *n,double *a,int *lda,int *ilo,int *ihi,double *scale,int *info);
void    DGEBD2(int *m,int *n,double *a,int *lda,double *d,double *e,double *tauq,double *taup,double *work,int *info);
void    dgebd2(int *m,int *n,double *a,int *lda,double *d,double *e,double *tauq,double *taup,double *work,int *info);
void    DGEBRD(int *m,int *n,double *a,int *lda,double *d,double *e,double *tauq,double *taup,double *work,int *lwork,int *info);
void    dgebrd(int *m,int *n,double *a,int *lda,double *d,double *e,double *tauq,double *taup,double *work,int *lwork,int *info);
void    DGECON(char *norm,int *n,double *a,int *lda,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    dgecon(char *norm,int *n,double *a,int *lda,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    DGEEQU(int *m,int *n,double *a,int *lda,double *r,double *c,double *rowcnd,double *colcnd,double *amax,int *info);
void    dgeequ(int *m,int *n,double *a,int *lda,double *r,double *c,double *rowcnd,double *colcnd,double *amax,int *info);
void    DGEES(char *jobvs,char *sort,void *select,int *n,double *a,int *lda,int *sdim,double *wr,double *wi,double *vs,int *ldvs,double *work,int *lwork,void *bwork,int *info);
void    dgees(char *jobvs,char *sort,void *select,int *n,double *a,int *lda,int *sdim,double *wr,double *wi,double *vs,int *ldvs,double *work,int *lwork,void *bwork,int *info);
void    DGEESX(char *jobvs,char *sort,void *select,char *sense,int *n,double *a,int *lda,int *sdim,double *wr,double *wi,double *vs,int *ldvs,double *rconde,double *rcondv,double *work,int *lwork,int *iwork,int *liwork,void *bwork,int *info);
void    dgeesx(char *jobvs,char *sort,void *select,char *sense,int *n,double *a,int *lda,int *sdim,double *wr,double *wi,double *vs,int *ldvs,double *rconde,double *rcondv,double *work,int *lwork,int *iwork,int *liwork,void *bwork,int *info);
void    DGEEV(char *jobvl,char *jobvr,int *n,double *a,int *lda,double *wr,double *wi,double *vl,int *ldvl,double *vr,int *ldvr,double *work,int *lwork,int *info);
void    dgeev(char *jobvl,char *jobvr,int *n,double *a,int *lda,double *wr,double *wi,double *vl,int *ldvl,double *vr,int *ldvr,double *work,int *lwork,int *info);
void    DGEEVX(char *balanc,char *jobvl,char *jobvr,char *sense,int *n,double *a,int *lda,double *wr,double *wi,double *vl,int *ldvl,double *vr,int *ldvr,int *ilo,int *ihi,double *scale,double *abnrm,double *rconde,double *rcondv,double *work,int *lwork,int *iwork,int *info);
void    dgeevx(char *balanc,char *jobvl,char *jobvr,char *sense,int *n,double *a,int *lda,double *wr,double *wi,double *vl,int *ldvl,double *vr,int *ldvr,int *ilo,int *ihi,double *scale,double *abnrm,double *rconde,double *rcondv,double *work,int *lwork,int *iwork,int *info);
void    DGEGS(char *jobvsl,char *jobvsr,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *vsl,int *ldvsl,double *vsr,int *ldvsr,double *work,int *lwork,int *info);
void    dgegs(char *jobvsl,char *jobvsr,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *vsl,int *ldvsl,double *vsr,int *ldvsr,double *work,int *lwork,int *info);
void    DGEGV(char *jobvl,char *jobvr,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *vl,int *ldvl,double *vr,int *ldvr,double *work,int *lwork,int *info);
void    dgegv(char *jobvl,char *jobvr,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *vl,int *ldvl,double *vr,int *ldvr,double *work,int *lwork,int *info);
void    DGEHD2(int *n,int *ilo,int *ihi,double *a,int *lda,double *tau,double *work,int *info);
void    dgehd2(int *n,int *ilo,int *ihi,double *a,int *lda,double *tau,double *work,int *info);
void    DGEHRD(int *n,int *ilo,int *ihi,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dgehrd(int *n,int *ilo,int *ihi,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DGELQ2(int *m,int *n,double *a,int *lda,double *tau,double *work,int *info);
void    dgelq2(int *m,int *n,double *a,int *lda,double *tau,double *work,int *info);
void    DGELQF(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dgelqf(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DGELS(char *trans,int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,double *work,int *lwork,int *info);
void    dgels(char *trans,int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,double *work,int *lwork,int *info);
void    DGELSD(int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,double *s,double *rcond,int *rank,double *work,int *lwork,int *iwork,int *info);
void    dgelsd(int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,double *s,double *rcond,int *rank,double *work,int *lwork,int *iwork,int *info);
void    DGELSS(int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,double *s,double *rcond,int *rank,double *work,int *lwork,int *info);
void    dgelss(int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,double *s,double *rcond,int *rank,double *work,int *lwork,int *info);
void    DGELSX(int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *jpvt,double *rcond,int *rank,double *work,int *info);
void    dgelsx(int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *jpvt,double *rcond,int *rank,double *work,int *info);
void    DGELSY(int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *jpvt,double *rcond,int *rank,double *work,int *lwork,int *info);
void    dgelsy(int *m,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *jpvt,double *rcond,int *rank,double *work,int *lwork,int *info);
void    DGEQL2(int *m,int *n,double *a,int *lda,double *tau,double *work,int *info);
void    dgeql2(int *m,int *n,double *a,int *lda,double *tau,double *work,int *info);
void    DGEQLF(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dgeqlf(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DGEQP3(int *m,int *n,double *a,int *lda,int *jpvt,double *tau,double *work,int *lwork,int *info);
void    dgeqp3(int *m,int *n,double *a,int *lda,int *jpvt,double *tau,double *work,int *lwork,int *info);
void    DGEQPF(int *m,int *n,double *a,int *lda,int *jpvt,double *tau,double *work,int *info);
void    dgeqpf(int *m,int *n,double *a,int *lda,int *jpvt,double *tau,double *work,int *info);
void    DGEQR2(int *m,int *n,double *a,int *lda,double *tau,double *work,int *info);
void    dgeqr2(int *m,int *n,double *a,int *lda,double *tau,double *work,int *info);
void    DGEQRF(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dgeqrf(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DGERFS(char *trans,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dgerfs(char *trans,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DGERQ2(int *m,int *n,double *a,int *lda,double *tau,double *work,int *info);
void    dgerq2(int *m,int *n,double *a,int *lda,double *tau,double *work,int *info);
void    DGERQF(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dgerqf(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DGESC2(int *n,double *a,int *lda,double *rhs,int *ipiv,int *jpiv,double *scale);
void    dgesc2(int *n,double *a,int *lda,double *rhs,int *ipiv,int *jpiv,double *scale);
void    DGESDD(char *jobz,int *m,int *n,double *a,int *lda,double *s,double *u,int *ldu,double *vt,int *ldvt,double *work,int *lwork,int *iwork,int *info);
void    dgesdd(char *jobz,int *m,int *n,double *a,int *lda,double *s,double *u,int *ldu,double *vt,int *ldvt,double *work,int *lwork,int *iwork,int *info);
void    DGESV(int *n,int *nrhs,double *a,int *lda,int *ipiv,double *b,int *ldb,int *info);
void    dgesv(int *n,int *nrhs,double *a,int *lda,int *ipiv,double *b,int *ldb,int *info);
void    DGESVD(char *jobu,char *jobvt,int *m,int *n,double *a,int *lda,double *s,double *u,int *ldu,double *vt,int *ldvt,double *work,int *lwork,int *info);
void    dgesvd(char *jobu,char *jobvt,int *m,int *n,double *a,int *lda,double *s,double *u,int *ldu,double *vt,int *ldvt,double *work,int *lwork,int *info);
void    DGESVX(char *fact,char *trans,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,int *ipiv,char *equed,double *r,double *c,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dgesvx(char *fact,char *trans,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,int *ipiv,char *equed,double *r,double *c,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DGETC2(int *n,double *a,int *lda,int *ipiv,int *jpiv,int *info);
void    dgetc2(int *n,double *a,int *lda,int *ipiv,int *jpiv,int *info);
void    DGETF2(int *m,int *n,double *a,int *lda,int *ipiv,int *info);
void    dgetf2(int *m,int *n,double *a,int *lda,int *ipiv,int *info);
void    DGETRF(int *m,int *n,double *a,int *lda,int *ipiv,int *info);
void    dgetrf(int *m,int *n,double *a,int *lda,int *ipiv,int *info);
void    DGETRI(int *n,double *a,int *lda,int *ipiv,double *work,int *lwork,int *info);
void    dgetri(int *n,double *a,int *lda,int *ipiv,double *work,int *lwork,int *info);
void    DGETRS(char *trans,int *n,int *nrhs,double *a,int *lda,int *ipiv,double *b,int *ldb,int *info);
void    dgetrs(char *trans,int *n,int *nrhs,double *a,int *lda,int *ipiv,double *b,int *ldb,int *info);
void    DGGBAK(char *job,char *side,int *n,int *ilo,int *ihi,double *lscale,double *rscale,int *m,double *v,int *ldv,int *info);
void    dggbak(char *job,char *side,int *n,int *ilo,int *ihi,double *lscale,double *rscale,int *m,double *v,int *ldv,int *info);
void    DGGBAL(char *job,int *n,double *a,int *lda,double *b,int *ldb,int *ilo,int *ihi,double *lscale,double *rscale,double *work,int *info);
void    dggbal(char *job,int *n,double *a,int *lda,double *b,int *ldb,int *ilo,int *ihi,double *lscale,double *rscale,double *work,int *info);
void    DGGES(char *jobvsl,char *jobvsr,char *sort,void *delctg,int *n,double *a,int *lda,double *b,int *ldb,int *sdim,double *alphar,double *alphai,double *beta,double *vsl,int *ldvsl,double *vsr,int *ldvsr,double *work,int *lwork,void *bwork,int *info);
void    dgges(char *jobvsl,char *jobvsr,char *sort,void *delctg,int *n,double *a,int *lda,double *b,int *ldb,int *sdim,double *alphar,double *alphai,double *beta,double *vsl,int *ldvsl,double *vsr,int *ldvsr,double *work,int *lwork,void *bwork,int *info);
void    DGGESX(char *jobvsl,char *jobvsr,char *sort,void *delctg,char *sense,int *n,double *a,int *lda,double *b,int *ldb,int *sdim,double *alphar,double *alphai,double *beta,double *vsl,int *ldvsl,double *vsr,int *ldvsr,double *rconde,double *rcondv,double *work,int *lwork,int *iwork,int *liwork,void *bwork,int *info);
void    dggesx(char *jobvsl,char *jobvsr,char *sort,void *delctg,char *sense,int *n,double *a,int *lda,double *b,int *ldb,int *sdim,double *alphar,double *alphai,double *beta,double *vsl,int *ldvsl,double *vsr,int *ldvsr,double *rconde,double *rcondv,double *work,int *lwork,int *iwork,int *liwork,void *bwork,int *info);
void    DGGEV(char *jobvl,char *jobvr,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *vl,int *ldvl,double *vr,int *ldvr,double *work,int *lwork,int *info);
void    dggev(char *jobvl,char *jobvr,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *vl,int *ldvl,double *vr,int *ldvr,double *work,int *lwork,int *info);
void    DGGEVX(char *balanc,char *jobvl,char *jobvr,char *sense,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *vl,int *ldvl,double *vr,int *ldvr,int *ilo,int *ihi,double *lscale,double *rscale,double *abnrm,double *bbnrm,double *rconde,double *rcondv,double *work,int *lwork,int *iwork,void *bwork,int *info);
void    dggevx(char *balanc,char *jobvl,char *jobvr,char *sense,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *vl,int *ldvl,double *vr,int *ldvr,int *ilo,int *ihi,double *lscale,double *rscale,double *abnrm,double *bbnrm,double *rconde,double *rcondv,double *work,int *lwork,int *iwork,void *bwork,int *info);
void    DGGGLM(int *n,int *m,int *p,double *a,int *lda,double *b,int *ldb,double *d,double *x,double *y,double *work,int *lwork,int *info);
void    dggglm(int *n,int *m,int *p,double *a,int *lda,double *b,int *ldb,double *d,double *x,double *y,double *work,int *lwork,int *info);
void    DGGHRD(char *compq,char *compz,int *n,int *ilo,int *ihi,double *a,int *lda,double *b,int *ldb,double *q,int *ldq,double *z,int *ldz,int *info);
void    dgghrd(char *compq,char *compz,int *n,int *ilo,int *ihi,double *a,int *lda,double *b,int *ldb,double *q,int *ldq,double *z,int *ldz,int *info);
void    DGGLSE(int *m,int *n,int *p,double *a,int *lda,double *b,int *ldb,double *c,double *d,double *x,double *work,int *lwork,int *info);
void    dgglse(int *m,int *n,int *p,double *a,int *lda,double *b,int *ldb,double *c,double *d,double *x,double *work,int *lwork,int *info);
void    DGGQRF(int *n,int *m,int *p,double *a,int *lda,double *taua,double *b,int *ldb,double *taub,double *work,int *lwork,int *info);
void    dggqrf(int *n,int *m,int *p,double *a,int *lda,double *taua,double *b,int *ldb,double *taub,double *work,int *lwork,int *info);
void    DGGRQF(int *m,int *p,int *n,double *a,int *lda,double *taua,double *b,int *ldb,double *taub,double *work,int *lwork,int *info);
void    dggrqf(int *m,int *p,int *n,double *a,int *lda,double *taua,double *b,int *ldb,double *taub,double *work,int *lwork,int *info);
void    DGGSVD(char *jobu,char *jobv,char *jobq,int *m,int *n,int *p,int *k,int *l,double *a,int *lda,double *b,int *ldb,double *alpha,double *beta,double *u,int *ldu,double *v,int *ldv,double *q,int *ldq,double *work,int *iwork,int *info);
void    dggsvd(char *jobu,char *jobv,char *jobq,int *m,int *n,int *p,int *k,int *l,double *a,int *lda,double *b,int *ldb,double *alpha,double *beta,double *u,int *ldu,double *v,int *ldv,double *q,int *ldq,double *work,int *iwork,int *info);
void    DGGSVP(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,double *a,int *lda,double *b,int *ldb,double *tola,double *tolb,int *k,int *l,double *u,int *ldu,double *v,int *ldv,double *q,int *ldq,int *iwork,double *tau,double *work,int *info);
void    dggsvp(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,double *a,int *lda,double *b,int *ldb,double *tola,double *tolb,int *k,int *l,double *u,int *ldu,double *v,int *ldv,double *q,int *ldq,int *iwork,double *tau,double *work,int *info);
void    DGTCON(char *norm,int *n,double *dl,double *d,double *du,double *du2,int *ipiv,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    dgtcon(char *norm,int *n,double *dl,double *d,double *du,double *du2,int *ipiv,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    DGTRFS(char *trans,int *n,int *nrhs,double *dl,double *d,double *du,double *dlf,double *df,double *duf,double *du2,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dgtrfs(char *trans,int *n,int *nrhs,double *dl,double *d,double *du,double *dlf,double *df,double *duf,double *du2,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DGTSV(int *n,int *nrhs,double *dl,double *d,double *du,double *b,int *ldb,int *info);
void    dgtsv(int *n,int *nrhs,double *dl,double *d,double *du,double *b,int *ldb,int *info);
void    DGTSVX(char *fact,char *trans,int *n,int *nrhs,double *dl,double *d,double *du,double *dlf,double *df,double *duf,double *du2,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dgtsvx(char *fact,char *trans,int *n,int *nrhs,double *dl,double *d,double *du,double *dlf,double *df,double *duf,double *du2,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DGTTRF(int *n,double *dl,double *d,double *du,double *du2,int *ipiv,int *info);
void    dgttrf(int *n,double *dl,double *d,double *du,double *du2,int *ipiv,int *info);
void    DGTTRS(char *trans,int *n,int *nrhs,double *dl,double *d,double *du,double *du2,int *ipiv,double *b,int *ldb,int *info);
void    dgttrs(char *trans,int *n,int *nrhs,double *dl,double *d,double *du,double *du2,int *ipiv,double *b,int *ldb,int *info);
void    DGTTS2(int *itrans,int *n,int *nrhs,double *dl,double *d,double *du,double *du2,int *ipiv,double *b,int *ldb);
void    dgtts2(int *itrans,int *n,int *nrhs,double *dl,double *d,double *du,double *du2,int *ipiv,double *b,int *ldb);
void    DHGEQZ(char *job,char *compq,char *compz,int *n,int *ilo,int *ihi,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *q,int *ldq,double *z,int *ldz,double *work,int *lwork,int *info);
void    dhgeqz(char *job,char *compq,char *compz,int *n,int *ilo,int *ihi,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *q,int *ldq,double *z,int *ldz,double *work,int *lwork,int *info);
void    DHSEIN(char *side,char *eigsrc,char *initv,void *select,int *n,double *h,int *ldh,double *wr,double *wi,double *vl,int *ldvl,double *vr,int *ldvr,int *mm,int *m,double *work,int *ifaill,int *ifailr,int *info);
void    dhsein(char *side,char *eigsrc,char *initv,void *select,int *n,double *h,int *ldh,double *wr,double *wi,double *vl,int *ldvl,double *vr,int *ldvr,int *mm,int *m,double *work,int *ifaill,int *ifailr,int *info);
void    DHSEQR(char *job,char *compz,int *n,int *ilo,int *ihi,double *h,int *ldh,double *wr,double *wi,double *z,int *ldz,double *work,int *lwork,int *info);
void    dhseqr(char *job,char *compz,int *n,int *ilo,int *ihi,double *h,int *ldh,double *wr,double *wi,double *z,int *ldz,double *work,int *lwork,int *info);
void    DLABAD(double *small,double *large);
void    dlabad(double *small,double *large);
void    DLABRD(int *m,int *n,int *nb,double *a,int *lda,double *d,double *e,double *tauq,double *taup,double *x,int *ldx,double *y,int *ldy);
void    dlabrd(int *m,int *n,int *nb,double *a,int *lda,double *d,double *e,double *tauq,double *taup,double *x,int *ldx,double *y,int *ldy);
void    DLACON(int *n,double *v,double *x,int *isgn,double *est,int *kase);
void    dlacon(int *n,double *v,double *x,int *isgn,double *est,int *kase);
void    DLACPY(char *uplo,int *m,int *n,double *a,int *lda,double *b,int *ldb);
void    dlacpy(char *uplo,int *m,int *n,double *a,int *lda,double *b,int *ldb);
void    DLADIV(double *a,double *b,double *c,double *d,double *p,double *q);
void    dladiv(double *a,double *b,double *c,double *d,double *p,double *q);
void    DLAE2(double *a,double *b,double *c,double *rt1,double *rt2);
void    dlae2(double *a,double *b,double *c,double *rt1,double *rt2);
void    DLAEBZ(int *ijob,int *nitmax,int *n,int *mmax,int *minp,int *nbmin,double *abstol,double *reltol,double *pivmin,double *d,double *e,double *e2,int *nval,double *ab,double *c,int *mout,int *nab,double *work,int *iwork,int *info);
void    dlaebz(int *ijob,int *nitmax,int *n,int *mmax,int *minp,int *nbmin,double *abstol,double *reltol,double *pivmin,double *d,double *e,double *e2,int *nval,double *ab,double *c,int *mout,int *nab,double *work,int *iwork,int *info);
void    DLAED0(int *icompq,int *qsiz,int *n,double *d,double *e,double *q,int *ldq,double *qstore,int *ldqs,double *work,int *iwork,int *info);
void    dlaed0(int *icompq,int *qsiz,int *n,double *d,double *e,double *q,int *ldq,double *qstore,int *ldqs,double *work,int *iwork,int *info);
void    DLAED1(int *n,double *d,double *q,int *ldq,int *indxq,double *rho,int *cutpnt,double *work,int *iwork,int *info);
void    dlaed1(int *n,double *d,double *q,int *ldq,int *indxq,double *rho,int *cutpnt,double *work,int *iwork,int *info);
void    DLAED2(int *k,int *n,int *n1,double *d,double *q,int *ldq,int *indxq,double *rho,double *z,double *dlamda,double *w,double *q2,int *indx,int *indxc,int *indxp,int *coltyp,int *info);
void    dlaed2(int *k,int *n,int *n1,double *d,double *q,int *ldq,int *indxq,double *rho,double *z,double *dlamda,double *w,double *q2,int *indx,int *indxc,int *indxp,int *coltyp,int *info);
void    DLAED3(int *k,int *n,int *n1,double *d,double *q,int *ldq,double *rho,double *dlamda,double *q2,int *indx,int *ctot,double *w,double *s,int *info);
void    dlaed3(int *k,int *n,int *n1,double *d,double *q,int *ldq,double *rho,double *dlamda,double *q2,int *indx,int *ctot,double *w,double *s,int *info);
void    DLAED4(int *n,int *i,double *d,double *z,double *delta,double *rho,double *dlam,int *info);
void    dlaed4(int *n,int *i,double *d,double *z,double *delta,double *rho,double *dlam,int *info);
void    DLAED5(int *i,double *d,double *z,double *delta,double *rho,double *dlam);
void    dlaed5(int *i,double *d,double *z,double *delta,double *rho,double *dlam);
void    DLAED6(int *kniter,void *orgati,double *rho,double *d,double *z,double *finit,double *tau,int *info);
void    dlaed6(int *kniter,void *orgati,double *rho,double *d,double *z,double *finit,double *tau,int *info);
void    DLAED7(int *icompq,int *n,int *qsiz,int *tlvls,int *curlvl,int *curpbm,double *d,double *q,int *ldq,int *indxq,double *rho,int *cutpnt,double *qstore,int *qptr,int *prmptr,int *perm,int *givptr,int *givcol,double *givnum,double *work,int *iwork,int *info);
void    dlaed7(int *icompq,int *n,int *qsiz,int *tlvls,int *curlvl,int *curpbm,double *d,double *q,int *ldq,int *indxq,double *rho,int *cutpnt,double *qstore,int *qptr,int *prmptr,int *perm,int *givptr,int *givcol,double *givnum,double *work,int *iwork,int *info);
void    DLAED8(int *icompq,int *k,int *n,int *qsiz,double *d,double *q,int *ldq,int *indxq,double *rho,int *cutpnt,double *z,double *dlamda,double *q2,int *ldq2,double *w,int *perm,int *givptr,int *givcol,double *givnum,int *indxp,int *indx,int *info);
void    dlaed8(int *icompq,int *k,int *n,int *qsiz,double *d,double *q,int *ldq,int *indxq,double *rho,int *cutpnt,double *z,double *dlamda,double *q2,int *ldq2,double *w,int *perm,int *givptr,int *givcol,double *givnum,int *indxp,int *indx,int *info);
void    DLAED9(int *k,int *kstart,int *kstop,int *n,double *d,double *q,int *ldq,double *rho,double *dlamda,double *w,double *s,int *lds,int *info);
void    dlaed9(int *k,int *kstart,int *kstop,int *n,double *d,double *q,int *ldq,double *rho,double *dlamda,double *w,double *s,int *lds,int *info);
void    DLAEDA(int *n,int *tlvls,int *curlvl,int *curpbm,int *prmptr,int *perm,int *givptr,int *givcol,double *givnum,double *q,int *qptr,double *z,double *ztemp,int *info);
void    dlaeda(int *n,int *tlvls,int *curlvl,int *curpbm,int *prmptr,int *perm,int *givptr,int *givcol,double *givnum,double *q,int *qptr,double *z,double *ztemp,int *info);
void    DLAEIN(void *rightv,void *noinit,int *n,double *h,int *ldh,double *wr,double *wi,double *vr,double *vi,double *b,int *ldb,double *work,double *eps3,double *smlnum,double *bignum,int *info);
void    dlaein(void *rightv,void *noinit,int *n,double *h,int *ldh,double *wr,double *wi,double *vr,double *vi,double *b,int *ldb,double *work,double *eps3,double *smlnum,double *bignum,int *info);
void    DLAEV2(double *a,double *b,double *c,double *rt1,double *rt2,double *cs1,double *sn1);
void    dlaev2(double *a,double *b,double *c,double *rt1,double *rt2,double *cs1,double *sn1);
void    DLAEXC(void *wantq,int *n,double *t,int *ldt,double *q,int *ldq,int *j1,int *n1,int *n2,double *work,int *info);
void    dlaexc(void *wantq,int *n,double *t,int *ldt,double *q,int *ldq,int *j1,int *n1,int *n2,double *work,int *info);
void    DLAG2(double *a,int *lda,double *b,int *ldb,double *safmin,double *scale1,double *scale2,double *wr1,double *wr2,double *wi);
void    dlag2(double *a,int *lda,double *b,int *ldb,double *safmin,double *scale1,double *scale2,double *wr1,double *wr2,double *wi);
void    DLAGS2(void *upper,double *a1,double *a2,double *a3,double *b1,double *b2,double *b3,double *csu,double *snu,double *csv,double *snv,double *csq,double *snq);
void    dlags2(void *upper,double *a1,double *a2,double *a3,double *b1,double *b2,double *b3,double *csu,double *snu,double *csv,double *snv,double *csq,double *snq);
void    DLAGTF(int *n,double *a,double *lambda,double *b,double *c,double *tol,double *d,int *in,int *info);
void    dlagtf(int *n,double *a,double *lambda,double *b,double *c,double *tol,double *d,int *in,int *info);
void    DLAGTM(char *trans,int *n,int *nrhs,double *alpha,double *dl,double *d,double *du,double *x,int *ldx,double *beta,double *b,int *ldb);
void    dlagtm(char *trans,int *n,int *nrhs,double *alpha,double *dl,double *d,double *du,double *x,int *ldx,double *beta,double *b,int *ldb);
void    DLAGTS(int *job,int *n,double *a,double *b,double *c,double *d,int *in,double *y,double *tol,int *info);
void    dlagts(int *job,int *n,double *a,double *b,double *c,double *d,int *in,double *y,double *tol,int *info);
void    DLAGV2(double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *csl,double *snl,double *csr,double *snr);
void    dlagv2(double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *csl,double *snl,double *csr,double *snr);
void    DLAHQR(void *wantt,void *wantz,int *n,int *ilo,int *ihi,double *h,int *ldh,double *wr,double *wi,int *iloz,int *ihiz,double *z,int *ldz,int *info);
void    dlahqr(void *wantt,void *wantz,int *n,int *ilo,int *ihi,double *h,int *ldh,double *wr,double *wi,int *iloz,int *ihiz,double *z,int *ldz,int *info);
void    DLAHRD(int *n,int *k,int *nb,double *a,int *lda,double *tau,double *t,int *ldt,double *y,int *ldy);
void    dlahrd(int *n,int *k,int *nb,double *a,int *lda,double *tau,double *t,int *ldt,double *y,int *ldy);
void    DLAIC1(int *job,int *j,double *x,double *sest,double *w,double *gamma,double *sestpr,double *s,double *c);
void    dlaic1(int *job,int *j,double *x,double *sest,double *w,double *gamma,double *sestpr,double *s,double *c);
void    DLALN2(void *ltrans,int *na,int *nw,double *smin,double *ca,double *a,int *lda,double *d1,double *d2,double *b,int *ldb,double *wr,double *wi,double *x,int *ldx,double *scale,double *xnorm,int *info);
void    dlaln2(void *ltrans,int *na,int *nw,double *smin,double *ca,double *a,int *lda,double *d1,double *d2,double *b,int *ldb,double *wr,double *wi,double *x,int *ldx,double *scale,double *xnorm,int *info);
void    DLALS0(int *icompq,int *nl,int *nr,int *sqre,int *nrhs,double *b,int *ldb,double *bx,int *ldbx,int *perm,int *givptr,int *givcol,int *ldgcol,double *givnum,int *ldgnum,double *poles,double *difl,double *difr,double *z,int *k,double *c,double *s,double *work,int *info);
void    dlals0(int *icompq,int *nl,int *nr,int *sqre,int *nrhs,double *b,int *ldb,double *bx,int *ldbx,int *perm,int *givptr,int *givcol,int *ldgcol,double *givnum,int *ldgnum,double *poles,double *difl,double *difr,double *z,int *k,double *c,double *s,double *work,int *info);
void    DLALSA(int *icompq,int *smlsiz,int *n,int *nrhs,double *b,int *ldb,double *bx,int *ldbx,double *u,int *ldu,double *vt,int *k,double *difl,double *difr,double *z,double *poles,int *givptr,int *givcol,int *ldgcol,int *perm,double *givnum,double *c,double *s,double *work,int *iwork,int *info);
void    dlalsa(int *icompq,int *smlsiz,int *n,int *nrhs,double *b,int *ldb,double *bx,int *ldbx,double *u,int *ldu,double *vt,int *k,double *difl,double *difr,double *z,double *poles,int *givptr,int *givcol,int *ldgcol,int *perm,double *givnum,double *c,double *s,double *work,int *iwork,int *info);
void    DLALSD(char *uplo,int *smlsiz,int *n,int *nrhs,double *d,double *e,double *b,int *ldb,double *rcond,int *rank,double *work,int *iwork,int *info);
void    dlalsd(char *uplo,int *smlsiz,int *n,int *nrhs,double *d,double *e,double *b,int *ldb,double *rcond,int *rank,double *work,int *iwork,int *info);
double  DLAMC3(double *a,double *b);
double  dlamc3(double *a,double *b);
double  DLAMCH(char *cmach);
double  dlamch(char *cmach);
void    DLAMRG(int *n1,int *n2,double *a,int *dtrd1,int *dtrd2,int *index);
void    dlamrg(int *n1,int *n2,double *a,int *dtrd1,int *dtrd2,int *index);
double  DLANGB(char *norm,int *n,int *kl,int *ku,double *ab,int *ldab,double *work);
double  dlangb(char *norm,int *n,int *kl,int *ku,double *ab,int *ldab,double *work);
double  DLANGE(char *norm,int *m,int *n,double *a,int *lda,double *work);
double  dlange(char *norm,int *m,int *n,double *a,int *lda,double *work);
double  DLANGT(char *norm,int *n,double *dl,double *d,double *du);
double  dlangt(char *norm,int *n,double *dl,double *d,double *du);
double  DLANHS(char *norm,int *n,double *a,int *lda,double *work);
double  dlanhs(char *norm,int *n,double *a,int *lda,double *work);
double  DLANSB(char *norm,char *uplo,int *n,int *k,double *ab,int *ldab,double *work);
double  dlansb(char *norm,char *uplo,int *n,int *k,double *ab,int *ldab,double *work);
double  DLANSP(char *norm,char *uplo,int *n,double *ap,double *work);
double  dlansp(char *norm,char *uplo,int *n,double *ap,double *work);
double  DLANST(char *norm,int *n,double *d,double *e);
double  dlanst(char *norm,int *n,double *d,double *e);
double  DLANSY(char *norm,char *uplo,int *n,double *a,int *lda,double *work);
double  dlansy(char *norm,char *uplo,int *n,double *a,int *lda,double *work);
double  DLANTB(char *norm,char *uplo,char *diag,int *n,int *k,double *ab,int *ldab,double *work);
double  dlantb(char *norm,char *uplo,char *diag,int *n,int *k,double *ab,int *ldab,double *work);
double  DLANTP(char *norm,char *uplo,char *diag,int *n,double *ap,double *work);
double  dlantp(char *norm,char *uplo,char *diag,int *n,double *ap,double *work);
double  DLANTR(char *norm,char *uplo,char *diag,int *m,int *n,double *a,int *lda,double *work);
double  dlantr(char *norm,char *uplo,char *diag,int *m,int *n,double *a,int *lda,double *work);
void    DLANV2(double *a,double *b,double *c,double *d,double *rt1r,double *rt1i,double *rt2r,double *rt2i,double *cs,double *sn);
void    dlanv2(double *a,double *b,double *c,double *d,double *rt1r,double *rt1i,double *rt2r,double *rt2i,double *cs,double *sn);
void    DLAPLL(int *n,double *x,int *incx,double *y,int *incy,double *ssmin);
void    dlapll(int *n,double *x,int *incx,double *y,int *incy,double *ssmin);
void    DLAPMT(void *forwrd,int *m,int *n,double *x,int *ldx,int *k);
void    dlapmt(void *forwrd,int *m,int *n,double *x,int *ldx,int *k);
double  DLAPY2(double *x,double *y);
double  dlapy2(double *x,double *y);
double  DLAPY3(double *x,double *y,double *z);
double  dlapy3(double *x,double *y,double *z);
void    DLAQGB(int *m,int *n,int *kl,int *ku,double *ab,int *ldab,double *r,double *c,double *rowcnd,double *colcnd,double *amax,char *equed);
void    dlaqgb(int *m,int *n,int *kl,int *ku,double *ab,int *ldab,double *r,double *c,double *rowcnd,double *colcnd,double *amax,char *equed);
void    DLAQGE(int *m,int *n,double *a,int *lda,double *r,double *c,double *rowcnd,double *colcnd,double *amax,char *equed);
void    dlaqge(int *m,int *n,double *a,int *lda,double *r,double *c,double *rowcnd,double *colcnd,double *amax,char *equed);
void    DLAQP2(int *m,int *n,int *offset,double *a,int *lda,int *jpvt,double *tau,double *vn1,double *vn2,double *work);
void    dlaqp2(int *m,int *n,int *offset,double *a,int *lda,int *jpvt,double *tau,double *vn1,double *vn2,double *work);
void    DLAQPS(int *m,int *n,int *offset,int *nb,int *kb,double *a,int *lda,int *jpvt,double *tau,double *vn1,double *vn2,double *auxv,double *f,int *ldf);
void    dlaqps(int *m,int *n,int *offset,int *nb,int *kb,double *a,int *lda,int *jpvt,double *tau,double *vn1,double *vn2,double *auxv,double *f,int *ldf);
void    DLAQSB(char *uplo,int *n,int *kd,double *ab,int *ldab,double *s,double *scond,double *amax,char *equed);
void    dlaqsb(char *uplo,int *n,int *kd,double *ab,int *ldab,double *s,double *scond,double *amax,char *equed);
void    DLAQSP(char *uplo,int *n,double *ap,double *s,double *scond,double *amax,char *equed);
void    dlaqsp(char *uplo,int *n,double *ap,double *s,double *scond,double *amax,char *equed);
void    DLAQSY(char *uplo,int *n,double *a,int *lda,double *s,double *scond,double *amax,char *equed);
void    dlaqsy(char *uplo,int *n,double *a,int *lda,double *s,double *scond,double *amax,char *equed);
float   DLAQTR(float *ltran,void *lreal,float *n,double *t,int *ldt,float *b,double *w,double *scale,double *x,double *work,int *info);
float   dlaqtr(float *ltran,void *lreal,float *n,double *t,int *ldt,float *b,double *w,double *scale,double *x,double *work,int *info);
void    DLAR1V(int *n,int *b1,int *bn,double *sigma,double *d,double *l,double *ld,double *lld,double *gersch,double *z,double *ztz,double *mingma,int *r,int *isuppz,double *work);
void    dlar1v(int *n,int *b1,int *bn,double *sigma,double *d,double *l,double *ld,double *lld,double *gersch,double *z,double *ztz,double *mingma,int *r,int *isuppz,double *work);
void    DLAR2V(int *n,double *x,double *y,double *z,int *incx,double *c,double *s,int *incc);
void    dlar2v(int *n,double *x,double *y,double *z,int *incx,double *c,double *s,int *incc);
void    DLARF(char *side,int *m,int *n,double *v,int *incv,double *tau,double *c,int *ldc,double *work);
void    dlarf(char *side,int *m,int *n,double *v,int *incv,double *tau,double *c,int *ldc,double *work);
void    DLARFB(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,double *v,int *ldv,double *t,int *ldt,double *c,int *ldc,double *work,int *ldwork);
void    dlarfb(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,double *v,int *ldv,double *t,int *ldt,double *c,int *ldc,double *work,int *ldwork);
void    DLARFG(int *n,double *alpha,double *x,int *incx,double *tau);
void    dlarfg(int *n,double *alpha,double *x,int *incx,double *tau);
void    DLARFT(char *direct,char *storev,int *n,int *k,double *v,int *ldv,double *tau,double *t,int *ldt);
void    dlarft(char *direct,char *storev,int *n,int *k,double *v,int *ldv,double *tau,double *t,int *ldt);
void    DLARFX(char *side,int *m,int *n,double *v,double *tau,double *c,int *ldc,double *work);
void    dlarfx(char *side,int *m,int *n,double *v,double *tau,double *c,int *ldc,double *work);
void    DLARGV(int *n,double *x,int *incx,double *y,int *incy,double *c,int *incc);
void    dlargv(int *n,double *x,int *incx,double *y,int *incy,double *c,int *incc);
void    DLARNV(int *idist,int *iseed,int *n,double *x);
void    dlarnv(int *idist,int *iseed,int *n,double *x);
void    DLARRB(int *n,double *d,double *l,double *ld,double *lld,int *ifirst,int *ilast,double *sigma,double *reltol,double *w,double *wgap,double *werr,double *work,int *iwork,int *info);
void    dlarrb(int *n,double *d,double *l,double *ld,double *lld,int *ifirst,int *ilast,double *sigma,double *reltol,double *w,double *wgap,double *werr,double *work,int *iwork,int *info);
void    DLARRE(int *n,double *d,double *e,double *tol,int *nsplit,int *isplit,int *m,double *w,double *woff,double *gersch,double *work,int *info);
void    dlarre(int *n,double *d,double *e,double *tol,int *nsplit,int *isplit,int *m,double *w,double *woff,double *gersch,double *work,int *info);
void    DLARRF(int *n,double *d,double *l,double *ld,double *lld,int *ifirst,int *ilast,double *w,double *dplus,double *lplus,double *work,int *iwork,int *info);
void    dlarrf(int *n,double *d,double *l,double *ld,double *lld,int *ifirst,int *ilast,double *w,double *dplus,double *lplus,double *work,int *iwork,int *info);
void    DLARRV(int *n,double *d,double *l,int *isplit,int *m,double *w,int *iblock,double *gersch,double *tol,double *z,int *ldz,int *isuppz,double *work,int *iwork,int *info);
void    dlarrv(int *n,double *d,double *l,int *isplit,int *m,double *w,int *iblock,double *gersch,double *tol,double *z,int *ldz,int *isuppz,double *work,int *iwork,int *info);
void    DLARTG(double *f,double *g,double *cs,double *sn,double *r);
void    dlartg(double *f,double *g,double *cs,double *sn,double *r);
void    DLARTV(int *n,double *x,int *incx,double *y,int *incy,double *c,double *s,int *incc);
void    dlartv(int *n,double *x,int *incx,double *y,int *incy,double *c,double *s,int *incc);
void    DLARUV(int *iseed,int *n,double *x);
void    dlaruv(int *iseed,int *n,double *x);
void    DLARZ(char *side,int *m,int *n,int *l,double *v,int *incv,double *tau,double *c,int *ldc,double *work);
void    dlarz(char *side,int *m,int *n,int *l,double *v,int *incv,double *tau,double *c,int *ldc,double *work);
void    DLARZB(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,int *l,double *v,int *ldv,double *t,int *ldt,double *c,int *ldc,double *work,int *ldwork);
void    dlarzb(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,int *l,double *v,int *ldv,double *t,int *ldt,double *c,int *ldc,double *work,int *ldwork);
void    DLARZT(char *direct,char *storev,int *n,int *k,double *v,int *ldv,double *tau,double *t,int *ldt);
void    dlarzt(char *direct,char *storev,int *n,int *k,double *v,int *ldv,double *tau,double *t,int *ldt);
void    DLAS2(double *f,double *g,double *h,double *ssmin,double *ssmax);
void    dlas2(double *f,double *g,double *h,double *ssmin,double *ssmax);
void    DLASCL(char *type,int *kl,int *ku,double *cfrom,double *cto,int *m,int *n,double *a,int *lda,int *info);
void    dlascl(char *type,int *kl,int *ku,double *cfrom,double *cto,int *m,int *n,double *a,int *lda,int *info);
void    DLASD0(int *n,int *sqre,double *d,double *e,double *u,int *ldu,double *vt,int *ldvt,int *smlsiz,int *iwork,double *work,int *info);
void    dlasd0(int *n,int *sqre,double *d,double *e,double *u,int *ldu,double *vt,int *ldvt,int *smlsiz,int *iwork,double *work,int *info);
void    DLASD1(int *nl,int *nr,int *sqre,double *d,double *alpha,double *beta,double *u,int *ldu,double *vt,int *ldvt,int *idxq,int *iwork,double *work,int *info);
void    dlasd1(int *nl,int *nr,int *sqre,double *d,double *alpha,double *beta,double *u,int *ldu,double *vt,int *ldvt,int *idxq,int *iwork,double *work,int *info);
void    DLASD2(int *nl,int *nr,int *sqre,int *k,double *d,double *z,double *alpha,double *beta,double *u,int *ldu,double *vt,int *ldvt,double *dsigma,double *u2,int *ldu2,double *vt2,int *ldvt2,int *idxp,int *idx,int *idxc,int *idxq,int *coltyp,int *info);
void    dlasd2(int *nl,int *nr,int *sqre,int *k,double *d,double *z,double *alpha,double *beta,double *u,int *ldu,double *vt,int *ldvt,double *dsigma,double *u2,int *ldu2,double *vt2,int *ldvt2,int *idxp,int *idx,int *idxc,int *idxq,int *coltyp,int *info);
void    DLASD3(int *nl,int *nr,int *sqre,int *k,double *d,double *q,int *ldq,double *dsigma,double *u,int *ldu,double *u2,int *ldu2,double *vt,int *ldvt,double *vt2,int *ldvt2,int *idxc,int *ctot,double *z,int *info);
void    dlasd3(int *nl,int *nr,int *sqre,int *k,double *d,double *q,int *ldq,double *dsigma,double *u,int *ldu,double *u2,int *ldu2,double *vt,int *ldvt,double *vt2,int *ldvt2,int *idxc,int *ctot,double *z,int *info);
void    DLASD4(int *n,int *i,double *d,double *z,double *delta,double *rho,double *sigma,double *work,int *info);
void    dlasd4(int *n,int *i,double *d,double *z,double *delta,double *rho,double *sigma,double *work,int *info);
void    DLASD5(int *i,double *d,double *z,double *delta,double *rho,double *dsigma,double *work);
void    dlasd5(int *i,double *d,double *z,double *delta,double *rho,double *dsigma,double *work);
void    DLASD6(int *icompq,int *nl,int *nr,int *sqre,double *d,double *vf,double *vl,double *alpha,double *beta,int *idxq,int *perm,int *givptr,int *givcol,int *ldgcol,double *givnum,int *ldgnum,double *poles,double *difl,double *difr,double *z,int *k,double *c,double *s,double *work,int *iwork,int *info);
void    dlasd6(int *icompq,int *nl,int *nr,int *sqre,double *d,double *vf,double *vl,double *alpha,double *beta,int *idxq,int *perm,int *givptr,int *givcol,int *ldgcol,double *givnum,int *ldgnum,double *poles,double *difl,double *difr,double *z,int *k,double *c,double *s,double *work,int *iwork,int *info);
void    DLASD7(int *icompq,int *nl,int *nr,int *sqre,int *k,double *d,double *z,double *zw,double *vf,double *vfw,double *vl,double *vlw,double *alpha,double *beta,double *dsigma,int *idx,int *idxp,int *idxq,int *perm,int *givptr,int *givcol,int *ldgcol,double *givnum,int *ldgnum,double *c,double *s,int *info);
void    dlasd7(int *icompq,int *nl,int *nr,int *sqre,int *k,double *d,double *z,double *zw,double *vf,double *vfw,double *vl,double *vlw,double *alpha,double *beta,double *dsigma,int *idx,int *idxp,int *idxq,int *perm,int *givptr,int *givcol,int *ldgcol,double *givnum,int *ldgnum,double *c,double *s,int *info);
void    DLASD8(int *icompq,int *k,double *d,double *z,double *vf,double *vl,double *difl,double *difr,int *lddifr,double *dsigma,double *work,int *info);
void    dlasd8(int *icompq,int *k,double *d,double *z,double *vf,double *vl,double *difl,double *difr,int *lddifr,double *dsigma,double *work,int *info);
void    DLASD9(int *icompq,int *ldu,int *k,double *d,double *z,double *vf,double *vl,double *difl,double *difr,double *dsigma,double *work,int *info);
void    dlasd9(int *icompq,int *ldu,int *k,double *d,double *z,double *vf,double *vl,double *difl,double *difr,double *dsigma,double *work,int *info);
void    DLASDA(int *icompq,int *smlsiz,int *n,int *sqre,double *d,double *e,double *u,int *ldu,double *vt,int *k,double *difl,double *difr,double *z,double *poles,int *givptr,int *givcol,int *ldgcol,int *perm,double *givnum,double *c,double *s,double *work,int *iwork,int *info);
void    dlasda(int *icompq,int *smlsiz,int *n,int *sqre,double *d,double *e,double *u,int *ldu,double *vt,int *k,double *difl,double *difr,double *z,double *poles,int *givptr,int *givcol,int *ldgcol,int *perm,double *givnum,double *c,double *s,double *work,int *iwork,int *info);
void    DLASDQ(char *uplo,int *sqre,int *n,int *ncvt,int *nru,int *ncc,double *d,double *e,double *vt,int *ldvt,double *u,int *ldu,double *c,int *ldc,double *work,int *info);
void    dlasdq(char *uplo,int *sqre,int *n,int *ncvt,int *nru,int *ncc,double *d,double *e,double *vt,int *ldvt,double *u,int *ldu,double *c,int *ldc,double *work,int *info);
void    DLASDT(int *n,int *lvl,int *nd,int *inode,int *ndiml,int *ndimr,int *msub);
void    dlasdt(int *n,int *lvl,int *nd,int *inode,int *ndiml,int *ndimr,int *msub);
void    DLASET(char *uplo,int *m,int *n,double *alpha,double *beta,double *a,int *lda);
void    dlaset(char *uplo,int *m,int *n,double *alpha,double *beta,double *a,int *lda);
void    DLASQ1(int *n,double *d,double *e,double *work,int *info);
void    dlasq1(int *n,double *d,double *e,double *work,int *info);
void    DLASQ2(int *n,double *z,int *info);
void    dlasq2(int *n,double *z,int *info);
void    DLASQ3(int *i0,int *n0,double *z,int *pp,double *dmin,double *sigma,double *desig,double *qmax,int *nfail,int *iter,int *ndiv,void *ieee);
void    dlasq3(int *i0,int *n0,double *z,int *pp,double *dmin,double *sigma,double *desig,double *qmax,int *nfail,int *iter,int *ndiv,void *ieee);
void    DLASQ4(int *i0,int *n0,double *z,int *pp,int *n0in,double *dmin,double *dmin1,double *dmin2,double *dn,double *dn1,double *dn2,double *tau,int *ttype);
void    dlasq4(int *i0,int *n0,double *z,int *pp,int *n0in,double *dmin,double *dmin1,double *dmin2,double *dn,double *dn1,double *dn2,double *tau,int *ttype);
void    DLASQ5(int *i0,int *n0,double *z,int *pp,double *tau,double *dmin,double *dmin1,double *dmin2,double *dn,double *dnm1,double *dnm2,void *ieee);
void    dlasq5(int *i0,int *n0,double *z,int *pp,double *tau,double *dmin,double *dmin1,double *dmin2,double *dn,double *dnm1,double *dnm2,void *ieee);
void    DLASQ6(int *i0,int *n0,double *z,int *pp,double *dmin,double *dmin1,double *dmin2,double *dn,double *dnm1,double *dnm2);
void    dlasq6(int *i0,int *n0,double *z,int *pp,double *dmin,double *dmin1,double *dmin2,double *dn,double *dnm1,double *dnm2);
void    DLASR(char *side,char *pivot,char *direct,int *m,int *n,double *c,double *s,double *a,int *lda);
void    dlasr(char *side,char *pivot,char *direct,int *m,int *n,double *c,double *s,double *a,int *lda);
void    DLASRT(char *id,int *n,double *d,int *info);
void    dlasrt(char *id,int *n,double *d,int *info);
void    DLASSQ(int *n,double *x,int *incx,double *scale,double *sumsq);
void    dlassq(int *n,double *x,int *incx,double *scale,double *sumsq);
void    DLASV2(double *f,double *g,double *h,double *ssmin,double *ssmax,double *snr,double *csr,double *snl,double *csl);
void    dlasv2(double *f,double *g,double *h,double *ssmin,double *ssmax,double *snr,double *csr,double *snl,double *csl);
void    DLASWP(int *n,double *a,int *lda,int *k1,int *k2,int *ipiv,int *incx);
void    dlaswp(int *n,double *a,int *lda,int *k1,int *k2,int *ipiv,int *incx);
void    DLASY2(void *ltranl,void *ltranr,int *isgn,int *n1,int *n2,double *tl,int *ldtl,double *tr,int *ldtr,double *b,int *ldb,double *scale,double *x,int *ldx,double *xnorm,int *info);
void    dlasy2(void *ltranl,void *ltranr,int *isgn,int *n1,int *n2,double *tl,int *ldtl,double *tr,int *ldtr,double *b,int *ldb,double *scale,double *x,int *ldx,double *xnorm,int *info);
void    DLASYF(char *uplo,int *n,int *nb,int *kb,double *a,int *lda,int *ipiv,double *w,int *ldw,int *info);
void    dlasyf(char *uplo,int *n,int *nb,int *kb,double *a,int *lda,int *ipiv,double *w,int *ldw,int *info);
void    DLATBS(char *uplo,char *trans,char *diag,char *normin,int *n,int *kd,double *ab,int *ldab,double *x,double *scale,double *cnorm,int *info);
void    dlatbs(char *uplo,char *trans,char *diag,char *normin,int *n,int *kd,double *ab,int *ldab,double *x,double *scale,double *cnorm,int *info);
void    DLATDF(int *ijob,int *n,double *z,int *ldz,double *rhs,double *rdsum,double *rdscal,int *ipiv,int *jpiv);
void    dlatdf(int *ijob,int *n,double *z,int *ldz,double *rhs,double *rdsum,double *rdscal,int *ipiv,int *jpiv);
void    DLATPS(char *uplo,char *trans,char *diag,char *normin,int *n,double *ap,double *x,double *scale,double *cnorm,int *info);
void    dlatps(char *uplo,char *trans,char *diag,char *normin,int *n,double *ap,double *x,double *scale,double *cnorm,int *info);
void    DLATRD(char *uplo,int *n,int *nb,double *a,int *lda,double *e,double *tau,double *w,int *ldw);
void    dlatrd(char *uplo,int *n,int *nb,double *a,int *lda,double *e,double *tau,double *w,int *ldw);
void    DLATRS(char *uplo,char *trans,char *diag,char *normin,int *n,double *a,int *lda,double *x,double *scale,double *cnorm,int *info);
void    dlatrs(char *uplo,char *trans,char *diag,char *normin,int *n,double *a,int *lda,double *x,double *scale,double *cnorm,int *info);
void    DLATRZ(int *m,int *n,int *l,double *a,int *lda,double *tau,double *work);
void    dlatrz(int *m,int *n,int *l,double *a,int *lda,double *tau,double *work);
void    DLATZM(char *side,int *m,int *n,double *v,int *incv,double *tau,double *c1,double *c2,int *ldc,double *work);
void    dlatzm(char *side,int *m,int *n,double *v,int *incv,double *tau,double *c1,double *c2,int *ldc,double *work);
void    DLAUU2(char *uplo,int *n,double *a,int *lda,int *info);
void    dlauu2(char *uplo,int *n,double *a,int *lda,int *info);
void    DLAUUM(char *uplo,int *n,double *a,int *lda,int *info);
void    dlauum(char *uplo,int *n,double *a,int *lda,int *info);
void    DOPGTR(char *uplo,int *n,double *ap,double *tau,double *q,int *ldq,double *work,int *info);
void    dopgtr(char *uplo,int *n,double *ap,double *tau,double *q,int *ldq,double *work,int *info);
void    DOPMTR(char *side,char *uplo,char *trans,int *m,int *n,double *ap,double *tau,double *c,int *ldc,double *work,int *info);
void    dopmtr(char *side,char *uplo,char *trans,int *m,int *n,double *ap,double *tau,double *c,int *ldc,double *work,int *info);
void    DORG2L(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *info);
void    dorg2l(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *info);
void    DORG2R(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *info);
void    dorg2r(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *info);
void    DORGBR(char *vect,int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dorgbr(char *vect,int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DORGHR(int *n,int *ilo,int *ihi,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dorghr(int *n,int *ilo,int *ihi,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DORGL2(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *info);
void    dorgl2(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *info);
void    DORGLQ(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dorglq(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DORGQL(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dorgql(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DORGQR(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dorgqr(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DORGR2(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *info);
void    dorgr2(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *info);
void    DORGRQ(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dorgrq(int *m,int *n,int *k,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DORGTR(char *uplo,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dorgtr(char *uplo,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    DORM2L(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    dorm2l(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    DORM2R(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    dorm2r(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    DORMBR(char *vect,char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    dormbr(char *vect,char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    DORMHR(char *side,char *trans,int *m,int *n,int *ilo,int *ihi,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    dormhr(char *side,char *trans,int *m,int *n,int *ilo,int *ihi,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    DORML2(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    dorml2(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    DORMLQ(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    dormlq(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    DORMQL(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    dormql(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    DORMQR(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    dormqr(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    DORMR2(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    dormr2(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    DORMR3(char *side,char *trans,int *m,int *n,int *k,int *l,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    dormr3(char *side,char *trans,int *m,int *n,int *k,int *l,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *info);
void    DORMRQ(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    dormrq(char *side,char *trans,int *m,int *n,int *k,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    DORMRZ(char *side,char *trans,int *m,int *n,int *k,int *l,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    dormrz(char *side,char *trans,int *m,int *n,int *k,int *l,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    DORMTR(char *side,char *uplo,char *trans,int *m,int *n,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    dormtr(char *side,char *uplo,char *trans,int *m,int *n,double *a,int *lda,double *tau,double *c,int *ldc,double *work,int *lwork,int *info);
void    DPBCON(char *uplo,int *n,int *kd,double *ab,int *ldab,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    dpbcon(char *uplo,int *n,int *kd,double *ab,int *ldab,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    DPBEQU(char *uplo,int *n,int *kd,double *ab,int *ldab,double *s,double *scond,double *amax,int *info);
void    dpbequ(char *uplo,int *n,int *kd,double *ab,int *ldab,double *s,double *scond,double *amax,int *info);
void    DPBRFS(char *uplo,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *afb,int *ldafb,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dpbrfs(char *uplo,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *afb,int *ldafb,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DPBSTF(char *uplo,int *n,int *kd,double *ab,int *ldab,int *info);
void    dpbstf(char *uplo,int *n,int *kd,double *ab,int *ldab,int *info);
void    DPBSV(char *uplo,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *b,int *ldb,int *info);
void    dpbsv(char *uplo,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *b,int *ldb,int *info);
void    DPBSVX(char *fact,char *uplo,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *afb,int *ldafb,char *equed,double *s,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dpbsvx(char *fact,char *uplo,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *afb,int *ldafb,char *equed,double *s,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DPBTF2(char *uplo,int *n,int *kd,double *ab,int *ldab,int *info);
void    dpbtf2(char *uplo,int *n,int *kd,double *ab,int *ldab,int *info);
void    DPBTRF(char *uplo,int *n,int *kd,double *ab,int *ldab,int *info);
void    dpbtrf(char *uplo,int *n,int *kd,double *ab,int *ldab,int *info);
void    DPBTRS(char *uplo,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *b,int *ldb,int *info);
void    dpbtrs(char *uplo,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *b,int *ldb,int *info);
void    DPOCON(char *uplo,int *n,double *a,int *lda,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    dpocon(char *uplo,int *n,double *a,int *lda,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    DPOEQU(int *n,double *a,int *lda,double *s,double *scond,double *amax,int *info);
void    dpoequ(int *n,double *a,int *lda,double *s,double *scond,double *amax,int *info);
void    DPORFS(char *uplo,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dporfs(char *uplo,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DPOSV(char *uplo,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *info);
void    dposv(char *uplo,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *info);
void    DPOSVX(char *fact,char *uplo,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,char *equed,double *s,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dposvx(char *fact,char *uplo,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,char *equed,double *s,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DPOTF2(char *uplo,int *n,double *a,int *lda,int *info);
void    dpotf2(char *uplo,int *n,double *a,int *lda,int *info);
void    DPOTRF(char *uplo,int *n,double *a,int *lda,int *info);
void    dpotrf(char *uplo,int *n,double *a,int *lda,int *info);
void    DPOTRI(char *uplo,int *n,double *a,int *lda,int *info);
void    dpotri(char *uplo,int *n,double *a,int *lda,int *info);
void    DPOTRS(char *uplo,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *info);
void    dpotrs(char *uplo,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *info);
void    DPPCON(char *uplo,int *n,double *ap,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    dppcon(char *uplo,int *n,double *ap,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    DPPEQU(char *uplo,int *n,double *ap,double *s,double *scond,double *amax,int *info);
void    dppequ(char *uplo,int *n,double *ap,double *s,double *scond,double *amax,int *info);
void    DPPRFS(char *uplo,int *n,int *nrhs,double *ap,double *afp,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dpprfs(char *uplo,int *n,int *nrhs,double *ap,double *afp,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DPPSV(char *uplo,int *n,int *nrhs,double *ap,double *b,int *ldb,int *info);
void    dppsv(char *uplo,int *n,int *nrhs,double *ap,double *b,int *ldb,int *info);
void    DPPSVX(char *fact,char *uplo,int *n,int *nrhs,double *ap,double *afp,char *equed,double *s,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dppsvx(char *fact,char *uplo,int *n,int *nrhs,double *ap,double *afp,char *equed,double *s,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DPPTRF(char *uplo,int *n,double *ap,int *info);
void    dpptrf(char *uplo,int *n,double *ap,int *info);
void    DPPTRI(char *uplo,int *n,double *ap,int *info);
void    dpptri(char *uplo,int *n,double *ap,int *info);
void    DPPTRS(char *uplo,int *n,int *nrhs,double *ap,double *b,int *ldb,int *info);
void    dpptrs(char *uplo,int *n,int *nrhs,double *ap,double *b,int *ldb,int *info);
void    DPTCON(int *n,double *d,double *e,double *anorm,double *rcond,double *work,int *info);
void    dptcon(int *n,double *d,double *e,double *anorm,double *rcond,double *work,int *info);
void    DPTEQR(char *compz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *info);
void    dpteqr(char *compz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *info);
void    DPTRFS(int *n,int *nrhs,double *d,double *e,double *df,double *ef,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *info);
void    dptrfs(int *n,int *nrhs,double *d,double *e,double *df,double *ef,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *info);
void    DPTSV(int *n,int *nrhs,double *d,double *e,double *b,int *ldb,int *info);
void    dptsv(int *n,int *nrhs,double *d,double *e,double *b,int *ldb,int *info);
void    DPTSVX(char *fact,int *n,int *nrhs,double *d,double *e,double *df,double *ef,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *info);
void    dptsvx(char *fact,int *n,int *nrhs,double *d,double *e,double *df,double *ef,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *info);
void    DPTTRF(int *n,double *d,double *e,int *info);
void    dpttrf(int *n,double *d,double *e,int *info);
void    DPTTRS(int *n,int *nrhs,double *d,double *e,double *b,int *ldb,int *info);
void    dpttrs(int *n,int *nrhs,double *d,double *e,double *b,int *ldb,int *info);
void    DPTTS2(int *n,int *nrhs,double *d,double *e,double *b,int *ldb);
void    dptts2(int *n,int *nrhs,double *d,double *e,double *b,int *ldb);
void    DRSCL(int *n,double *sa,double *sx,int *incx);
void    drscl(int *n,double *sa,double *sx,int *incx);
void    DSBEV(char *jobz,char *uplo,int *n,int *kd,double *ab,int *ldab,double *w,double *z,int *ldz,double *work,int *info);
void    dsbev(char *jobz,char *uplo,int *n,int *kd,double *ab,int *ldab,double *w,double *z,int *ldz,double *work,int *info);
void    DSBEVD(char *jobz,char *uplo,int *n,int *kd,double *ab,int *ldab,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dsbevd(char *jobz,char *uplo,int *n,int *kd,double *ab,int *ldab,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSBEVX(char *jobz,char *range,char *uplo,int *n,int *kd,double *ab,int *ldab,double *q,int *ldq,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    dsbevx(char *jobz,char *range,char *uplo,int *n,int *kd,double *ab,int *ldab,double *q,int *ldq,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    DSBGST(char *vect,char *uplo,int *n,int *ka,int *kb,double *ab,int *ldab,double *bb,int *ldbb,double *x,int *ldx,double *work,int *info);
void    dsbgst(char *vect,char *uplo,int *n,int *ka,int *kb,double *ab,int *ldab,double *bb,int *ldbb,double *x,int *ldx,double *work,int *info);
void    DSBGV(char *jobz,char *uplo,int *n,int *ka,int *kb,double *ab,int *ldab,double *bb,int *ldbb,double *w,double *z,int *ldz,double *work,int *info);
void    dsbgv(char *jobz,char *uplo,int *n,int *ka,int *kb,double *ab,int *ldab,double *bb,int *ldbb,double *w,double *z,int *ldz,double *work,int *info);
void    DSBGVD(char *jobz,char *uplo,int *n,int *ka,int *kb,double *ab,int *ldab,double *bb,int *ldbb,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dsbgvd(char *jobz,char *uplo,int *n,int *ka,int *kb,double *ab,int *ldab,double *bb,int *ldbb,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSBGVX(char *jobz,char *range,char *uplo,int *n,int *ka,int *kb,double *ab,int *ldab,double *bb,int *ldbb,double *q,int *ldq,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    dsbgvx(char *jobz,char *range,char *uplo,int *n,int *ka,int *kb,double *ab,int *ldab,double *bb,int *ldbb,double *q,int *ldq,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    DSBTRD(char *vect,char *uplo,int *n,int *kd,double *ab,int *ldab,double *d,double *e,double *q,int *ldq,double *work,int *info);
void    dsbtrd(char *vect,char *uplo,int *n,int *kd,double *ab,int *ldab,double *d,double *e,double *q,int *ldq,double *work,int *info);
void    DSPCON(char *uplo,int *n,double *ap,int *ipiv,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    dspcon(char *uplo,int *n,double *ap,int *ipiv,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    DSPEV(char *jobz,char *uplo,int *n,double *ap,double *w,double *z,int *ldz,double *work,int *info);
void    dspev(char *jobz,char *uplo,int *n,double *ap,double *w,double *z,int *ldz,double *work,int *info);
void    DSPEVD(char *jobz,char *uplo,int *n,double *ap,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dspevd(char *jobz,char *uplo,int *n,double *ap,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSPEVX(char *jobz,char *range,char *uplo,int *n,double *ap,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    dspevx(char *jobz,char *range,char *uplo,int *n,double *ap,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    DSPGST(int *itype,char *uplo,int *n,double *ap,double *bp,int *info);
void    dspgst(int *itype,char *uplo,int *n,double *ap,double *bp,int *info);
void    DSPGV(int *itype,char *jobz,char *uplo,int *n,double *ap,double *bp,double *w,double *z,int *ldz,double *work,int *info);
void    dspgv(int *itype,char *jobz,char *uplo,int *n,double *ap,double *bp,double *w,double *z,int *ldz,double *work,int *info);
void    DSPGVD(int *itype,char *jobz,char *uplo,int *n,double *ap,double *bp,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dspgvd(int *itype,char *jobz,char *uplo,int *n,double *ap,double *bp,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSPGVX(int *itype,char *jobz,char *range,char *uplo,int *n,double *ap,double *bp,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    dspgvx(int *itype,char *jobz,char *range,char *uplo,int *n,double *ap,double *bp,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    DSPRFS(char *uplo,int *n,int *nrhs,double *ap,double *afp,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dsprfs(char *uplo,int *n,int *nrhs,double *ap,double *afp,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DSPSV(char *uplo,int *n,int *nrhs,double *ap,int *ipiv,double *b,int *ldb,int *info);
void    dspsv(char *uplo,int *n,int *nrhs,double *ap,int *ipiv,double *b,int *ldb,int *info);
void    DSPSVX(char *fact,char *uplo,int *n,int *nrhs,double *ap,double *afp,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dspsvx(char *fact,char *uplo,int *n,int *nrhs,double *ap,double *afp,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DSPTRD(char *uplo,int *n,double *ap,double *d,double *e,double *tau,int *info);
void    dsptrd(char *uplo,int *n,double *ap,double *d,double *e,double *tau,int *info);
void    DSPTRF(char *uplo,int *n,double *ap,int *ipiv,int *info);
void    dsptrf(char *uplo,int *n,double *ap,int *ipiv,int *info);
void    DSPTRI(char *uplo,int *n,double *ap,int *ipiv,double *work,int *info);
void    dsptri(char *uplo,int *n,double *ap,int *ipiv,double *work,int *info);
void    DSPTRS(char *uplo,int *n,int *nrhs,double *ap,int *ipiv,double *b,int *ldb,int *info);
void    dsptrs(char *uplo,int *n,int *nrhs,double *ap,int *ipiv,double *b,int *ldb,int *info);
void    DSTEBZ(char *range,char *order,int *n,double *vl,double *vu,int *il,int *iu,double *abstol,double *d,double *e,int *m,int *nsplit,double *w,int *iblock,int *isplit,double *work,int *iwork,int *info);
void    dstebz(char *range,char *order,int *n,double *vl,double *vu,int *il,int *iu,double *abstol,double *d,double *e,int *m,int *nsplit,double *w,int *iblock,int *isplit,double *work,int *iwork,int *info);
void    DSTEDC(char *compz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dstedc(char *compz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSTEGR(char *jobz,char *range,int *n,double *d,double *e,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,int *isuppz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dstegr(char *jobz,char *range,int *n,double *d,double *e,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,int *isuppz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSTEIN(int *n,double *d,double *e,int *m,double *w,int *iblock,int *isplit,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    dstein(int *n,double *d,double *e,int *m,double *w,int *iblock,int *isplit,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    DSTEQR(char *compz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *info);
void    dsteqr(char *compz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *info);
void    DSTERF(int *n,double *d,double *e,int *info);
void    dsterf(int *n,double *d,double *e,int *info);
void    DSTEV(char *jobz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *info);
void    dstev(char *jobz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *info);
void    DSTEVD(char *jobz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dstevd(char *jobz,int *n,double *d,double *e,double *z,int *ldz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSTEVR(char *jobz,char *range,int *n,double *d,double *e,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,int *isuppz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dstevr(char *jobz,char *range,int *n,double *d,double *e,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,int *isuppz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSTEVX(char *jobz,char *range,int *n,double *d,double *e,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    dstevx(char *jobz,char *range,int *n,double *d,double *e,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    DSYCON(char *uplo,int *n,double *a,int *lda,int *ipiv,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    dsycon(char *uplo,int *n,double *a,int *lda,int *ipiv,double *anorm,double *rcond,double *work,int *iwork,int *info);
void    DSYEV(char *jobz,char *uplo,int *n,double *a,int *lda,double *w,double *work,int *lwork,int *info);
void    dsyev(char *jobz,char *uplo,int *n,double *a,int *lda,double *w,double *work,int *lwork,int *info);
void    DSYEVD(char *jobz,char *uplo,int *n,double *a,int *lda,double *w,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dsyevd(char *jobz,char *uplo,int *n,double *a,int *lda,double *w,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSYEVR(char *jobz,char *range,char *uplo,int *n,double *a,int *lda,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,int *isuppz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dsyevr(char *jobz,char *range,char *uplo,int *n,double *a,int *lda,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,int *isuppz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSYEVX(char *jobz,char *range,char *uplo,int *n,double *a,int *lda,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *ifail,int *info);
void    dsyevx(char *jobz,char *range,char *uplo,int *n,double *a,int *lda,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *ifail,int *info);
void    DSYGS2(int *itype,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,int *info);
void    dsygs2(int *itype,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,int *info);
void    DSYGST(int *itype,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,int *info);
void    dsygst(int *itype,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,int *info);
void    DSYGV(int *itype,char *jobz,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,double *w,double *work,int *lwork,int *info);
void    dsygv(int *itype,char *jobz,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,double *w,double *work,int *lwork,int *info);
void    DSYGVD(int *itype,char *jobz,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,double *w,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dsygvd(int *itype,char *jobz,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,double *w,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DSYGVX(int *itype,char *jobz,char *range,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *ifail,int *info);
void    dsygvx(int *itype,char *jobz,char *range,char *uplo,int *n,double *a,int *lda,double *b,int *ldb,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w,double *z,int *ldz,double *work,int *lwork,int *iwork,int *ifail,int *info);
void    DSYRFS(char *uplo,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dsyrfs(char *uplo,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DSYSV(char *uplo,int *n,int *nrhs,double *a,int *lda,int *ipiv,double *b,int *ldb,double *work,int *lwork,int *info);
void    dsysv(char *uplo,int *n,int *nrhs,double *a,int *lda,int *ipiv,double *b,int *ldb,double *work,int *lwork,int *info);
void    DSYSVX(char *fact,char *uplo,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *lwork,int *iwork,int *info);
void    dsysvx(char *fact,char *uplo,int *n,int *nrhs,double *a,int *lda,double *af,int *ldaf,int *ipiv,double *b,int *ldb,double *x,int *ldx,double *rcond,double *ferr,double *berr,double *work,int *lwork,int *iwork,int *info);
void    DSYTD2(char *uplo,int *n,double *a,int *lda,double *d,double *e,double *tau,int *info);
void    dsytd2(char *uplo,int *n,double *a,int *lda,double *d,double *e,double *tau,int *info);
void    DSYTF2(char *uplo,int *n,double *a,int *lda,int *ipiv,int *info);
void    dsytf2(char *uplo,int *n,double *a,int *lda,int *ipiv,int *info);
void    DSYTRD(char *uplo,int *n,double *a,int *lda,double *d,double *e,double *tau,double *work,int *lwork,int *info);
void    dsytrd(char *uplo,int *n,double *a,int *lda,double *d,double *e,double *tau,double *work,int *lwork,int *info);
void    DSYTRF(char *uplo,int *n,double *a,int *lda,int *ipiv,double *work,int *lwork,int *info);
void    dsytrf(char *uplo,int *n,double *a,int *lda,int *ipiv,double *work,int *lwork,int *info);
void    DSYTRI(char *uplo,int *n,double *a,int *lda,int *ipiv,double *work,int *info);
void    dsytri(char *uplo,int *n,double *a,int *lda,int *ipiv,double *work,int *info);
void    DSYTRS(char *uplo,int *n,int *nrhs,double *a,int *lda,int *ipiv,double *b,int *ldb,int *info);
void    dsytrs(char *uplo,int *n,int *nrhs,double *a,int *lda,int *ipiv,double *b,int *ldb,int *info);
void    DTBCON(char *norm,char *uplo,char *diag,int *n,int *kd,double *ab,int *ldab,double *rcond,double *work,int *iwork,int *info);
void    dtbcon(char *norm,char *uplo,char *diag,int *n,int *kd,double *ab,int *ldab,double *rcond,double *work,int *iwork,int *info);
void    DTBRFS(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dtbrfs(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DTBTRS(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *b,int *ldb,int *info);
void    dtbtrs(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs,double *ab,int *ldab,double *b,int *ldb,int *info);
void    DTGEVC(char *side,char *howmny,void *select,int *n,double *a,int *lda,double *b,int *ldb,double *vl,int *ldvl,double *vr,int *ldvr,int *mm,int *m,double *work,int *info);
void    dtgevc(char *side,char *howmny,void *select,int *n,double *a,int *lda,double *b,int *ldb,double *vl,int *ldvl,double *vr,int *ldvr,int *mm,int *m,double *work,int *info);
void    DTGEX2(void *wantq,void *wantz,int *n,double *a,int *lda,double *b,int *ldb,double *q,int *ldq,double *z,int *ldz,int *j1,int *n1,int *n2,double *work,int *lwork,int *info);
void    dtgex2(void *wantq,void *wantz,int *n,double *a,int *lda,double *b,int *ldb,double *q,int *ldq,double *z,int *ldz,int *j1,int *n1,int *n2,double *work,int *lwork,int *info);
void    DTGEXC(void *wantq,void *wantz,int *n,double *a,int *lda,double *b,int *ldb,double *q,int *ldq,double *z,int *ldz,int *ifst,int *ilst,double *work,int *lwork,int *info);
void    dtgexc(void *wantq,void *wantz,int *n,double *a,int *lda,double *b,int *ldb,double *q,int *ldq,double *z,int *ldz,int *ifst,int *ilst,double *work,int *lwork,int *info);
void    DTGSEN(int *ijob,void *wantq,void *wantz,void *select,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *q,int *ldq,double *z,int *ldz,int *m,double *pl,double *pr,double *dif,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dtgsen(int *ijob,void *wantq,void *wantz,void *select,int *n,double *a,int *lda,double *b,int *ldb,double *alphar,double *alphai,double *beta,double *q,int *ldq,double *z,int *ldz,int *m,double *pl,double *pr,double *dif,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DTGSJA(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,int *k,int *l,double *a,int *lda,double *b,int *ldb,double *tola,double *tolb,double *alpha,double *beta,double *u,int *ldu,double *v,int *ldv,double *q,int *ldq,double *work,int *ncycle,int *info);
void    dtgsja(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,int *k,int *l,double *a,int *lda,double *b,int *ldb,double *tola,double *tolb,double *alpha,double *beta,double *u,int *ldu,double *v,int *ldv,double *q,int *ldq,double *work,int *ncycle,int *info);
void    DTGSNA(char *job,char *howmny,void *select,int *n,double *a,int *lda,double *b,int *ldb,double *vl,int *ldvl,double *vr,int *ldvr,double *s,double *dif,int *mm,int *m,double *work,int *lwork,int *iwork,int *info);
void    dtgsna(char *job,char *howmny,void *select,int *n,double *a,int *lda,double *b,int *ldb,double *vl,int *ldvl,double *vr,int *ldvr,double *s,double *dif,int *mm,int *m,double *work,int *lwork,int *iwork,int *info);
void    DTGSY2(char *trans,int *ijob,int *m,int *n,double *a,int *lda,double *b,int *ldb,double *c,int *ldc,double *d,int *ldd,double *e,int *lde,double *f,int *ldf,double *scale,double *rdsum,double *rdscal,int *iwork,int *pq,int *info);
void    dtgsy2(char *trans,int *ijob,int *m,int *n,double *a,int *lda,double *b,int *ldb,double *c,int *ldc,double *d,int *ldd,double *e,int *lde,double *f,int *ldf,double *scale,double *rdsum,double *rdscal,int *iwork,int *pq,int *info);
void    DTGSYL(char *trans,int *ijob,int *m,int *n,double *a,int *lda,double *b,int *ldb,double *c,int *ldc,double *d,int *ldd,double *e,int *lde,double *f,int *ldf,double *scale,double *dif,double *work,int *lwork,int *iwork,int *info);
void    dtgsyl(char *trans,int *ijob,int *m,int *n,double *a,int *lda,double *b,int *ldb,double *c,int *ldc,double *d,int *ldd,double *e,int *lde,double *f,int *ldf,double *scale,double *dif,double *work,int *lwork,int *iwork,int *info);
void    DTPCON(char *norm,char *uplo,char *diag,int *n,double *ap,double *rcond,double *work,int *iwork,int *info);
void    dtpcon(char *norm,char *uplo,char *diag,int *n,double *ap,double *rcond,double *work,int *iwork,int *info);
void    DTPRFS(char *uplo,char *trans,char *diag,int *n,int *nrhs,double *ap,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dtprfs(char *uplo,char *trans,char *diag,int *n,int *nrhs,double *ap,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DTPTRI(char *uplo,char *diag,int *n,double *ap,int *info);
void    dtptri(char *uplo,char *diag,int *n,double *ap,int *info);
void    DTPTRS(char *uplo,char *trans,char *diag,int *n,int *nrhs,double *ap,double *b,int *ldb,int *info);
void    dtptrs(char *uplo,char *trans,char *diag,int *n,int *nrhs,double *ap,double *b,int *ldb,int *info);
void    DTRCON(char *norm,char *uplo,char *diag,int *n,double *a,int *lda,double *rcond,double *work,int *iwork,int *info);
void    dtrcon(char *norm,char *uplo,char *diag,int *n,double *a,int *lda,double *rcond,double *work,int *iwork,int *info);
void    DTREVC(char *side,char *howmny,void *select,int *n,double *t,int *ldt,double *vl,int *ldvl,double *vr,int *ldvr,int *mm,int *m,double *work,int *info);
void    dtrevc(char *side,char *howmny,void *select,int *n,double *t,int *ldt,double *vl,int *ldvl,double *vr,int *ldvr,int *mm,int *m,double *work,int *info);
void    DTREXC(char *compq,int *n,double *t,int *ldt,double *q,int *ldq,int *ifst,int *ilst,double *work,int *info);
void    dtrexc(char *compq,int *n,double *t,int *ldt,double *q,int *ldq,int *ifst,int *ilst,double *work,int *info);
void    DTRRFS(char *uplo,char *trans,char *diag,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    dtrrfs(char *uplo,char *trans,char *diag,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,double *x,int *ldx,double *ferr,double *berr,double *work,int *iwork,int *info);
void    DTRSEN(char *job,char *compq,void *select,int *n,double *t,int *ldt,double *q,int *ldq,double *wr,double *wi,int *m,double *s,double *sep,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    dtrsen(char *job,char *compq,void *select,int *n,double *t,int *ldt,double *q,int *ldq,double *wr,double *wi,int *m,double *s,double *sep,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    DTRSNA(char *job,char *howmny,void *select,int *n,double *t,int *ldt,double *vl,int *ldvl,double *vr,int *ldvr,double *s,double *sep,int *mm,int *m,double *work,int *ldwork,int *iwork,int *info);
void    dtrsna(char *job,char *howmny,void *select,int *n,double *t,int *ldt,double *vl,int *ldvl,double *vr,int *ldvr,double *s,double *sep,int *mm,int *m,double *work,int *ldwork,int *iwork,int *info);
void    DTRSYL(char *trana,char *tranb,int *isgn,int *m,int *n,double *a,int *lda,double *b,int *ldb,double *c,int *ldc,double *scale,int *info);
void    dtrsyl(char *trana,char *tranb,int *isgn,int *m,int *n,double *a,int *lda,double *b,int *ldb,double *c,int *ldc,double *scale,int *info);
void    DTRTI2(char *uplo,char *diag,int *n,double *a,int *lda,int *info);
void    dtrti2(char *uplo,char *diag,int *n,double *a,int *lda,int *info);
void    DTRTRI(char *uplo,char *diag,int *n,double *a,int *lda,int *info);
void    dtrtri(char *uplo,char *diag,int *n,double *a,int *lda,int *info);
void    DTRTRS(char *uplo,char *trans,char *diag,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *info);
void    dtrtrs(char *uplo,char *trans,char *diag,int *n,int *nrhs,double *a,int *lda,double *b,int *ldb,int *info);
void    DTZRQF(int *m,int *n,double *a,int *lda,double *tau,int *info);
void    dtzrqf(int *m,int *n,double *a,int *lda,double *tau,int *info);
void    DTZRZF(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
void    dtzrzf(int *m,int *n,double *a,int *lda,double *tau,double *work,int *lwork,int *info);
double  DZSUM1(int *n, MKL_Complex16 *cx,int *incx);
double  dzsum1(int *n, MKL_Complex16 *cx,int *incx);
int     IZMAX1(int *n, MKL_Complex16 *cx,int *incx);
int     izmax1(int *n, MKL_Complex16 *cx,int *incx);
void    ZBDSQR(char *uplo,int *n,int *ncvt,int *nru,int *ncc,double *d,double *e, MKL_Complex16 *vt,int *ldvt, MKL_Complex16 *u,int *ldu, MKL_Complex16 *c,int *ldc,double *rwork,int *info);
void    zbdsqr(char *uplo,int *n,int *ncvt,int *nru,int *ncc,double *d,double *e, MKL_Complex16 *vt,int *ldvt, MKL_Complex16 *u,int *ldu, MKL_Complex16 *c,int *ldc,double *rwork,int *info);
void    ZDRSCL(int *n,double *sa, MKL_Complex16 *sx,int *incx);
void    zdrscl(int *n,double *sa, MKL_Complex16 *sx,int *incx);
void    ZGBBRD(char *vect,int *m,int *n,int *ncc,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,double *d,double *e, MKL_Complex16 *q,int *ldq, MKL_Complex16 *pt,int *ldpt, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,double *rwork,int *info);
void    zgbbrd(char *vect,int *m,int *n,int *ncc,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,double *d,double *e, MKL_Complex16 *q,int *ldq, MKL_Complex16 *pt,int *ldpt, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,double *rwork,int *info);
void    ZGBCON(char *norm,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    zgbcon(char *norm,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ZGBEQU(int *m,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,double *r,double *c,double *rowcnd,double *colcnd,double *amax,int *info);
void    zgbequ(int *m,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,double *r,double *c,double *rowcnd,double *colcnd,double *amax,int *info);
void    ZGBRFS(char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *afb,int *ldafb,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zgbrfs(char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *afb,int *ldafb,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZGBSV(int *n,int *kl,int *ku,int *nrhs, MKL_Complex16 *ab,int *ldab,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zgbsv(int *n,int *kl,int *ku,int *nrhs, MKL_Complex16 *ab,int *ldab,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZGBSVX(char *fact,char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *afb,int *ldafb,int *ipiv,char *equed,double *r,double *c, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zgbsvx(char *fact,char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *afb,int *ldafb,int *ipiv,char *equed,double *r,double *c, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZGBTF2(int *m,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,int *ipiv,int *info);
void    zgbtf2(int *m,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,int *ipiv,int *info);
void    ZGBTRF(int *m,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,int *ipiv,int *info);
void    zgbtrf(int *m,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,int *ipiv,int *info);
void    ZGBTRS(char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex16 *ab,int *ldab,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zgbtrs(char *trans,int *n,int *kl,int *ku,int *nrhs, MKL_Complex16 *ab,int *ldab,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZGEBAK(char *job,char *side,int *n,int *ilo,int *ihi,double *scale,int *m, MKL_Complex16 *v,int *ldv,int *info);
void    zgebak(char *job,char *side,int *n,int *ilo,int *ihi,double *scale,int *m, MKL_Complex16 *v,int *ldv,int *info);
void    ZGEBAL(char *job,int *n, MKL_Complex16 *a,int *lda,int *ilo,int *ihi,double *scale,int *info);
void    zgebal(char *job,int *n, MKL_Complex16 *a,int *lda,int *ilo,int *ihi,double *scale,int *info);
void    ZGEBD2(int *m,int *n, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tauq, MKL_Complex16 *taup, MKL_Complex16 *work,int *info);
void    zgebd2(int *m,int *n, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tauq, MKL_Complex16 *taup, MKL_Complex16 *work,int *info);
void    ZGEBRD(int *m,int *n, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tauq, MKL_Complex16 *taup, MKL_Complex16 *work,int *lwork,int *info);
void    zgebrd(int *m,int *n, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tauq, MKL_Complex16 *taup, MKL_Complex16 *work,int *lwork,int *info);
void    ZGECON(char *norm,int *n, MKL_Complex16 *a,int *lda,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    zgecon(char *norm,int *n, MKL_Complex16 *a,int *lda,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ZGEEQU(int *m,int *n, MKL_Complex16 *a,int *lda,double *r,double *c,double *rowcnd,double *colcnd,double *amax,int *info);
void    zgeequ(int *m,int *n, MKL_Complex16 *a,int *lda,double *r,double *c,double *rowcnd,double *colcnd,double *amax,int *info);
void    ZGEES(char *jobvs,char *sort,void *select,int *n, MKL_Complex16 *a,int *lda,int *sdim, MKL_Complex16 *w, MKL_Complex16 *vs,int *ldvs, MKL_Complex16 *work,int *lwork,double *rwork,void *bwork,int *info);
void    zgees(char *jobvs,char *sort,void *select,int *n, MKL_Complex16 *a,int *lda,int *sdim, MKL_Complex16 *w, MKL_Complex16 *vs,int *ldvs, MKL_Complex16 *work,int *lwork,double *rwork,void *bwork,int *info);
void    ZGEESX(char *jobvs,char *sort,void *select,char *sense,int *n, MKL_Complex16 *a,int *lda,int *sdim, MKL_Complex16 *w, MKL_Complex16 *vs,int *ldvs,double *rconde,double *rcondv, MKL_Complex16 *work,int *lwork,double *rwork,void *bwork,int *info);
void    zgeesx(char *jobvs,char *sort,void *select,char *sense,int *n, MKL_Complex16 *a,int *lda,int *sdim, MKL_Complex16 *w, MKL_Complex16 *vs,int *ldvs,double *rconde,double *rcondv, MKL_Complex16 *work,int *lwork,double *rwork,void *bwork,int *info);
void    ZGEEV(char *jobvl,char *jobvr,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *w, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zgeev(char *jobvl,char *jobvr,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *w, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZGEEVX(char *balanc,char *jobvl,char *jobvr,char *sense,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *w, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *ilo,int *ihi,double *scale,double *abnrm,double *rconde,double *rcondv, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zgeevx(char *balanc,char *jobvl,char *jobvr,char *sense,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *w, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *ilo,int *ihi,double *scale,double *abnrm,double *rconde,double *rcondv, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZGEGS(char *jobvsl,char *jobvsr,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vsl,int *ldvsl, MKL_Complex16 *vsr,int *ldvsr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zgegs(char *jobvsl,char *jobvsr,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vsl,int *ldvsl, MKL_Complex16 *vsr,int *ldvsr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZGEGV(char *jobvl,char *jobvr,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zgegv(char *jobvl,char *jobvr,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZGEHD2(int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zgehd2(int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZGEHRD(int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zgehrd(int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZGELQ2(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zgelq2(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZGELQF(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zgelqf(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZGELS(char *trans,int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *work,int *lwork,int *info);
void    zgels(char *trans,int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *work,int *lwork,int *info);
void    ZGELSD(int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *s,double *rcond,int *rank, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *info);
void    zgelsd(int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *s,double *rcond,int *rank, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *info);
void    ZGELSS(int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *s,double *rcond,int *rank, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zgelss(int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *s,double *rcond,int *rank, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZGELSX(int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *jpvt,double *rcond,int *rank, MKL_Complex16 *work,double *rwork,int *info);
void    zgelsx(int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *jpvt,double *rcond,int *rank, MKL_Complex16 *work,double *rwork,int *info);
void    ZGELSY(int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *jpvt,double *rcond,int *rank, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zgelsy(int *m,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *jpvt,double *rcond,int *rank, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZGEQL2(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zgeql2(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZGEQLF(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zgeqlf(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZGEQP3(int *m,int *n, MKL_Complex16 *a,int *lda,int *jpvt, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zgeqp3(int *m,int *n, MKL_Complex16 *a,int *lda,int *jpvt, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZGEQPF(int *m,int *n, MKL_Complex16 *a,int *lda,int *jpvt, MKL_Complex16 *tau, MKL_Complex16 *work,double *rwork,int *info);
void    zgeqpf(int *m,int *n, MKL_Complex16 *a,int *lda,int *jpvt, MKL_Complex16 *tau, MKL_Complex16 *work,double *rwork,int *info);
void    ZGEQR2(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zgeqr2(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZGEQRF(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zgeqrf(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZGERFS(char *trans,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zgerfs(char *trans,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZGERQ2(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zgerq2(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZGERQF(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zgerqf(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZGESC2(int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *rhs,int *ipiv,int *jpiv,double *scale);
void    zgesc2(int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *rhs,int *ipiv,int *jpiv,double *scale);
void    ZGESDD(char *jobz,int *m,int *n, MKL_Complex16 *a,int *lda,double *s, MKL_Complex16 *u,int *ldu, MKL_Complex16 *vt,int *ldvt, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *info);
void    zgesdd(char *jobz,int *m,int *n, MKL_Complex16 *a,int *lda,double *s, MKL_Complex16 *u,int *ldu, MKL_Complex16 *vt,int *ldvt, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *info);
void    ZGESV(int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zgesv(int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZGESVD(char *jobu,char *jobvt,int *m,int *n, MKL_Complex16 *a,int *lda,double *s, MKL_Complex16 *u,int *ldu, MKL_Complex16 *vt,int *ldvt, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zgesvd(char *jobu,char *jobvt,int *m,int *n, MKL_Complex16 *a,int *lda,double *s, MKL_Complex16 *u,int *ldu, MKL_Complex16 *vt,int *ldvt, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZGESVX(char *fact,char *trans,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv,char *equed,double *r,double *c, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zgesvx(char *fact,char *trans,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv,char *equed,double *r,double *c, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZGETC2(int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *jpiv,int *info);
void    zgetc2(int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *jpiv,int *info);
void    ZGETF2(int *m,int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *info);
void    zgetf2(int *m,int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *info);
void    ZGETRF(int *m,int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *info);
void    zgetrf(int *m,int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *info);
void    ZGETRI(int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *lwork,int *info);
void    zgetri(int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *lwork,int *info);
void    ZGETRS(char *trans,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zgetrs(char *trans,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZGGBAK(char *job,char *side,int *n,int *ilo,int *ihi,double *lscale,double *rscale,int *m, MKL_Complex16 *v,int *ldv,int *info);
void    zggbak(char *job,char *side,int *n,int *ilo,int *ihi,double *lscale,double *rscale,int *m, MKL_Complex16 *v,int *ldv,int *info);
void    ZGGBAL(char *job,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *ilo,int *ihi,double *lscale,double *rscale,double *work,int *info);
void    zggbal(char *job,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *ilo,int *ihi,double *lscale,double *rscale,double *work,int *info);
void    ZGGES(char *jobvsl,char *jobvsr,char *sort,void *delctg,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *sdim, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vsl,int *ldvsl, MKL_Complex16 *vsr,int *ldvsr, MKL_Complex16 *work,int *lwork,double *rwork,void *bwork,int *info);
void    zgges(char *jobvsl,char *jobvsr,char *sort,void *delctg,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *sdim, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vsl,int *ldvsl, MKL_Complex16 *vsr,int *ldvsr, MKL_Complex16 *work,int *lwork,double *rwork,void *bwork,int *info);
void    ZGGESX(char *jobvsl,char *jobvsr,char *sort,void *delctg,char *sense,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *sdim, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vsl,int *ldvsl, MKL_Complex16 *vsr,int *ldvsr,double *rconde,double *rcondv, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *liwork,void *bwork,int *info);
void    zggesx(char *jobvsl,char *jobvsr,char *sort,void *delctg,char *sense,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *sdim, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vsl,int *ldvsl, MKL_Complex16 *vsr,int *ldvsr,double *rconde,double *rcondv, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *liwork,void *bwork,int *info);
void    ZGGEV(char *jobvl,char *jobvr,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zggev(char *jobvl,char *jobvr,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZGGEVX(char *balanc,char *jobvl,char *jobvr,char *sense,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *ilo,int *ihi,double *lscale,double *rscale,double *abnrm,double *bbnrm,double *rconde,double *rcondv, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,void *bwork,int *info);
void    zggevx(char *balanc,char *jobvl,char *jobvr,char *sense,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *ilo,int *ihi,double *lscale,double *rscale,double *abnrm,double *bbnrm,double *rconde,double *rcondv, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,void *bwork,int *info);
void    ZGGGLM(int *n,int *m,int *p, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *d, MKL_Complex16 *x, MKL_Complex16 *y, MKL_Complex16 *work,int *lwork,int *info);
void    zggglm(int *n,int *m,int *p, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *d, MKL_Complex16 *x, MKL_Complex16 *y, MKL_Complex16 *work,int *lwork,int *info);
void    ZGGHRD(char *compq,char *compz,int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz,int *info);
void    zgghrd(char *compq,char *compz,int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz,int *info);
void    ZGGLSE(int *m,int *n,int *p, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c, MKL_Complex16 *d, MKL_Complex16 *x, MKL_Complex16 *work,int *lwork,int *info);
void    zgglse(int *m,int *n,int *p, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c, MKL_Complex16 *d, MKL_Complex16 *x, MKL_Complex16 *work,int *lwork,int *info);
void    ZGGQRF(int *n,int *m,int *p, MKL_Complex16 *a,int *lda, MKL_Complex16 *taua, MKL_Complex16 *b,int *ldb, MKL_Complex16 *taub, MKL_Complex16 *work,int *lwork,int *info);
void    zggqrf(int *n,int *m,int *p, MKL_Complex16 *a,int *lda, MKL_Complex16 *taua, MKL_Complex16 *b,int *ldb, MKL_Complex16 *taub, MKL_Complex16 *work,int *lwork,int *info);
void    ZGGRQF(int *m,int *p,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *taua, MKL_Complex16 *b,int *ldb, MKL_Complex16 *taub, MKL_Complex16 *work,int *lwork,int *info);
void    zggrqf(int *m,int *p,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *taua, MKL_Complex16 *b,int *ldb, MKL_Complex16 *taub, MKL_Complex16 *work,int *lwork,int *info);
void    ZGGSVD(char *jobu,char *jobv,char *jobq,int *m,int *n,int *p,int *k,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *alpha,double *beta, MKL_Complex16 *u,int *ldu, MKL_Complex16 *v,int *ldv, MKL_Complex16 *q,int *ldq, MKL_Complex16 *work,double *rwork,int *iwork,int *info);
void    zggsvd(char *jobu,char *jobv,char *jobq,int *m,int *n,int *p,int *k,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *alpha,double *beta, MKL_Complex16 *u,int *ldu, MKL_Complex16 *v,int *ldv, MKL_Complex16 *q,int *ldq, MKL_Complex16 *work,double *rwork,int *iwork,int *info);
void    ZGGSVP(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *tola,double *tolb,int *k,int *l, MKL_Complex16 *u,int *ldu, MKL_Complex16 *v,int *ldv, MKL_Complex16 *q,int *ldq,int *iwork,double *rwork, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zggsvp(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *tola,double *tolb,int *k,int *l, MKL_Complex16 *u,int *ldu, MKL_Complex16 *v,int *ldv, MKL_Complex16 *q,int *ldq,int *iwork,double *rwork, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZGTCON(char *norm,int *n, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *du2,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    zgtcon(char *norm,int *n, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *du2,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    ZGTRFS(char *trans,int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *dlf, MKL_Complex16 *df, MKL_Complex16 *duf, MKL_Complex16 *du2,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zgtrfs(char *trans,int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *dlf, MKL_Complex16 *df, MKL_Complex16 *duf, MKL_Complex16 *du2,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZGTSV(int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *b,int *ldb,int *info);
void    zgtsv(int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *b,int *ldb,int *info);
void    ZGTSVX(char *fact,char *trans,int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *dlf, MKL_Complex16 *df, MKL_Complex16 *duf, MKL_Complex16 *du2,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zgtsvx(char *fact,char *trans,int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *dlf, MKL_Complex16 *df, MKL_Complex16 *duf, MKL_Complex16 *du2,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZGTTRF(int *n, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *du2,int *ipiv,int *info);
void    zgttrf(int *n, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *du2,int *ipiv,int *info);
void    ZGTTRS(char *trans,int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *du2,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zgttrs(char *trans,int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *du2,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZGTTS2(int *itrans,int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *du2,int *ipiv, MKL_Complex16 *b,int *ldb);
void    zgtts2(int *itrans,int *n,int *nrhs, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *du2,int *ipiv, MKL_Complex16 *b,int *ldb);
void    ZHBEV(char *jobz,char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *info);
void    zhbev(char *jobz,char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *info);
void    ZHBEVD(char *jobz,char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    zhbevd(char *jobz,char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    ZHBEVX(char *jobz,char *range,char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *q,int *ldq,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *iwork,int *ifail,int *info);
void    zhbevx(char *jobz,char *range,char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *q,int *ldq,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *iwork,int *ifail,int *info);
void    ZHBGST(char *vect,char *uplo,int *n,int *ka,int *kb, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *bb,int *ldbb, MKL_Complex16 *x,int *ldx, MKL_Complex16 *work,double *rwork,int *info);
void    zhbgst(char *vect,char *uplo,int *n,int *ka,int *kb, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *bb,int *ldbb, MKL_Complex16 *x,int *ldx, MKL_Complex16 *work,double *rwork,int *info);
void    ZHBGV(char *jobz,char *uplo,int *n,int *ka,int *kb, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *bb,int *ldbb,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *info);
void    zhbgv(char *jobz,char *uplo,int *n,int *ka,int *kb, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *bb,int *ldbb,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *info);
void    ZHBGVD(char *jobz,char *uplo,int *n,int *ka,int *kb, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *bb,int *ldbb,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    zhbgvd(char *jobz,char *uplo,int *n,int *ka,int *kb, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *bb,int *ldbb,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    ZHBGVX(char *jobz,char *range,char *uplo,int *n,int *ka,int *kb, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *bb,int *ldbb, MKL_Complex16 *q,int *ldq,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *iwork,int *ifail,int *info);
void    zhbgvx(char *jobz,char *range,char *uplo,int *n,int *ka,int *kb, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *bb,int *ldbb, MKL_Complex16 *q,int *ldq,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *iwork,int *ifail,int *info);
void    ZHBTRD(char *vect,char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *d,double *e, MKL_Complex16 *q,int *ldq, MKL_Complex16 *work,int *info);
void    zhbtrd(char *vect,char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *d,double *e, MKL_Complex16 *q,int *ldq, MKL_Complex16 *work,int *info);
void    ZHECON(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    zhecon(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    ZHEEV(char *jobz,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *w, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zheev(char *jobz,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *w, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZHEEVD(char *jobz,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *w, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    zheevd(char *jobz,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *w, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    ZHEEVR(char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz,int *isuppz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    zheevr(char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz,int *isuppz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    ZHEEVX(char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *ifail,int *info);
void    zheevx(char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *ifail,int *info);
void    ZHEGS2(int *itype,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    zhegs2(int *itype,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    ZHEGST(int *itype,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    zhegst(int *itype,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    ZHEGV(int *itype,char *jobz,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *w, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zhegv(int *itype,char *jobz,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *w, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZHEGVD(int *itype,char *jobz,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *w, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    zhegvd(int *itype,char *jobz,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *w, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    ZHEGVX(int *itype,char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *ifail,int *info);
void    zhegvx(int *itype,char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *iwork,int *ifail,int *info);
void    ZHERFS(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zherfs(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZHESV(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *work,int *lwork,int *info);
void    zhesv(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *work,int *lwork,int *info);
void    ZHESVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zhesvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZHETD2(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tau,int *info);
void    zhetd2(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tau,int *info);
void    ZHETF2(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *info);
void    zhetf2(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *info);
void    ZHETRD(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zhetrd(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZHETRF(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *lwork,int *info);
void    zhetrf(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *lwork,int *info);
void    ZHETRI(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *info);
void    zhetri(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *info);
void    ZHETRS(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zhetrs(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZHGEQZ(char *job,char *compq,char *compz,int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zhgeqz(char *job,char *compq,char *compz,int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZHPCON(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    zhpcon(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    ZHPEV(char *jobz,char *uplo,int *n, MKL_Complex16 *ap,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *info);
void    zhpev(char *jobz,char *uplo,int *n, MKL_Complex16 *ap,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *info);
void    ZHPEVD(char *jobz,char *uplo,int *n, MKL_Complex16 *ap,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    zhpevd(char *jobz,char *uplo,int *n, MKL_Complex16 *ap,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    ZHPEVX(char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *ap,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *iwork,int *ifail,int *info);
void    zhpevx(char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *ap,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *iwork,int *ifail,int *info);
void    ZHPGST(int *itype,char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *bp,int *info);
void    zhpgst(int *itype,char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *bp,int *info);
void    ZHPGV(int *itype,char *jobz,char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *bp,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *info);
void    zhpgv(int *itype,char *jobz,char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *bp,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *info);
void    ZHPGVD(int *itype,char *jobz,char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *bp,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    zhpgvd(int *itype,char *jobz,char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *bp,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    ZHPGVX(int *itype,char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *bp,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *iwork,int *ifail,int *info);
void    zhpgvx(int *itype,char *jobz,char *range,char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *bp,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,double *rwork,int *iwork,int *ifail,int *info);
void    ZHPRFS(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zhprfs(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZHPSV(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zhpsv(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZHPSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zhpsvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZHPTRD(char *uplo,int *n, MKL_Complex16 *ap,double *d,double *e, MKL_Complex16 *tau,int *info);
void    zhptrd(char *uplo,int *n, MKL_Complex16 *ap,double *d,double *e, MKL_Complex16 *tau,int *info);
void    ZHPTRF(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv,int *info);
void    zhptrf(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv,int *info);
void    ZHPTRI(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *work,int *info);
void    zhptri(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *work,int *info);
void    ZHPTRS(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zhptrs(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZHSEIN(char *side,char *eigsrc,char *initv,void *select,int *n, MKL_Complex16 *h,int *ldh, MKL_Complex16 *w, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *mm,int *m, MKL_Complex16 *work,double *rwork,int *ifaill,int *ifailr,int *info);
void    zhsein(char *side,char *eigsrc,char *initv,void *select,int *n, MKL_Complex16 *h,int *ldh, MKL_Complex16 *w, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *mm,int *m, MKL_Complex16 *work,double *rwork,int *ifaill,int *ifailr,int *info);
void    ZHSEQR(char *job,char *compz,int *n,int *ilo,int *ihi, MKL_Complex16 *h,int *ldh, MKL_Complex16 *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,int *info);
void    zhseqr(char *job,char *compz,int *n,int *ilo,int *ihi, MKL_Complex16 *h,int *ldh, MKL_Complex16 *w, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,int *info);
void    ZLABRD(int *m,int *n,int *nb, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tauq, MKL_Complex16 *taup, MKL_Complex16 *x,int *ldx, MKL_Complex16 *y,int *ldy);
void    zlabrd(int *m,int *n,int *nb, MKL_Complex16 *a,int *lda,double *d,double *e, MKL_Complex16 *tauq, MKL_Complex16 *taup, MKL_Complex16 *x,int *ldx, MKL_Complex16 *y,int *ldy);
void    ZLACGV(int *n, MKL_Complex16 *x,int *incx);
void    zlacgv(int *n, MKL_Complex16 *x,int *incx);
void    ZLACON(int *n, MKL_Complex16 *v, MKL_Complex16 *x,double *est,int *kase);
void    zlacon(int *n, MKL_Complex16 *v, MKL_Complex16 *x,double *est,int *kase);
void    ZLACP2(char *uplo,int *m,int *n,double *a,int *lda, MKL_Complex16 *b,int *ldb);
void    zlacp2(char *uplo,int *m,int *n,double *a,int *lda, MKL_Complex16 *b,int *ldb);
void    ZLACPY(char *uplo,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb);
void    zlacpy(char *uplo,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb);
void    ZLACRM(int *m,int *n, MKL_Complex16 *a,int *lda,double *b,int *ldb, MKL_Complex16 *c,int *ldc,double *rwork);
void    zlacrm(int *m,int *n, MKL_Complex16 *a,int *lda,double *b,int *ldb, MKL_Complex16 *c,int *ldc,double *rwork);
void    ZLACRT(int *n, MKL_Complex16 *cx,int *incx, MKL_Complex16 *cy,int *incy, MKL_Complex16 *c, MKL_Complex16 *s);
void    zlacrt(int *n, MKL_Complex16 *cx,int *incx, MKL_Complex16 *cy,int *incy, MKL_Complex16 *c, MKL_Complex16 *s);
void    ZLADIV( MKL_Complex16 *pres, MKL_Complex16 *x, MKL_Complex16 *y);
void    zladiv( MKL_Complex16 *pres, MKL_Complex16 *x, MKL_Complex16 *y);
void    ZLAED0(int *qsiz,int *n,double *d,double *e, MKL_Complex16 *q,int *ldq, MKL_Complex16 *qstore,int *ldqs,double *rwork,int *iwork,int *info);
void    zlaed0(int *qsiz,int *n,double *d,double *e, MKL_Complex16 *q,int *ldq, MKL_Complex16 *qstore,int *ldqs,double *rwork,int *iwork,int *info);
void    ZLAED7(int *n,int *cutpnt,int *qsiz,int *tlvls,int *curlvl,int *curpbm,double *d, MKL_Complex16 *q,int *ldq,double *rho,int *indxq,double *qstore,int *qptr,int *prmptr,int *perm,int *givptr,int *givcol,double *givnum, MKL_Complex16 *work,double *rwork,int *iwork,int *info);
void    zlaed7(int *n,int *cutpnt,int *qsiz,int *tlvls,int *curlvl,int *curpbm,double *d, MKL_Complex16 *q,int *ldq,double *rho,int *indxq,double *qstore,int *qptr,int *prmptr,int *perm,int *givptr,int *givcol,double *givnum, MKL_Complex16 *work,double *rwork,int *iwork,int *info);
void    ZLAED8(int *k,int *n,int *qsiz, MKL_Complex16 *q,int *ldq,double *d,double *rho,int *cutpnt,double *z,double *dlamda, MKL_Complex16 *q2,int *ldq2,double *w,int *indxp,int *indx,int *indxq,int *perm,int *givptr,int *givcol,double *givnum,int *info);
void    zlaed8(int *k,int *n,int *qsiz, MKL_Complex16 *q,int *ldq,double *d,double *rho,int *cutpnt,double *z,double *dlamda, MKL_Complex16 *q2,int *ldq2,double *w,int *indxp,int *indx,int *indxq,int *perm,int *givptr,int *givcol,double *givnum,int *info);
void    ZLAEIN(void *rightv,void *noinit,int *n, MKL_Complex16 *h,int *ldh, MKL_Complex16 *w, MKL_Complex16 *v, MKL_Complex16 *b,int *ldb,double *rwork,double *eps3,double *smlnum,int *info);
void    zlaein(void *rightv,void *noinit,int *n, MKL_Complex16 *h,int *ldh, MKL_Complex16 *w, MKL_Complex16 *v, MKL_Complex16 *b,int *ldb,double *rwork,double *eps3,double *smlnum,int *info);
void    ZLAESY( MKL_Complex16 *a, MKL_Complex16 *b, MKL_Complex16 *c, MKL_Complex16 *rt1, MKL_Complex16 *rt2, MKL_Complex16 *evscal, MKL_Complex16 *cs1, MKL_Complex16 *sn1);
void    zlaesy( MKL_Complex16 *a, MKL_Complex16 *b, MKL_Complex16 *c, MKL_Complex16 *rt1, MKL_Complex16 *rt2, MKL_Complex16 *evscal, MKL_Complex16 *cs1, MKL_Complex16 *sn1);
void    ZLAEV2( MKL_Complex16 *a, MKL_Complex16 *b, MKL_Complex16 *c,double *rt1,double *rt2,double *cs1, MKL_Complex16 *sn1);
void    zlaev2( MKL_Complex16 *a, MKL_Complex16 *b, MKL_Complex16 *c,double *rt1,double *rt2,double *cs1, MKL_Complex16 *sn1);
void    ZLAGS2(void *upper,double *a1, MKL_Complex16 *a2,double *a3,double *b1, MKL_Complex16 *b2,double *b3,double *csu, MKL_Complex16 *snu,double *csv, MKL_Complex16 *snv,double *csq, MKL_Complex16 *snq);
void    zlags2(void *upper,double *a1, MKL_Complex16 *a2,double *a3,double *b1, MKL_Complex16 *b2,double *b3,double *csu, MKL_Complex16 *snu,double *csv, MKL_Complex16 *snv,double *csq, MKL_Complex16 *snq);
void    ZLAGTM(char *trans,int *n,int *nrhs,double *alpha, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *x,int *ldx,double *beta, MKL_Complex16 *b,int *ldb);
void    zlagtm(char *trans,int *n,int *nrhs,double *alpha, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du, MKL_Complex16 *x,int *ldx,double *beta, MKL_Complex16 *b,int *ldb);
void    ZLAHEF(char *uplo,int *n,int *nb,int *kb, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *w,int *ldw,int *info);
void    zlahef(char *uplo,int *n,int *nb,int *kb, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *w,int *ldw,int *info);
void    ZLAHQR(void *wantt,void *wantz,int *n,int *ilo,int *ihi, MKL_Complex16 *h,int *ldh, MKL_Complex16 *w,int *iloz,int *ihiz, MKL_Complex16 *z,int *ldz,int *info);
void    zlahqr(void *wantt,void *wantz,int *n,int *ilo,int *ihi, MKL_Complex16 *h,int *ldh, MKL_Complex16 *w,int *iloz,int *ihiz, MKL_Complex16 *z,int *ldz,int *info);
void    ZLAHRD(int *n,int *k,int *nb, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *t,int *ldt, MKL_Complex16 *y,int *ldy);
void    zlahrd(int *n,int *k,int *nb, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *t,int *ldt, MKL_Complex16 *y,int *ldy);
void    ZLAIC1(int *job,int *j, MKL_Complex16 *x,double *sest, MKL_Complex16 *w, MKL_Complex16 *gamma,double *sestpr, MKL_Complex16 *s, MKL_Complex16 *c);
void    zlaic1(int *job,int *j, MKL_Complex16 *x,double *sest, MKL_Complex16 *w, MKL_Complex16 *gamma,double *sestpr, MKL_Complex16 *s, MKL_Complex16 *c);
void    ZLALS0(int *icompq,int *nl,int *nr,int *sqre,int *nrhs, MKL_Complex16 *b,int *ldb, MKL_Complex16 *bx,int *ldbx,int *perm,int *givptr,int *givcol,int *ldgcol,double *givnum,int *ldgnum,double *poles,double *difl,double *difr,double *z,int *k,double *c,double *s,double *rwork,int *info);
void    zlals0(int *icompq,int *nl,int *nr,int *sqre,int *nrhs, MKL_Complex16 *b,int *ldb, MKL_Complex16 *bx,int *ldbx,int *perm,int *givptr,int *givcol,int *ldgcol,double *givnum,int *ldgnum,double *poles,double *difl,double *difr,double *z,int *k,double *c,double *s,double *rwork,int *info);
void    ZLALSA(int *icompq,int *smlsiz,int *n,int *nrhs, MKL_Complex16 *b,int *ldb, MKL_Complex16 *bx,int *ldbx,double *u,int *ldu,double *vt,int *k,double *difl,double *difr,double *z,double *poles,int *givptr,int *givcol,int *ldgcol,int *perm,double *givnum,double *c,double *s,float *rwork,int *iwork,int *info);
void    zlalsa(int *icompq,int *smlsiz,int *n,int *nrhs, MKL_Complex16 *b,int *ldb, MKL_Complex16 *bx,int *ldbx,double *u,int *ldu,double *vt,int *k,double *difl,double *difr,double *z,double *poles,int *givptr,int *givcol,int *ldgcol,int *perm,double *givnum,double *c,double *s,float *rwork,int *iwork,int *info);
void    ZLALSD(char *uplo,int *smlsiz,int *n,int *nrhs,double *d,double *e, MKL_Complex16 *b,int *ldb,double *rcond,int *rank, MKL_Complex16 *work,float *rwork,int *iwork,int *info);
void    zlalsd(char *uplo,int *smlsiz,int *n,int *nrhs,double *d,double *e, MKL_Complex16 *b,int *ldb,double *rcond,int *rank, MKL_Complex16 *work,float *rwork,int *iwork,int *info);
double  ZLANGB(char *norm,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,double *work);
double  zlangb(char *norm,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,double *work);
double  ZLANGE(char *norm,int *m,int *n, MKL_Complex16 *a,int *lda,double *work);
double  zlange(char *norm,int *m,int *n, MKL_Complex16 *a,int *lda,double *work);
double  ZLANGT(char *norm,int *n, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du);
double  zlangt(char *norm,int *n, MKL_Complex16 *dl, MKL_Complex16 *d, MKL_Complex16 *du);
double  ZLANHB(char *norm,char *uplo,int *n,int *k, MKL_Complex16 *ab,int *ldab,double *work);
double  zlanhb(char *norm,char *uplo,int *n,int *k, MKL_Complex16 *ab,int *ldab,double *work);
double  ZLANHE(char *norm,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *work);
double  zlanhe(char *norm,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *work);
double  ZLANHP(char *norm,char *uplo,int *n, MKL_Complex16 *ap,double *work);
double  zlanhp(char *norm,char *uplo,int *n, MKL_Complex16 *ap,double *work);
double  ZLANHS(char *norm,int *n, MKL_Complex16 *a,int *lda,double *work);
double  zlanhs(char *norm,int *n, MKL_Complex16 *a,int *lda,double *work);
double  ZLANHT(char *norm,int *n,double *d, MKL_Complex16 *e);
double  zlanht(char *norm,int *n,double *d, MKL_Complex16 *e);
double  ZLANSB(char *norm,char *uplo,int *n,int *k, MKL_Complex16 *ab,int *ldab,double *work);
double  zlansb(char *norm,char *uplo,int *n,int *k, MKL_Complex16 *ab,int *ldab,double *work);
double  ZLANSP(char *norm,char *uplo,int *n, MKL_Complex16 *ap,double *work);
double  zlansp(char *norm,char *uplo,int *n, MKL_Complex16 *ap,double *work);
double  ZLANSY(char *norm,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *work);
double  zlansy(char *norm,char *uplo,int *n, MKL_Complex16 *a,int *lda,double *work);
double  ZLANTB(char *norm,char *uplo,char *diag,int *n,int *k, MKL_Complex16 *ab,int *ldab,double *work);
double  zlantb(char *norm,char *uplo,char *diag,int *n,int *k, MKL_Complex16 *ab,int *ldab,double *work);
double  ZLANTP(char *norm,char *uplo,char *diag,int *n, MKL_Complex16 *ap,double *work);
double  zlantp(char *norm,char *uplo,char *diag,int *n, MKL_Complex16 *ap,double *work);
double  ZLANTR(char *norm,char *uplo,char *diag,int *m,int *n, MKL_Complex16 *a,int *lda,double *work);
double  zlantr(char *norm,char *uplo,char *diag,int *m,int *n, MKL_Complex16 *a,int *lda,double *work);
void    ZLAPLL(int *n, MKL_Complex16 *x,int *incx, MKL_Complex16 *y,int *incy,double *ssmin);
void    zlapll(int *n, MKL_Complex16 *x,int *incx, MKL_Complex16 *y,int *incy,double *ssmin);
void    ZLAPMT(void *forwrd,int *m,int *n, MKL_Complex16 *x,int *ldx,int *k);
void    zlapmt(void *forwrd,int *m,int *n, MKL_Complex16 *x,int *ldx,int *k);
void    ZLAQGB(int *m,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,double *r,double *c,double *rowcnd,double *colcnd,double *amax,char *equed);
void    zlaqgb(int *m,int *n,int *kl,int *ku, MKL_Complex16 *ab,int *ldab,double *r,double *c,double *rowcnd,double *colcnd,double *amax,char *equed);
void    ZLAQGE(int *m,int *n, MKL_Complex16 *a,int *lda,double *r,double *c,double *rowcnd,double *colcnd,double *amax,char *equed);
void    zlaqge(int *m,int *n, MKL_Complex16 *a,int *lda,double *r,double *c,double *rowcnd,double *colcnd,double *amax,char *equed);
void    ZLAQHB(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *s,double *scond,double *amax,char *equed);
void    zlaqhb(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *s,double *scond,double *amax,char *equed);
void    ZLAQHE(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *s,double *scond,double *amax,char *equed);
void    zlaqhe(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *s,double *scond,double *amax,char *equed);
void    ZLAQHP(char *uplo,int *n, MKL_Complex16 *ap,double *s,double *scond,double *amax,char *equed);
void    zlaqhp(char *uplo,int *n, MKL_Complex16 *ap,double *s,double *scond,double *amax,char *equed);
void    ZLAQP2(int *m,int *n,int *offset, MKL_Complex16 *a,int *lda,int *jpvt, MKL_Complex16 *tau,double *vn1,double *vn2, MKL_Complex16 *work);
void    zlaqp2(int *m,int *n,int *offset, MKL_Complex16 *a,int *lda,int *jpvt, MKL_Complex16 *tau,double *vn1,double *vn2, MKL_Complex16 *work);
void    ZLAQPS(int *m,int *n,int *offset,int *nb,int *kb, MKL_Complex16 *a,int *lda,int *jpvt, MKL_Complex16 *tau,double *vn1,double *vn2, MKL_Complex16 *auxv, MKL_Complex16 *f,int *ldf);
void    zlaqps(int *m,int *n,int *offset,int *nb,int *kb, MKL_Complex16 *a,int *lda,int *jpvt, MKL_Complex16 *tau,double *vn1,double *vn2, MKL_Complex16 *auxv, MKL_Complex16 *f,int *ldf);
void    ZLAQSB(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *s,double *scond,double *amax,char *equed);
void    zlaqsb(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *s,double *scond,double *amax,char *equed);
void    ZLAQSP(char *uplo,int *n, MKL_Complex16 *ap,double *s,double *scond,double *amax,char *equed);
void    zlaqsp(char *uplo,int *n, MKL_Complex16 *ap,double *s,double *scond,double *amax,char *equed);
void    ZLAQSY(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *s,double *scond,double *amax,char *equed);
void    zlaqsy(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *s,double *scond,double *amax,char *equed);
void    ZLAR1V(int *n,int *b1,int *bn,double *sigma,double *d,double *l,double *ld,double *lld,double *gersch, MKL_Complex16 *z,double *ztz,double *mingma,int *r,int *isuppz,double *work);
void    zlar1v(int *n,int *b1,int *bn,double *sigma,double *d,double *l,double *ld,double *lld,double *gersch, MKL_Complex16 *z,double *ztz,double *mingma,int *r,int *isuppz,double *work);
void    ZLAR2V(int *n, MKL_Complex16 *x, MKL_Complex16 *y, MKL_Complex16 *z,int *incx,double *c, MKL_Complex16 *s,int *incc);
void    zlar2v(int *n, MKL_Complex16 *x, MKL_Complex16 *y, MKL_Complex16 *z,int *incx,double *c, MKL_Complex16 *s,int *incc);
void    ZLARCM(int *m,int *n,double *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c,int *ldc,double *rwork);
void    zlarcm(int *m,int *n,double *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c,int *ldc,double *rwork);
void    ZLARF(char *side,int *m,int *n, MKL_Complex16 *v,int *incv, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work);
void    zlarf(char *side,int *m,int *n, MKL_Complex16 *v,int *incv, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work);
void    ZLARFB(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k, MKL_Complex16 *v,int *ldv, MKL_Complex16 *t,int *ldt, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *ldwork);
void    zlarfb(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k, MKL_Complex16 *v,int *ldv, MKL_Complex16 *t,int *ldt, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *ldwork);
void    ZLARFG(int *n, MKL_Complex16 *alpha, MKL_Complex16 *x,int *incx, MKL_Complex16 *tau);
void    zlarfg(int *n, MKL_Complex16 *alpha, MKL_Complex16 *x,int *incx, MKL_Complex16 *tau);
void    ZLARFT(char *direct,char *storev,int *n,int *k, MKL_Complex16 *v,int *ldv, MKL_Complex16 *tau, MKL_Complex16 *t,int *ldt);
void    zlarft(char *direct,char *storev,int *n,int *k, MKL_Complex16 *v,int *ldv, MKL_Complex16 *tau, MKL_Complex16 *t,int *ldt);
void    ZLARFX(char *side,int *m,int *n, MKL_Complex16 *v, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work);
void    zlarfx(char *side,int *m,int *n, MKL_Complex16 *v, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work);
void    ZLARGV(int *n, MKL_Complex16 *x,int *incx, MKL_Complex16 *y,int *incy,double *c,int *incc);
void    zlargv(int *n, MKL_Complex16 *x,int *incx, MKL_Complex16 *y,int *incy,double *c,int *incc);
void    ZLARNV(int *idist,int *iseed,int *n, MKL_Complex16 *x);
void    zlarnv(int *idist,int *iseed,int *n, MKL_Complex16 *x);
void    ZLARRV(int *n,double *d,double *l,int *isplit,int *m,double *w,int *iblock,double *gersch,double *tol, MKL_Complex16 *z,int *ldz,int *isuppz,double *work,int *iwork,int *info);
void    zlarrv(int *n,double *d,double *l,int *isplit,int *m,double *w,int *iblock,double *gersch,double *tol, MKL_Complex16 *z,int *ldz,int *isuppz,double *work,int *iwork,int *info);
void    ZLARTG( MKL_Complex16 *f, MKL_Complex16 *g,double *cs, MKL_Complex16 *sn, MKL_Complex16 *r);
void    zlartg( MKL_Complex16 *f, MKL_Complex16 *g,double *cs, MKL_Complex16 *sn, MKL_Complex16 *r);
void    ZLARTV(int *n, MKL_Complex16 *x,int *incx, MKL_Complex16 *y,int *incy,double *c, MKL_Complex16 *s,int *incc);
void    zlartv(int *n, MKL_Complex16 *x,int *incx, MKL_Complex16 *y,int *incy,double *c, MKL_Complex16 *s,int *incc);
void    ZLARZ(char *side,int *m,int *n,int *l, MKL_Complex16 *v,int *incv, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work);
void    zlarz(char *side,int *m,int *n,int *l, MKL_Complex16 *v,int *incv, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work);
void    ZLARZB(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,int *l, MKL_Complex16 *v,int *ldv, MKL_Complex16 *t,int *ldt, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *ldwork);
void    zlarzb(char *side,char *trans,char *direct,char *storev,int *m,int *n,int *k,int *l, MKL_Complex16 *v,int *ldv, MKL_Complex16 *t,int *ldt, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *ldwork);
void    ZLARZT(char *direct,char *storev,int *n,int *k, MKL_Complex16 *v,int *ldv, MKL_Complex16 *tau, MKL_Complex16 *t,int *ldt);
void    zlarzt(char *direct,char *storev,int *n,int *k, MKL_Complex16 *v,int *ldv, MKL_Complex16 *tau, MKL_Complex16 *t,int *ldt);
void    ZLASCL(char *type,int *kl,int *ku,double *cfrom,double *cto,int *m,int *n, MKL_Complex16 *a,int *lda,int *info);
void    zlascl(char *type,int *kl,int *ku,double *cfrom,double *cto,int *m,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ZLASET(char *uplo,int *m,int *n, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *a,int *lda);
void    zlaset(char *uplo,int *m,int *n, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *a,int *lda);
void    ZLASR(char *side,char *pivot,char *direct,int *m,int *n,double *c,double *s, MKL_Complex16 *a,int *lda);
void    zlasr(char *side,char *pivot,char *direct,int *m,int *n,double *c,double *s, MKL_Complex16 *a,int *lda);
void    ZLASSQ(int *n, MKL_Complex16 *x,int *incx,double *scale,double *sumsq);
void    zlassq(int *n, MKL_Complex16 *x,int *incx,double *scale,double *sumsq);
void    ZLASWP(int *n, MKL_Complex16 *a,int *lda,int *k1,int *k2,int *ipiv,int *incx);
void    zlaswp(int *n, MKL_Complex16 *a,int *lda,int *k1,int *k2,int *ipiv,int *incx);
void    ZLASYF(char *uplo,int *n,int *nb,int *kb, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *w,int *ldw,int *info);
void    zlasyf(char *uplo,int *n,int *nb,int *kb, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *w,int *ldw,int *info);
void    ZLATBS(char *uplo,char *trans,char *diag,char *normin,int *n,int *kd, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *x,double *scale,double *cnorm,int *info);
void    zlatbs(char *uplo,char *trans,char *diag,char *normin,int *n,int *kd, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *x,double *scale,double *cnorm,int *info);
void    ZLATDF(int *ijob,int *n, MKL_Complex16 *z,int *ldz, MKL_Complex16 *rhs,double *rdsum,double *rdscal,int *ipiv,int *jpiv);
void    zlatdf(int *ijob,int *n, MKL_Complex16 *z,int *ldz, MKL_Complex16 *rhs,double *rdsum,double *rdscal,int *ipiv,int *jpiv);
void    ZLATPS(char *uplo,char *trans,char *diag,char *normin,int *n, MKL_Complex16 *ap, MKL_Complex16 *x,double *scale,double *cnorm,int *info);
void    zlatps(char *uplo,char *trans,char *diag,char *normin,int *n, MKL_Complex16 *ap, MKL_Complex16 *x,double *scale,double *cnorm,int *info);
void    ZLATRD(char *uplo,int *n,int *nb, MKL_Complex16 *a,int *lda,double *e, MKL_Complex16 *tau, MKL_Complex16 *w,int *ldw);
void    zlatrd(char *uplo,int *n,int *nb, MKL_Complex16 *a,int *lda,double *e, MKL_Complex16 *tau, MKL_Complex16 *w,int *ldw);
void    ZLATRS(char *uplo,char *trans,char *diag,char *normin,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *x,double *scale,double *cnorm,int *info);
void    zlatrs(char *uplo,char *trans,char *diag,char *normin,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *x,double *scale,double *cnorm,int *info);
void    ZLATRZ(int *m,int *n,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work);
void    zlatrz(int *m,int *n,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work);
void    ZLATZM(char *side,int *m,int *n, MKL_Complex16 *v,int *incv, MKL_Complex16 *tau, MKL_Complex16 *c1, MKL_Complex16 *c2,int *ldc, MKL_Complex16 *work);
void    zlatzm(char *side,int *m,int *n, MKL_Complex16 *v,int *incv, MKL_Complex16 *tau, MKL_Complex16 *c1, MKL_Complex16 *c2,int *ldc, MKL_Complex16 *work);
void    ZLAUU2(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    zlauu2(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ZLAUUM(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    zlauum(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ZPBCON(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    zpbcon(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ZPBEQU(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *s,double *scond,double *amax,int *info);
void    zpbequ(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *s,double *scond,double *amax,int *info);
void    ZPBRFS(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *afb,int *ldafb, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zpbrfs(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *afb,int *ldafb, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZPBSTF(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,int *info);
void    zpbstf(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,int *info);
void    ZPBSV(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *b,int *ldb,int *info);
void    zpbsv(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *b,int *ldb,int *info);
void    ZPBSVX(char *fact,char *uplo,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *afb,int *ldafb,char *equed,double *s, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zpbsvx(char *fact,char *uplo,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *afb,int *ldafb,char *equed,double *s, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZPBTF2(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,int *info);
void    zpbtf2(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,int *info);
void    ZPBTRF(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,int *info);
void    zpbtrf(char *uplo,int *n,int *kd, MKL_Complex16 *ab,int *ldab,int *info);
void    ZPBTRS(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *b,int *ldb,int *info);
void    zpbtrs(char *uplo,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *b,int *ldb,int *info);
void    ZPOCON(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    zpocon(char *uplo,int *n, MKL_Complex16 *a,int *lda,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ZPOEQU(int *n, MKL_Complex16 *a,int *lda,double *s,double *scond,double *amax,int *info);
void    zpoequ(int *n, MKL_Complex16 *a,int *lda,double *s,double *scond,double *amax,int *info);
void    ZPORFS(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zporfs(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZPOSV(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    zposv(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    ZPOSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,char *equed,double *s, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zposvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,char *equed,double *s, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZPOTF2(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    zpotf2(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ZPOTRF(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    zpotrf(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ZPOTRI(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    zpotri(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ZPOTRS(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    zpotrs(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    ZPPCON(char *uplo,int *n, MKL_Complex16 *ap,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    zppcon(char *uplo,int *n, MKL_Complex16 *ap,double *anorm,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ZPPEQU(char *uplo,int *n, MKL_Complex16 *ap,double *s,double *scond,double *amax,int *info);
void    zppequ(char *uplo,int *n, MKL_Complex16 *ap,double *s,double *scond,double *amax,int *info);
void    ZPPRFS(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zpprfs(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZPPSV(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *b,int *ldb,int *info);
void    zppsv(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *b,int *ldb,int *info);
void    ZPPSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,char *equed,double *s, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zppsvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,char *equed,double *s, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZPPTRF(char *uplo,int *n, MKL_Complex16 *ap,int *info);
void    zpptrf(char *uplo,int *n, MKL_Complex16 *ap,int *info);
void    ZPPTRI(char *uplo,int *n, MKL_Complex16 *ap,int *info);
void    zpptri(char *uplo,int *n, MKL_Complex16 *ap,int *info);
void    ZPPTRS(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *b,int *ldb,int *info);
void    zpptrs(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *b,int *ldb,int *info);
void    ZPTCON(int *n,double *d, MKL_Complex16 *e,double *anorm,double *rcond,double *rwork,int *info);
void    zptcon(int *n,double *d, MKL_Complex16 *e,double *anorm,double *rcond,double *rwork,int *info);
void    ZPTEQR(char *compz,int *n,double *d,double *e, MKL_Complex16 *z,int *ldz,double *work,int *info);
void    zpteqr(char *compz,int *n,double *d,double *e, MKL_Complex16 *z,int *ldz,double *work,int *info);
void    ZPTRFS(char *uplo,int *n,int *nrhs,double *d, MKL_Complex16 *e,double *df, MKL_Complex16 *ef, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zptrfs(char *uplo,int *n,int *nrhs,double *d, MKL_Complex16 *e,double *df, MKL_Complex16 *ef, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZPTSV(int *n,int *nrhs,double *d, MKL_Complex16 *e, MKL_Complex16 *b,int *ldb,int *info);
void    zptsv(int *n,int *nrhs,double *d, MKL_Complex16 *e, MKL_Complex16 *b,int *ldb,int *info);
void    ZPTSVX(char *fact,int *n,int *nrhs,double *d, MKL_Complex16 *e,double *df, MKL_Complex16 *ef, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zptsvx(char *fact,int *n,int *nrhs,double *d, MKL_Complex16 *e,double *df, MKL_Complex16 *ef, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZPTTRF(int *n,double *d, MKL_Complex16 *e,int *info);
void    zpttrf(int *n,double *d, MKL_Complex16 *e,int *info);
void    ZPTTRS(char *uplo,int *n,int *nrhs,double *d, MKL_Complex16 *e, MKL_Complex16 *b,int *ldb,int *info);
void    zpttrs(char *uplo,int *n,int *nrhs,double *d, MKL_Complex16 *e, MKL_Complex16 *b,int *ldb,int *info);
void    ZPTTS2(int *iuplo,int *n,int *nrhs,double *d, MKL_Complex16 *e, MKL_Complex16 *b,int *ldb);
void    zptts2(int *iuplo,int *n,int *nrhs,double *d, MKL_Complex16 *e, MKL_Complex16 *b,int *ldb);
void    ZROT(int *n, MKL_Complex16 *cx,int *incx, MKL_Complex16 *cy,int *incy,double *c, MKL_Complex16 *s);
void    zrot(int *n, MKL_Complex16 *cx,int *incx, MKL_Complex16 *cy,int *incy,double *c, MKL_Complex16 *s);
void    ZSPCON(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    zspcon(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    ZSPMV(char *uplo,int *n, MKL_Complex16 *alpha, MKL_Complex16 *ap, MKL_Complex16 *x,int *incx, MKL_Complex16 *beta, MKL_Complex16 *y,int *incy);
void    zspmv(char *uplo,int *n, MKL_Complex16 *alpha, MKL_Complex16 *ap, MKL_Complex16 *x,int *incx, MKL_Complex16 *beta, MKL_Complex16 *y,int *incy);
void    ZSPR(char *uplo,int *n, MKL_Complex16 *alpha, MKL_Complex16 *x,int *incx, MKL_Complex16 *ap);
void    zspr(char *uplo,int *n, MKL_Complex16 *alpha, MKL_Complex16 *x,int *incx, MKL_Complex16 *ap);
void    ZSPRFS(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zsprfs(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZSPSV(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zspsv(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZSPSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zspsvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *afp,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZSPTRF(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv,int *info);
void    zsptrf(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv,int *info);
void    ZSPTRI(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *work,int *info);
void    zsptri(char *uplo,int *n, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *work,int *info);
void    ZSPTRS(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zsptrs(char *uplo,int *n,int *nrhs, MKL_Complex16 *ap,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZSTEDC(char *compz,int *n,double *d,double *e, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    zstedc(char *compz,int *n,double *d,double *e, MKL_Complex16 *z,int *ldz, MKL_Complex16 *work,int *lwork,double *rwork,int *lrwork,int *iwork,int *liwork,int *info);
void    ZSTEGR(char *jobz,char *range,int *n,double *d,double *e,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz,int *isuppz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    zstegr(char *jobz,char *range,int *n,double *d,double *e,double *vl,double *vu,int *il,int *iu,double *abstol,int *m,double *w, MKL_Complex16 *z,int *ldz,int *isuppz,double *work,int *lwork,int *iwork,int *liwork,int *info);
void    ZSTEIN(int *n,double *d,double *e,int *m,double *w,int *iblock,int *isplit, MKL_Complex16 *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    zstein(int *n,double *d,double *e,int *m,double *w,int *iblock,int *isplit, MKL_Complex16 *z,int *ldz,double *work,int *iwork,int *ifail,int *info);
void    ZSTEQR(char *compz,int *n,double *d,double *e, MKL_Complex16 *z,int *ldz,double *work,int *info);
void    zsteqr(char *compz,int *n,double *d,double *e, MKL_Complex16 *z,int *ldz,double *work,int *info);
void    ZSYCON(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    zsycon(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv,double *anorm,double *rcond, MKL_Complex16 *work,int *info);
void    ZSYMV(char *uplo,int *n, MKL_Complex16 *alpha, MKL_Complex16 *a,int *lda, MKL_Complex16 *x,int *incx, MKL_Complex16 *beta, MKL_Complex16 *y,int *incy);
void    zsymv(char *uplo,int *n, MKL_Complex16 *alpha, MKL_Complex16 *a,int *lda, MKL_Complex16 *x,int *incx, MKL_Complex16 *beta, MKL_Complex16 *y,int *incy);
void    ZSYR(char *uplo,int *n, MKL_Complex16 *alpha, MKL_Complex16 *x,int *incx, MKL_Complex16 *a,int *lda);
void    zsyr(char *uplo,int *n, MKL_Complex16 *alpha, MKL_Complex16 *x,int *incx, MKL_Complex16 *a,int *lda);
void    ZSYRFS(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    zsyrfs(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZSYSV(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *work,int *lwork,int *info);
void    zsysv(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *work,int *lwork,int *info);
void    ZSYSVX(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    zsysvx(char *fact,char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *af,int *ldaf,int *ipiv, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *rcond,double *ferr,double *berr, MKL_Complex16 *work,int *lwork,double *rwork,int *info);
void    ZSYTF2(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *info);
void    zsytf2(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv,int *info);
void    ZSYTRF(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *lwork,int *info);
void    zsytrf(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *lwork,int *info);
void    ZSYTRI(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *info);
void    zsytri(char *uplo,int *n, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *work,int *info);
void    ZSYTRS(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    zsytrs(char *uplo,int *n,int *nrhs, MKL_Complex16 *a,int *lda,int *ipiv, MKL_Complex16 *b,int *ldb,int *info);
void    ZTBCON(char *norm,char *uplo,char *diag,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ztbcon(char *norm,char *uplo,char *diag,int *n,int *kd, MKL_Complex16 *ab,int *ldab,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ZTBRFS(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ztbrfs(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZTBTRS(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *b,int *ldb,int *info);
void    ztbtrs(char *uplo,char *trans,char *diag,int *n,int *kd,int *nrhs, MKL_Complex16 *ab,int *ldab, MKL_Complex16 *b,int *ldb,int *info);
void    ZTGEVC(char *side,char *howmny,void *select,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *mm,int *m, MKL_Complex16 *work,double *rwork,int *info);
void    ztgevc(char *side,char *howmny,void *select,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *mm,int *m, MKL_Complex16 *work,double *rwork,int *info);
void    ZTGEX2(void *wantq,void *wantz,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz,int *j1,int *info);
void    ztgex2(void *wantq,void *wantz,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz,int *j1,int *info);
void    ZTGEXC(void *wantq,void *wantz,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz,int *ifst,int *ilst,int *info);
void    ztgexc(void *wantq,void *wantz,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz,int *ifst,int *ilst,int *info);
void    ZTGSEN(int *ijob,void *wantq,void *wantz,void *select,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz,int *m,double *pl,double *pr,double *dif, MKL_Complex16 *work,int *lwork,int *iwork,int *liwork,int *info);
void    ztgsen(int *ijob,void *wantq,void *wantz,void *select,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *alpha, MKL_Complex16 *beta, MKL_Complex16 *q,int *ldq, MKL_Complex16 *z,int *ldz,int *m,double *pl,double *pr,double *dif, MKL_Complex16 *work,int *lwork,int *iwork,int *liwork,int *info);
void    ZTGSJA(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,int *k,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *tola,double *tolb,double *alpha,double *beta, MKL_Complex16 *u,int *ldu, MKL_Complex16 *v,int *ldv, MKL_Complex16 *q,int *ldq, MKL_Complex16 *work,int *ncycle,int *info);
void    ztgsja(char *jobu,char *jobv,char *jobq,int *m,int *p,int *n,int *k,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,double *tola,double *tolb,double *alpha,double *beta, MKL_Complex16 *u,int *ldu, MKL_Complex16 *v,int *ldv, MKL_Complex16 *q,int *ldq, MKL_Complex16 *work,int *ncycle,int *info);
void    ZTGSNA(char *job,char *howmny,void *select,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,double *s,double *dif,int *mm,int *m, MKL_Complex16 *work,int *lwork,int *iwork,int *info);
void    ztgsna(char *job,char *howmny,void *select,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,double *s,double *dif,int *mm,int *m, MKL_Complex16 *work,int *lwork,int *iwork,int *info);
void    ZTGSY2(char *trans,int *ijob,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c,int *ldc, MKL_Complex16 *d,int *ldd, MKL_Complex16 *e,int *lde, MKL_Complex16 *f,int *ldf,double *scale,double *rdsum,double *rdscal,int *info);
void    ztgsy2(char *trans,int *ijob,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c,int *ldc, MKL_Complex16 *d,int *ldd, MKL_Complex16 *e,int *lde, MKL_Complex16 *f,int *ldf,double *scale,double *rdsum,double *rdscal,int *info);
void    ZTGSYL(char *trans,int *ijob,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c,int *ldc, MKL_Complex16 *d,int *ldd, MKL_Complex16 *e,int *lde, MKL_Complex16 *f,int *ldf,double *scale,double *dif, MKL_Complex16 *work,int *lwork,int *iwork,int *info);
void    ztgsyl(char *trans,int *ijob,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c,int *ldc, MKL_Complex16 *d,int *ldd, MKL_Complex16 *e,int *lde, MKL_Complex16 *f,int *ldf,double *scale,double *dif, MKL_Complex16 *work,int *lwork,int *iwork,int *info);
void    ZTPCON(char *norm,char *uplo,char *diag,int *n, MKL_Complex16 *ap,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ztpcon(char *norm,char *uplo,char *diag,int *n, MKL_Complex16 *ap,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ZTPRFS(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ztprfs(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZTPTRI(char *uplo,char *diag,int *n, MKL_Complex16 *ap,int *info);
void    ztptri(char *uplo,char *diag,int *n, MKL_Complex16 *ap,int *info);
void    ZTPTRS(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *b,int *ldb,int *info);
void    ztptrs(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex16 *ap, MKL_Complex16 *b,int *ldb,int *info);
void    ZTRCON(char *norm,char *uplo,char *diag,int *n, MKL_Complex16 *a,int *lda,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ztrcon(char *norm,char *uplo,char *diag,int *n, MKL_Complex16 *a,int *lda,double *rcond, MKL_Complex16 *work,double *rwork,int *info);
void    ZTREVC(char *side,char *howmny,void *select,int *n, MKL_Complex16 *t,int *ldt, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *mm,int *m, MKL_Complex16 *work,double *rwork,int *info);
void    ztrevc(char *side,char *howmny,void *select,int *n, MKL_Complex16 *t,int *ldt, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,int *mm,int *m, MKL_Complex16 *work,double *rwork,int *info);
void    ZTREXC(char *compq,int *n, MKL_Complex16 *t,int *ldt, MKL_Complex16 *q,int *ldq,int *ifst,int *ilst,int *info);
void    ztrexc(char *compq,int *n, MKL_Complex16 *t,int *ldt, MKL_Complex16 *q,int *ldq,int *ifst,int *ilst,int *info);
void    ZTRRFS(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ztrrfs(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *x,int *ldx,double *ferr,double *berr, MKL_Complex16 *work,double *rwork,int *info);
void    ZTRSEN(char *job,char *compq,void *select,int *n, MKL_Complex16 *t,int *ldt, MKL_Complex16 *q,int *ldq, MKL_Complex16 *w,int *m,double *s,double *sep, MKL_Complex16 *work,int *lwork,int *info);
void    ztrsen(char *job,char *compq,void *select,int *n, MKL_Complex16 *t,int *ldt, MKL_Complex16 *q,int *ldq, MKL_Complex16 *w,int *m,double *s,double *sep, MKL_Complex16 *work,int *lwork,int *info);
void    ZTRSNA(char *job,char *howmny,void *select,int *n, MKL_Complex16 *t,int *ldt, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,double *s,double *sep,int *mm,int *m, MKL_Complex16 *work,int *ldwork,double *rwork,int *info);
void    ztrsna(char *job,char *howmny,void *select,int *n, MKL_Complex16 *t,int *ldt, MKL_Complex16 *vl,int *ldvl, MKL_Complex16 *vr,int *ldvr,double *s,double *sep,int *mm,int *m, MKL_Complex16 *work,int *ldwork,double *rwork,int *info);
void    ZTRSYL(char *trana,char *tranb,int *isgn,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c,int *ldc,double *scale,int *info);
void    ztrsyl(char *trana,char *tranb,int *isgn,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb, MKL_Complex16 *c,int *ldc,double *scale,int *info);
void    ZTRTI2(char *uplo,char *diag,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ztrti2(char *uplo,char *diag,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ZTRTRI(char *uplo,char *diag,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ztrtri(char *uplo,char *diag,int *n, MKL_Complex16 *a,int *lda,int *info);
void    ZTRTRS(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    ztrtrs(char *uplo,char *trans,char *diag,int *n,int *nrhs, MKL_Complex16 *a,int *lda, MKL_Complex16 *b,int *ldb,int *info);
void    ZTZRQF(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau,int *info);
void    ztzrqf(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau,int *info);
void    ZTZRZF(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ztzrzf(int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNG2L(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zung2l(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZUNG2R(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zung2r(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZUNGBR(char *vect,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zungbr(char *vect,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNGHR(int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zunghr(int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNGL2(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zungl2(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZUNGLQ(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zunglq(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNGQL(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zungql(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNGQR(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zungqr(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNGR2(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    zungr2(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *info);
void    ZUNGRQ(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zungrq(int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNGTR(char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    zungtr(char *uplo,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNM2L(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    zunm2l(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    ZUNM2R(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    zunm2r(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    ZUNMBR(char *vect,char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    zunmbr(char *vect,char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNMHR(char *side,char *trans,int *m,int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    zunmhr(char *side,char *trans,int *m,int *n,int *ilo,int *ihi, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNML2(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    zunml2(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    ZUNMLQ(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    zunmlq(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNMQL(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    zunmql(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNMQR(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    zunmqr(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNMR2(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    zunmr2(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    ZUNMR3(char *side,char *trans,int *m,int *n,int *k,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    zunmr3(char *side,char *trans,int *m,int *n,int *k,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    ZUNMRQ(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    zunmrq(char *side,char *trans,int *m,int *n,int *k, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNMRZ(char *side,char *trans,int *m,int *n,int *k,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    zunmrz(char *side,char *trans,int *m,int *n,int *k,int *l, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    ZUNMTR(char *side,char *uplo,char *trans,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    zunmtr(char *side,char *uplo,char *trans,int *m,int *n, MKL_Complex16 *a,int *lda, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *lwork,int *info);
void    ZUPGTR(char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *tau, MKL_Complex16 *q,int *ldq, MKL_Complex16 *work,int *info);
void    zupgtr(char *uplo,int *n, MKL_Complex16 *ap, MKL_Complex16 *tau, MKL_Complex16 *q,int *ldq, MKL_Complex16 *work,int *info);
void    ZUPMTR(char *side,char *uplo,char *trans,int *m,int *n, MKL_Complex16 *ap, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);
void    zupmtr(char *side,char *uplo,char *trans,int *m,int *n, MKL_Complex16 *ap, MKL_Complex16 *tau, MKL_Complex16 *c,int *ldc, MKL_Complex16 *work,int *info);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _MKL_LAPACK_D_H_ */
